Grammar

    0 $accept: program $end

    1 program: functions
    2        | declarations functions

    3 declarations: declaration
    4             | declarations declaration

    5 declaration: var_type var_decl SEMICOLON
    6            | struct_declaration SEMICOLON

    7 var_decl: simple_declaration
    8         | assignment
    9         | var_decl COMMA var_decl

   10 simple_declaration: %empty
   11                   | identifier

   12 struct_declaration: STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl

   13 inizialization_list: const
   14                    | STRCONST
   15                    | O_CURLY_BRACES inizialization_list COMMA inizialization_list C_CURLY_BRACES
   16                    | inizialization_list COMMA inizialization_list

   17 functions: func_definition
   18          | functions func_definition

   19 @1: %empty

   20 $@2: %empty

   21 func_definition: var_type identifier @1 O_ROUND_BRACES argument_list $@2 C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES

   22 argument_list: %empty
   23              | VOID
   24              | parameter_list

   25 parameter_list: parameter_declaration
   26               | parameter_list COMMA parameter_declaration

   27 parameter_declaration: var_type identifier

   28 body: statements

   29 $@3: %empty

   30 $@4: %empty

   31 body: $@3 declarations $@4 statements

   32 statements: statement
   33           | statements statement

   34 statement: SEMICOLON
   35          | func_call SEMICOLON
   36          | assignment SEMICOLON
   37          | increment SEMICOLON
   38          | printf_stat SEMICOLON
   39          | scanf_stat SEMICOLON
   40          | if_stat
   41          | for_stat
   42          | return_stat SEMICOLON

   43 func_call: identifier O_ROUND_BRACES call_args C_ROUND_BRACES

   44 call_args: %empty
   45          | identifier
   46          | call_args COMMA identifier

   47 assignment: identifier ASSIGN word
   48           | identifier ASSIGN expr
   49           | identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | identifier ASSIGN func_call

   51 expr: expr ADD expr
   52     | expr SUB expr
   53     | expr TIMES expr
   54     | expr DIVIDE expr
   55     | SUB expr
   56     | increment
   57     | expr EQOP expr
   58     | expr RELOP expr
   59     | expr AND expr
   60     | expr OR expr
   61     | NOT expr
   62     | O_ROUND_BRACES expr C_ROUND_BRACES
   63     | number
   64     | identifier

   65 increment: identifier INCR

   66 printf_stat: PRINTF O_ROUND_BRACES word C_ROUND_BRACES
   67            | PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES

   68 printed_var: identifier
   69            | printed_var COMMA identifier

   70 scanf_stat: SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES

   71 retrieved_var: E_COMM identifier
   72              | retrieved_var COMMA E_COMM identifier

   73 if_stat: IF O_ROUND_BRACES expr C_ROUND_BRACES block
   74        | IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block

   75 block: statement
   76      | O_CURLY_BRACES statements C_CURLY_BRACES

   77 for_stat: FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block

   78 init_for: %empty
   79         | assignment
   80         | init_for COMMA init_for

   81 incr_for: expr
   82         | incr_for COMMA expr

   83 return_stat: RETURN
   84            | RETURN const
   85            | RETURN identifier

   86 var_type: VOID
   87         | INT
   88         | FLOAT
   89         | CHAR

   90 identifier: IDENTIFIER
   91           | identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | identifier DOT identifier

   94 const: ICONST
   95      | FCONST
   96      | CCONST

   97 word: CCONST
   98     | STRCONST

   99 number: ICONST
  100       | FCONST


Terminals, with rules where they appear

$end (0) 0
error (256)
O_CURLY_BRACES (258) 12 15 21 49 76
C_CURLY_BRACES (259) 12 15 21 49 76
O_SQUARE_BRACES (260) 91 92
C_SQUARE_BRACES (261) 91 92
O_ROUND_BRACES (262) 21 43 62 66 67 70 73 74 77
C_ROUND_BRACES (263) 21 43 62 66 67 70 73 74 77
DOT (264) 93
COMMA (265) 9 15 16 26 46 67 69 70 72 80 82
SEMICOLON (266) 5 6 34 35 36 37 38 39 42 77
E_COMM (267) 71 72
ASSIGN (268) 47 48 49 50
ADD (269) 51
SUB (270) 52 55
TIMES (271) 53
DIVIDE (272) 54
INCR (273) 65
EQOP (274) 57
RELOP (275) 58
AND (276) 59
OR (277) 60
NOT (278) 61
IF (279) 73 74
ELSE (280) 74
FOR (281) 77
PRINTF (282) 66 67
SCANF (283) 70
IDENTIFIER (284) 90
RETURN (285) 83 84 85
VOID (286) 23 86
INT (287) 87
FLOAT (288) 88
CHAR (289) 89
STRUCT (290) 12
ICONST (291) 91 94 99
FCONST (292) 95 100
CCONST (293) 96 97
STRCONST (294) 14 67 70 98
IFX (295)
REV (296)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1 2, on right: 0
declarations (44)
    on left: 3 4, on right: 2 4 12 31
declaration (45)
    on left: 5 6, on right: 3 4
var_decl (46)
    on left: 7 8 9, on right: 5 9 12
simple_declaration (47)
    on left: 10 11, on right: 7
struct_declaration (48)
    on left: 12, on right: 6
inizialization_list (49)
    on left: 13 14 15 16, on right: 15 16 49
functions (50)
    on left: 17 18, on right: 1 2 18
func_definition (51)
    on left: 21, on right: 17 18
@1 (52)
    on left: 19, on right: 21
$@2 (53)
    on left: 20, on right: 21
argument_list (54)
    on left: 22 23 24, on right: 21
parameter_list (55)
    on left: 25 26, on right: 24 26
parameter_declaration (56)
    on left: 27, on right: 25 26
body (57)
    on left: 28 31, on right: 21
$@3 (58)
    on left: 29, on right: 31
$@4 (59)
    on left: 30, on right: 31
statements (60)
    on left: 32 33, on right: 28 31 33 76
statement (61)
    on left: 34 35 36 37 38 39 40 41 42, on right: 32 33 75
func_call (62)
    on left: 43, on right: 35 50
call_args (63)
    on left: 44 45 46, on right: 43 46
assignment (64)
    on left: 47 48 49 50, on right: 8 36 79
expr (65)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64, on right: 48
    51 52 53 54 55 57 58 59 60 61 62 73 74 77 81 82
increment (66)
    on left: 65, on right: 37 56
printf_stat (67)
    on left: 66 67, on right: 38
printed_var (68)
    on left: 68 69, on right: 67 69
scanf_stat (69)
    on left: 70, on right: 39
retrieved_var (70)
    on left: 71 72, on right: 70 72
if_stat (71)
    on left: 73 74, on right: 40
block (72)
    on left: 75 76, on right: 73 74 77
for_stat (73)
    on left: 77, on right: 41
init_for (74)
    on left: 78 79 80, on right: 77 80
incr_for (75)
    on left: 81 82, on right: 77 82
return_stat (76)
    on left: 83 84 85, on right: 42
var_type (77)
    on left: 86 87 88 89, on right: 5 21 27
identifier (78)
    on left: 90 91 92 93, on right: 11 12 21 27 43 45 46 47 48 49 50
    64 65 68 69 71 72 85 91 92 93
const (79)
    on left: 94 95 96, on right: 13 84
word (80)
    on left: 97 98, on right: 47 66
number (81)
    on left: 99 100, on right: 63


State 0

    0 $accept: . program $end
    1 program: . functions
    2        | . declarations functions
    3 declarations: . declaration
    4             | . declarations declaration
    5 declaration: . var_type var_decl SEMICOLON
    6            | . struct_declaration SEMICOLON
   12 struct_declaration: . STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl
   17 functions: . func_definition
   18          | . functions func_definition
   21 func_definition: . var_type identifier @1 O_ROUND_BRACES argument_list $@2 C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES
   86 var_type: . VOID
   87         | . INT
   88         | . FLOAT
   89         | . CHAR

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    STRUCT  shift, and go to state 5

    program             go to state 6
    declarations        go to state 7
    declaration         go to state 8
    struct_declaration  go to state 9
    functions           go to state 10
    func_definition     go to state 11
    var_type            go to state 12


State 1

   86 var_type: VOID .

    $default  reduce using rule 86 (var_type)


State 2

   87 var_type: INT .

    $default  reduce using rule 87 (var_type)


State 3

   88 var_type: FLOAT .

    $default  reduce using rule 88 (var_type)


State 4

   89 var_type: CHAR .

    $default  reduce using rule 89 (var_type)


State 5

   12 struct_declaration: STRUCT . identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    identifier  go to state 14


State 6

    0 $accept: program . $end

    $end  shift, and go to state 15


State 7

    2 program: declarations . functions
    4 declarations: declarations . declaration
    5 declaration: . var_type var_decl SEMICOLON
    6            | . struct_declaration SEMICOLON
   12 struct_declaration: . STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl
   17 functions: . func_definition
   18          | . functions func_definition
   21 func_definition: . var_type identifier @1 O_ROUND_BRACES argument_list $@2 C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES
   86 var_type: . VOID
   87         | . INT
   88         | . FLOAT
   89         | . CHAR

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    STRUCT  shift, and go to state 5

    declaration         go to state 16
    struct_declaration  go to state 9
    functions           go to state 17
    func_definition     go to state 11
    var_type            go to state 12


State 8

    3 declarations: declaration .

    $default  reduce using rule 3 (declarations)


State 9

    6 declaration: struct_declaration . SEMICOLON

    SEMICOLON  shift, and go to state 18


State 10

    1 program: functions .  [$end]
   18 functions: functions . func_definition
   21 func_definition: . var_type identifier @1 O_ROUND_BRACES argument_list $@2 C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES
   86 var_type: . VOID
   87         | . INT
   88         | . FLOAT
   89         | . CHAR

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4

    $default  reduce using rule 1 (program)

    func_definition  go to state 19
    var_type         go to state 20


State 11

   17 functions: func_definition .

    $default  reduce using rule 17 (functions)


State 12

    5 declaration: var_type . var_decl SEMICOLON
    7 var_decl: . simple_declaration
    8         | . assignment
    9         | . var_decl COMMA var_decl
   10 simple_declaration: . %empty  [COMMA, SEMICOLON]
   11                   | . identifier
   21 func_definition: var_type . identifier @1 O_ROUND_BRACES argument_list $@2 C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES
   47 assignment: . identifier ASSIGN word
   48           | . identifier ASSIGN expr
   49           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | . identifier ASSIGN func_call
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 10 (simple_declaration)

    var_decl            go to state 21
    simple_declaration  go to state 22
    assignment          go to state 23
    identifier          go to state 24


State 13

   90 identifier: IDENTIFIER .

    $default  reduce using rule 90 (identifier)


State 14

   12 struct_declaration: STRUCT identifier . O_CURLY_BRACES declarations C_CURLY_BRACES var_decl
   91 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | identifier . DOT identifier

    O_CURLY_BRACES   shift, and go to state 25
    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27


State 15

    0 $accept: program $end .

    $default  accept


State 16

    4 declarations: declarations declaration .

    $default  reduce using rule 4 (declarations)


State 17

    2 program: declarations functions .  [$end]
   18 functions: functions . func_definition
   21 func_definition: . var_type identifier @1 O_ROUND_BRACES argument_list $@2 C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES
   86 var_type: . VOID
   87         | . INT
   88         | . FLOAT
   89         | . CHAR

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4

    $default  reduce using rule 2 (program)

    func_definition  go to state 19
    var_type         go to state 20


State 18

    6 declaration: struct_declaration SEMICOLON .

    $default  reduce using rule 6 (declaration)


State 19

   18 functions: functions func_definition .

    $default  reduce using rule 18 (functions)


State 20

   21 func_definition: var_type . identifier @1 O_ROUND_BRACES argument_list $@2 C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    identifier  go to state 28


State 21

    5 declaration: var_type var_decl . SEMICOLON
    9 var_decl: var_decl . COMMA var_decl

    COMMA      shift, and go to state 29
    SEMICOLON  shift, and go to state 30


State 22

    7 var_decl: simple_declaration .

    $default  reduce using rule 7 (var_decl)


State 23

    8 var_decl: assignment .

    $default  reduce using rule 8 (var_decl)


State 24

   11 simple_declaration: identifier .  [COMMA, SEMICOLON]
   19 @1: . %empty  [O_ROUND_BRACES]
   21 func_definition: var_type identifier . @1 O_ROUND_BRACES argument_list $@2 C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES
   47 assignment: identifier . ASSIGN word
   48           | identifier . ASSIGN expr
   49           | identifier . ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | identifier . ASSIGN func_call
   91 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27
    ASSIGN           shift, and go to state 31

    O_ROUND_BRACES  reduce using rule 19 (@1)
    $default        reduce using rule 11 (simple_declaration)

    @1  go to state 32


State 25

    3 declarations: . declaration
    4             | . declarations declaration
    5 declaration: . var_type var_decl SEMICOLON
    6            | . struct_declaration SEMICOLON
   12 struct_declaration: . STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl
   12                   | STRUCT identifier O_CURLY_BRACES . declarations C_CURLY_BRACES var_decl
   86 var_type: . VOID
   87         | . INT
   88         | . FLOAT
   89         | . CHAR

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    STRUCT  shift, and go to state 5

    declarations        go to state 33
    declaration         go to state 8
    struct_declaration  go to state 9
    var_type            go to state 34


State 26

   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier O_SQUARE_BRACES . ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier O_SQUARE_BRACES . identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13
    ICONST      shift, and go to state 35

    identifier  go to state 36


State 27

   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier
   93           | identifier DOT . identifier

    IDENTIFIER  shift, and go to state 13

    identifier  go to state 37


State 28

   19 @1: . %empty  [O_ROUND_BRACES]
   21 func_definition: var_type identifier . @1 O_ROUND_BRACES argument_list $@2 C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES
   91 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27

    $default  reduce using rule 19 (@1)

    @1  go to state 32


State 29

    7 var_decl: . simple_declaration
    8         | . assignment
    9         | . var_decl COMMA var_decl
    9         | var_decl COMMA . var_decl
   10 simple_declaration: . %empty  [COMMA, SEMICOLON]
   11                   | . identifier
   47 assignment: . identifier ASSIGN word
   48           | . identifier ASSIGN expr
   49           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | . identifier ASSIGN func_call
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 10 (simple_declaration)

    var_decl            go to state 38
    simple_declaration  go to state 22
    assignment          go to state 23
    identifier          go to state 39


State 30

    5 declaration: var_type var_decl SEMICOLON .

    $default  reduce using rule 5 (declaration)


State 31

   43 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES
   47 assignment: identifier ASSIGN . word
   48           | identifier ASSIGN . expr
   49           | identifier ASSIGN . O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | identifier ASSIGN . func_call
   51 expr: . expr ADD expr
   52     | . expr SUB expr
   53     | . expr TIMES expr
   54     | . expr DIVIDE expr
   55     | . SUB expr
   56     | . increment
   57     | . expr EQOP expr
   58     | . expr RELOP expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . NOT expr
   62     | . O_ROUND_BRACES expr C_ROUND_BRACES
   63     | . number
   64     | . identifier
   65 increment: . identifier INCR
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier
   97 word: . CCONST
   98     | . STRCONST
   99 number: . ICONST
  100       | . FCONST

    O_CURLY_BRACES  shift, and go to state 40
    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45
    CCONST          shift, and go to state 46
    STRCONST        shift, and go to state 47

    func_call   go to state 48
    expr        go to state 49
    increment   go to state 50
    identifier  go to state 51
    word        go to state 52
    number      go to state 53


State 32

   21 func_definition: var_type identifier @1 . O_ROUND_BRACES argument_list $@2 C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES

    O_ROUND_BRACES  shift, and go to state 54


State 33

    4 declarations: declarations . declaration
    5 declaration: . var_type var_decl SEMICOLON
    6            | . struct_declaration SEMICOLON
   12 struct_declaration: . STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl
   12                   | STRUCT identifier O_CURLY_BRACES declarations . C_CURLY_BRACES var_decl
   86 var_type: . VOID
   87         | . INT
   88         | . FLOAT
   89         | . CHAR

    C_CURLY_BRACES  shift, and go to state 55
    VOID            shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    CHAR            shift, and go to state 4
    STRUCT          shift, and go to state 5

    declaration         go to state 16
    struct_declaration  go to state 9
    var_type            go to state 34


State 34

    5 declaration: var_type . var_decl SEMICOLON
    7 var_decl: . simple_declaration
    8         | . assignment
    9         | . var_decl COMMA var_decl
   10 simple_declaration: . %empty  [COMMA, SEMICOLON]
   11                   | . identifier
   47 assignment: . identifier ASSIGN word
   48           | . identifier ASSIGN expr
   49           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | . identifier ASSIGN func_call
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 10 (simple_declaration)

    var_decl            go to state 21
    simple_declaration  go to state 22
    assignment          go to state 23
    identifier          go to state 39


State 35

   91 identifier: identifier O_SQUARE_BRACES ICONST . C_SQUARE_BRACES

    C_SQUARE_BRACES  shift, and go to state 56


State 36

   91 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier O_SQUARE_BRACES identifier . C_SQUARE_BRACES
   93           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    C_SQUARE_BRACES  shift, and go to state 57
    DOT              shift, and go to state 27


State 37

   91 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | identifier . DOT identifier
   93           | identifier DOT identifier .  [O_CURLY_BRACES, O_SQUARE_BRACES, C_SQUARE_BRACES, O_ROUND_BRACES, C_ROUND_BRACES, DOT, COMMA, SEMICOLON, ASSIGN, ADD, SUB, TIMES, DIVIDE, INCR, EQOP, RELOP, AND, OR]

    $default  reduce using rule 93 (identifier)

    Conflict between rule 93 and token O_SQUARE_BRACES resolved as reduce (%left O_SQUARE_BRACES).
    Conflict between rule 93 and token DOT resolved as reduce (%left DOT).


State 38

    9 var_decl: var_decl . COMMA var_decl
    9         | var_decl COMMA var_decl .  [COMMA, SEMICOLON]

    $default  reduce using rule 9 (var_decl)

    Conflict between rule 9 and token COMMA resolved as reduce (%left COMMA).


State 39

   11 simple_declaration: identifier .  [COMMA, SEMICOLON]
   47 assignment: identifier . ASSIGN word
   48           | identifier . ASSIGN expr
   49           | identifier . ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | identifier . ASSIGN func_call
   91 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27
    ASSIGN           shift, and go to state 31

    $default  reduce using rule 11 (simple_declaration)


State 40

   13 inizialization_list: . const
   14                    | . STRCONST
   15                    | . O_CURLY_BRACES inizialization_list COMMA inizialization_list C_CURLY_BRACES
   16                    | . inizialization_list COMMA inizialization_list
   49 assignment: identifier ASSIGN O_CURLY_BRACES . inizialization_list C_CURLY_BRACES
   94 const: . ICONST
   95      | . FCONST
   96      | . CCONST

    O_CURLY_BRACES  shift, and go to state 58
    ICONST          shift, and go to state 59
    FCONST          shift, and go to state 60
    CCONST          shift, and go to state 61
    STRCONST        shift, and go to state 62

    inizialization_list  go to state 63
    const                go to state 64


State 41

   51 expr: . expr ADD expr
   52     | . expr SUB expr
   53     | . expr TIMES expr
   54     | . expr DIVIDE expr
   55     | . SUB expr
   56     | . increment
   57     | . expr EQOP expr
   58     | . expr RELOP expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . NOT expr
   62     | . O_ROUND_BRACES expr C_ROUND_BRACES
   62     | O_ROUND_BRACES . expr C_ROUND_BRACES
   63     | . number
   64     | . identifier
   65 increment: . identifier INCR
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier
   99 number: . ICONST
  100       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 65
    increment   go to state 50
    identifier  go to state 66
    number      go to state 53


State 42

   51 expr: . expr ADD expr
   52     | . expr SUB expr
   53     | . expr TIMES expr
   54     | . expr DIVIDE expr
   55     | . SUB expr
   55     | SUB . expr
   56     | . increment
   57     | . expr EQOP expr
   58     | . expr RELOP expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . NOT expr
   62     | . O_ROUND_BRACES expr C_ROUND_BRACES
   63     | . number
   64     | . identifier
   65 increment: . identifier INCR
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier
   99 number: . ICONST
  100       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 67
    increment   go to state 50
    identifier  go to state 66
    number      go to state 53


State 43

   51 expr: . expr ADD expr
   52     | . expr SUB expr
   53     | . expr TIMES expr
   54     | . expr DIVIDE expr
   55     | . SUB expr
   56     | . increment
   57     | . expr EQOP expr
   58     | . expr RELOP expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . NOT expr
   61     | NOT . expr
   62     | . O_ROUND_BRACES expr C_ROUND_BRACES
   63     | . number
   64     | . identifier
   65 increment: . identifier INCR
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier
   99 number: . ICONST
  100       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 68
    increment   go to state 50
    identifier  go to state 66
    number      go to state 53


State 44

   99 number: ICONST .

    $default  reduce using rule 99 (number)


State 45

  100 number: FCONST .

    $default  reduce using rule 100 (number)


State 46

   97 word: CCONST .

    $default  reduce using rule 97 (word)


State 47

   98 word: STRCONST .

    $default  reduce using rule 98 (word)


State 48

   50 assignment: identifier ASSIGN func_call .

    $default  reduce using rule 50 (assignment)


State 49

   48 assignment: identifier ASSIGN expr .  [COMMA, SEMICOLON]
   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . TIMES expr
   54     | expr . DIVIDE expr
   57     | expr . EQOP expr
   58     | expr . RELOP expr
   59     | expr . AND expr
   60     | expr . OR expr

    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    TIMES   shift, and go to state 71
    DIVIDE  shift, and go to state 72
    EQOP    shift, and go to state 73
    RELOP   shift, and go to state 74
    AND     shift, and go to state 75
    OR      shift, and go to state 76

    $default  reduce using rule 48 (assignment)


State 50

   56 expr: increment .

    $default  reduce using rule 56 (expr)


State 51

   43 func_call: identifier . O_ROUND_BRACES call_args C_ROUND_BRACES
   64 expr: identifier .  [COMMA, SEMICOLON, ADD, SUB, TIMES, DIVIDE, EQOP, RELOP, AND, OR]
   65 increment: identifier . INCR
   91 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    O_ROUND_BRACES   shift, and go to state 77
    DOT              shift, and go to state 27
    INCR             shift, and go to state 78

    $default  reduce using rule 64 (expr)


State 52

   47 assignment: identifier ASSIGN word .

    $default  reduce using rule 47 (assignment)


State 53

   63 expr: number .

    $default  reduce using rule 63 (expr)


State 54

   21 func_definition: var_type identifier @1 O_ROUND_BRACES . argument_list $@2 C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES
   22 argument_list: . %empty  [C_ROUND_BRACES]
   23              | . VOID
   24              | . parameter_list
   25 parameter_list: . parameter_declaration
   26               | . parameter_list COMMA parameter_declaration
   27 parameter_declaration: . var_type identifier
   86 var_type: . VOID
   87         | . INT
   88         | . FLOAT
   89         | . CHAR

    VOID   shift, and go to state 79
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4

    $default  reduce using rule 22 (argument_list)

    argument_list          go to state 80
    parameter_list         go to state 81
    parameter_declaration  go to state 82
    var_type               go to state 83


State 55

    7 var_decl: . simple_declaration
    8         | . assignment
    9         | . var_decl COMMA var_decl
   10 simple_declaration: . %empty  [COMMA, SEMICOLON]
   11                   | . identifier
   12 struct_declaration: STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES . var_decl
   47 assignment: . identifier ASSIGN word
   48           | . identifier ASSIGN expr
   49           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | . identifier ASSIGN func_call
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 10 (simple_declaration)

    var_decl            go to state 84
    simple_declaration  go to state 22
    assignment          go to state 23
    identifier          go to state 39


State 56

   91 identifier: identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES .

    $default  reduce using rule 91 (identifier)


State 57

   92 identifier: identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES .

    $default  reduce using rule 92 (identifier)


State 58

   13 inizialization_list: . const
   14                    | . STRCONST
   15                    | . O_CURLY_BRACES inizialization_list COMMA inizialization_list C_CURLY_BRACES
   15                    | O_CURLY_BRACES . inizialization_list COMMA inizialization_list C_CURLY_BRACES
   16                    | . inizialization_list COMMA inizialization_list
   94 const: . ICONST
   95      | . FCONST
   96      | . CCONST

    O_CURLY_BRACES  shift, and go to state 58
    ICONST          shift, and go to state 59
    FCONST          shift, and go to state 60
    CCONST          shift, and go to state 61
    STRCONST        shift, and go to state 62

    inizialization_list  go to state 85
    const                go to state 64


State 59

   94 const: ICONST .

    $default  reduce using rule 94 (const)


State 60

   95 const: FCONST .

    $default  reduce using rule 95 (const)


State 61

   96 const: CCONST .

    $default  reduce using rule 96 (const)


State 62

   14 inizialization_list: STRCONST .

    $default  reduce using rule 14 (inizialization_list)


State 63

   16 inizialization_list: inizialization_list . COMMA inizialization_list
   49 assignment: identifier ASSIGN O_CURLY_BRACES inizialization_list . C_CURLY_BRACES

    C_CURLY_BRACES  shift, and go to state 86
    COMMA           shift, and go to state 87


State 64

   13 inizialization_list: const .

    $default  reduce using rule 13 (inizialization_list)


State 65

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . TIMES expr
   54     | expr . DIVIDE expr
   57     | expr . EQOP expr
   58     | expr . RELOP expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | O_ROUND_BRACES expr . C_ROUND_BRACES

    C_ROUND_BRACES  shift, and go to state 88
    ADD             shift, and go to state 69
    SUB             shift, and go to state 70
    TIMES           shift, and go to state 71
    DIVIDE          shift, and go to state 72
    EQOP            shift, and go to state 73
    RELOP           shift, and go to state 74
    AND             shift, and go to state 75
    OR              shift, and go to state 76


State 66

   64 expr: identifier .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, TIMES, DIVIDE, EQOP, RELOP, AND, OR]
   65 increment: identifier . INCR
   91 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27
    INCR             shift, and go to state 78

    $default  reduce using rule 64 (expr)


State 67

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . TIMES expr
   54     | expr . DIVIDE expr
   55     | SUB expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, TIMES, DIVIDE, EQOP, RELOP, AND, OR]
   57     | expr . EQOP expr
   58     | expr . RELOP expr
   59     | expr . AND expr
   60     | expr . OR expr

    $default  reduce using rule 55 (expr)

    Conflict between rule 55 and token ADD resolved as reduce (ADD < REV).
    Conflict between rule 55 and token SUB resolved as reduce (SUB < REV).
    Conflict between rule 55 and token TIMES resolved as reduce (TIMES < REV).
    Conflict between rule 55 and token DIVIDE resolved as reduce (DIVIDE < REV).
    Conflict between rule 55 and token EQOP resolved as reduce (EQOP < REV).
    Conflict between rule 55 and token RELOP resolved as reduce (RELOP < REV).
    Conflict between rule 55 and token AND resolved as reduce (AND < REV).
    Conflict between rule 55 and token OR resolved as reduce (OR < REV).


State 68

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . TIMES expr
   54     | expr . DIVIDE expr
   57     | expr . EQOP expr
   58     | expr . RELOP expr
   59     | expr . AND expr
   60     | expr . OR expr
   61     | NOT expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, TIMES, DIVIDE, EQOP, RELOP, AND, OR]

    $default  reduce using rule 61 (expr)

    Conflict between rule 61 and token ADD resolved as reduce (ADD < NOT).
    Conflict between rule 61 and token SUB resolved as reduce (SUB < NOT).
    Conflict between rule 61 and token TIMES resolved as reduce (TIMES < NOT).
    Conflict between rule 61 and token DIVIDE resolved as reduce (DIVIDE < NOT).
    Conflict between rule 61 and token EQOP resolved as reduce (EQOP < NOT).
    Conflict between rule 61 and token RELOP resolved as reduce (RELOP < NOT).
    Conflict between rule 61 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 61 and token OR resolved as reduce (OR < NOT).


State 69

   51 expr: . expr ADD expr
   51     | expr ADD . expr
   52     | . expr SUB expr
   53     | . expr TIMES expr
   54     | . expr DIVIDE expr
   55     | . SUB expr
   56     | . increment
   57     | . expr EQOP expr
   58     | . expr RELOP expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . NOT expr
   62     | . O_ROUND_BRACES expr C_ROUND_BRACES
   63     | . number
   64     | . identifier
   65 increment: . identifier INCR
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier
   99 number: . ICONST
  100       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 89
    increment   go to state 50
    identifier  go to state 66
    number      go to state 53


State 70

   51 expr: . expr ADD expr
   52     | . expr SUB expr
   52     | expr SUB . expr
   53     | . expr TIMES expr
   54     | . expr DIVIDE expr
   55     | . SUB expr
   56     | . increment
   57     | . expr EQOP expr
   58     | . expr RELOP expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . NOT expr
   62     | . O_ROUND_BRACES expr C_ROUND_BRACES
   63     | . number
   64     | . identifier
   65 increment: . identifier INCR
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier
   99 number: . ICONST
  100       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 90
    increment   go to state 50
    identifier  go to state 66
    number      go to state 53


State 71

   51 expr: . expr ADD expr
   52     | . expr SUB expr
   53     | . expr TIMES expr
   53     | expr TIMES . expr
   54     | . expr DIVIDE expr
   55     | . SUB expr
   56     | . increment
   57     | . expr EQOP expr
   58     | . expr RELOP expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . NOT expr
   62     | . O_ROUND_BRACES expr C_ROUND_BRACES
   63     | . number
   64     | . identifier
   65 increment: . identifier INCR
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier
   99 number: . ICONST
  100       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 91
    increment   go to state 50
    identifier  go to state 66
    number      go to state 53


State 72

   51 expr: . expr ADD expr
   52     | . expr SUB expr
   53     | . expr TIMES expr
   54     | . expr DIVIDE expr
   54     | expr DIVIDE . expr
   55     | . SUB expr
   56     | . increment
   57     | . expr EQOP expr
   58     | . expr RELOP expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . NOT expr
   62     | . O_ROUND_BRACES expr C_ROUND_BRACES
   63     | . number
   64     | . identifier
   65 increment: . identifier INCR
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier
   99 number: . ICONST
  100       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 92
    increment   go to state 50
    identifier  go to state 66
    number      go to state 53


State 73

   51 expr: . expr ADD expr
   52     | . expr SUB expr
   53     | . expr TIMES expr
   54     | . expr DIVIDE expr
   55     | . SUB expr
   56     | . increment
   57     | . expr EQOP expr
   57     | expr EQOP . expr
   58     | . expr RELOP expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . NOT expr
   62     | . O_ROUND_BRACES expr C_ROUND_BRACES
   63     | . number
   64     | . identifier
   65 increment: . identifier INCR
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier
   99 number: . ICONST
  100       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 93
    increment   go to state 50
    identifier  go to state 66
    number      go to state 53


State 74

   51 expr: . expr ADD expr
   52     | . expr SUB expr
   53     | . expr TIMES expr
   54     | . expr DIVIDE expr
   55     | . SUB expr
   56     | . increment
   57     | . expr EQOP expr
   58     | . expr RELOP expr
   58     | expr RELOP . expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . NOT expr
   62     | . O_ROUND_BRACES expr C_ROUND_BRACES
   63     | . number
   64     | . identifier
   65 increment: . identifier INCR
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier
   99 number: . ICONST
  100       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 94
    increment   go to state 50
    identifier  go to state 66
    number      go to state 53


State 75

   51 expr: . expr ADD expr
   52     | . expr SUB expr
   53     | . expr TIMES expr
   54     | . expr DIVIDE expr
   55     | . SUB expr
   56     | . increment
   57     | . expr EQOP expr
   58     | . expr RELOP expr
   59     | . expr AND expr
   59     | expr AND . expr
   60     | . expr OR expr
   61     | . NOT expr
   62     | . O_ROUND_BRACES expr C_ROUND_BRACES
   63     | . number
   64     | . identifier
   65 increment: . identifier INCR
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier
   99 number: . ICONST
  100       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 95
    increment   go to state 50
    identifier  go to state 66
    number      go to state 53


State 76

   51 expr: . expr ADD expr
   52     | . expr SUB expr
   53     | . expr TIMES expr
   54     | . expr DIVIDE expr
   55     | . SUB expr
   56     | . increment
   57     | . expr EQOP expr
   58     | . expr RELOP expr
   59     | . expr AND expr
   60     | . expr OR expr
   60     | expr OR . expr
   61     | . NOT expr
   62     | . O_ROUND_BRACES expr C_ROUND_BRACES
   63     | . number
   64     | . identifier
   65 increment: . identifier INCR
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier
   99 number: . ICONST
  100       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 96
    increment   go to state 50
    identifier  go to state 66
    number      go to state 53


State 77

   43 func_call: identifier O_ROUND_BRACES . call_args C_ROUND_BRACES
   44 call_args: . %empty  [C_ROUND_BRACES, COMMA]
   45          | . identifier
   46          | . call_args COMMA identifier
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 44 (call_args)

    call_args   go to state 97
    identifier  go to state 98


State 78

   65 increment: identifier INCR .

    $default  reduce using rule 65 (increment)


State 79

   23 argument_list: VOID .  [C_ROUND_BRACES]
   86 var_type: VOID .  [IDENTIFIER]

    IDENTIFIER  reduce using rule 86 (var_type)
    $default    reduce using rule 23 (argument_list)


State 80

   20 $@2: . %empty
   21 func_definition: var_type identifier @1 O_ROUND_BRACES argument_list . $@2 C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES

    $default  reduce using rule 20 ($@2)

    $@2  go to state 99


State 81

   24 argument_list: parameter_list .  [C_ROUND_BRACES]
   26 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 100

    $default  reduce using rule 24 (argument_list)


State 82

   25 parameter_list: parameter_declaration .

    $default  reduce using rule 25 (parameter_list)


State 83

   27 parameter_declaration: var_type . identifier
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    identifier  go to state 101


State 84

    9 var_decl: var_decl . COMMA var_decl
   12 struct_declaration: STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl .  [SEMICOLON]

    COMMA  shift, and go to state 29

    $default  reduce using rule 12 (struct_declaration)


State 85

   15 inizialization_list: O_CURLY_BRACES inizialization_list . COMMA inizialization_list C_CURLY_BRACES
   16                    | inizialization_list . COMMA inizialization_list

    COMMA  shift, and go to state 102


State 86

   49 assignment: identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES .

    $default  reduce using rule 49 (assignment)


State 87

   13 inizialization_list: . const
   14                    | . STRCONST
   15                    | . O_CURLY_BRACES inizialization_list COMMA inizialization_list C_CURLY_BRACES
   16                    | . inizialization_list COMMA inizialization_list
   16                    | inizialization_list COMMA . inizialization_list
   94 const: . ICONST
   95      | . FCONST
   96      | . CCONST

    O_CURLY_BRACES  shift, and go to state 58
    ICONST          shift, and go to state 59
    FCONST          shift, and go to state 60
    CCONST          shift, and go to state 61
    STRCONST        shift, and go to state 62

    inizialization_list  go to state 103
    const                go to state 64


State 88

   62 expr: O_ROUND_BRACES expr C_ROUND_BRACES .

    $default  reduce using rule 62 (expr)


State 89

   51 expr: expr . ADD expr
   51     | expr ADD expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, EQOP, RELOP, AND, OR]
   52     | expr . SUB expr
   53     | expr . TIMES expr
   54     | expr . DIVIDE expr
   57     | expr . EQOP expr
   58     | expr . RELOP expr
   59     | expr . AND expr
   60     | expr . OR expr

    TIMES   shift, and go to state 71
    DIVIDE  shift, and go to state 72

    $default  reduce using rule 51 (expr)

    Conflict between rule 51 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 51 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 51 and token TIMES resolved as shift (ADD < TIMES).
    Conflict between rule 51 and token DIVIDE resolved as shift (ADD < DIVIDE).
    Conflict between rule 51 and token EQOP resolved as reduce (EQOP < ADD).
    Conflict between rule 51 and token RELOP resolved as reduce (RELOP < ADD).
    Conflict between rule 51 and token AND resolved as reduce (AND < ADD).
    Conflict between rule 51 and token OR resolved as reduce (OR < ADD).


State 90

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   52     | expr SUB expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, EQOP, RELOP, AND, OR]
   53     | expr . TIMES expr
   54     | expr . DIVIDE expr
   57     | expr . EQOP expr
   58     | expr . RELOP expr
   59     | expr . AND expr
   60     | expr . OR expr

    TIMES   shift, and go to state 71
    DIVIDE  shift, and go to state 72

    $default  reduce using rule 52 (expr)

    Conflict between rule 52 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 52 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 52 and token TIMES resolved as shift (SUB < TIMES).
    Conflict between rule 52 and token DIVIDE resolved as shift (SUB < DIVIDE).
    Conflict between rule 52 and token EQOP resolved as reduce (EQOP < SUB).
    Conflict between rule 52 and token RELOP resolved as reduce (RELOP < SUB).
    Conflict between rule 52 and token AND resolved as reduce (AND < SUB).
    Conflict between rule 52 and token OR resolved as reduce (OR < SUB).


State 91

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . TIMES expr
   53     | expr TIMES expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, TIMES, DIVIDE, EQOP, RELOP, AND, OR]
   54     | expr . DIVIDE expr
   57     | expr . EQOP expr
   58     | expr . RELOP expr
   59     | expr . AND expr
   60     | expr . OR expr

    $default  reduce using rule 53 (expr)

    Conflict between rule 53 and token ADD resolved as reduce (ADD < TIMES).
    Conflict between rule 53 and token SUB resolved as reduce (SUB < TIMES).
    Conflict between rule 53 and token TIMES resolved as reduce (%left TIMES).
    Conflict between rule 53 and token DIVIDE resolved as reduce (%left DIVIDE).
    Conflict between rule 53 and token EQOP resolved as reduce (EQOP < TIMES).
    Conflict between rule 53 and token RELOP resolved as reduce (RELOP < TIMES).
    Conflict between rule 53 and token AND resolved as reduce (AND < TIMES).
    Conflict between rule 53 and token OR resolved as reduce (OR < TIMES).


State 92

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . TIMES expr
   54     | expr . DIVIDE expr
   54     | expr DIVIDE expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, TIMES, DIVIDE, EQOP, RELOP, AND, OR]
   57     | expr . EQOP expr
   58     | expr . RELOP expr
   59     | expr . AND expr
   60     | expr . OR expr

    $default  reduce using rule 54 (expr)

    Conflict between rule 54 and token ADD resolved as reduce (ADD < DIVIDE).
    Conflict between rule 54 and token SUB resolved as reduce (SUB < DIVIDE).
    Conflict between rule 54 and token TIMES resolved as reduce (%left TIMES).
    Conflict between rule 54 and token DIVIDE resolved as reduce (%left DIVIDE).
    Conflict between rule 54 and token EQOP resolved as reduce (EQOP < DIVIDE).
    Conflict between rule 54 and token RELOP resolved as reduce (RELOP < DIVIDE).
    Conflict between rule 54 and token AND resolved as reduce (AND < DIVIDE).
    Conflict between rule 54 and token OR resolved as reduce (OR < DIVIDE).


State 93

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . TIMES expr
   54     | expr . DIVIDE expr
   57     | expr . EQOP expr
   57     | expr EQOP expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, EQOP, AND, OR]
   58     | expr . RELOP expr
   59     | expr . AND expr
   60     | expr . OR expr

    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    TIMES   shift, and go to state 71
    DIVIDE  shift, and go to state 72
    RELOP   shift, and go to state 74

    $default  reduce using rule 57 (expr)

    Conflict between rule 57 and token ADD resolved as shift (EQOP < ADD).
    Conflict between rule 57 and token SUB resolved as shift (EQOP < SUB).
    Conflict between rule 57 and token TIMES resolved as shift (EQOP < TIMES).
    Conflict between rule 57 and token DIVIDE resolved as shift (EQOP < DIVIDE).
    Conflict between rule 57 and token EQOP resolved as reduce (%left EQOP).
    Conflict between rule 57 and token RELOP resolved as shift (EQOP < RELOP).
    Conflict between rule 57 and token AND resolved as reduce (AND < EQOP).
    Conflict between rule 57 and token OR resolved as reduce (OR < EQOP).


State 94

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . TIMES expr
   54     | expr . DIVIDE expr
   57     | expr . EQOP expr
   58     | expr . RELOP expr
   58     | expr RELOP expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, EQOP, RELOP, AND, OR]
   59     | expr . AND expr
   60     | expr . OR expr

    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    TIMES   shift, and go to state 71
    DIVIDE  shift, and go to state 72

    $default  reduce using rule 58 (expr)

    Conflict between rule 58 and token ADD resolved as shift (RELOP < ADD).
    Conflict between rule 58 and token SUB resolved as shift (RELOP < SUB).
    Conflict between rule 58 and token TIMES resolved as shift (RELOP < TIMES).
    Conflict between rule 58 and token DIVIDE resolved as shift (RELOP < DIVIDE).
    Conflict between rule 58 and token EQOP resolved as reduce (EQOP < RELOP).
    Conflict between rule 58 and token RELOP resolved as reduce (%left RELOP).
    Conflict between rule 58 and token AND resolved as reduce (AND < RELOP).
    Conflict between rule 58 and token OR resolved as reduce (OR < RELOP).


State 95

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . TIMES expr
   54     | expr . DIVIDE expr
   57     | expr . EQOP expr
   58     | expr . RELOP expr
   59     | expr . AND expr
   59     | expr AND expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, AND, OR]
   60     | expr . OR expr

    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    TIMES   shift, and go to state 71
    DIVIDE  shift, and go to state 72
    EQOP    shift, and go to state 73
    RELOP   shift, and go to state 74

    $default  reduce using rule 59 (expr)

    Conflict between rule 59 and token ADD resolved as shift (AND < ADD).
    Conflict between rule 59 and token SUB resolved as shift (AND < SUB).
    Conflict between rule 59 and token TIMES resolved as shift (AND < TIMES).
    Conflict between rule 59 and token DIVIDE resolved as shift (AND < DIVIDE).
    Conflict between rule 59 and token EQOP resolved as shift (AND < EQOP).
    Conflict between rule 59 and token RELOP resolved as shift (AND < RELOP).
    Conflict between rule 59 and token AND resolved as reduce (%left AND).
    Conflict between rule 59 and token OR resolved as reduce (OR < AND).


State 96

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . TIMES expr
   54     | expr . DIVIDE expr
   57     | expr . EQOP expr
   58     | expr . RELOP expr
   59     | expr . AND expr
   60     | expr . OR expr
   60     | expr OR expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, OR]

    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    TIMES   shift, and go to state 71
    DIVIDE  shift, and go to state 72
    EQOP    shift, and go to state 73
    RELOP   shift, and go to state 74
    AND     shift, and go to state 75

    $default  reduce using rule 60 (expr)

    Conflict between rule 60 and token ADD resolved as shift (OR < ADD).
    Conflict between rule 60 and token SUB resolved as shift (OR < SUB).
    Conflict between rule 60 and token TIMES resolved as shift (OR < TIMES).
    Conflict between rule 60 and token DIVIDE resolved as shift (OR < DIVIDE).
    Conflict between rule 60 and token EQOP resolved as shift (OR < EQOP).
    Conflict between rule 60 and token RELOP resolved as shift (OR < RELOP).
    Conflict between rule 60 and token AND resolved as shift (OR < AND).
    Conflict between rule 60 and token OR resolved as reduce (%left OR).


State 97

   43 func_call: identifier O_ROUND_BRACES call_args . C_ROUND_BRACES
   46 call_args: call_args . COMMA identifier

    C_ROUND_BRACES  shift, and go to state 104
    COMMA           shift, and go to state 105


State 98

   45 call_args: identifier .  [C_ROUND_BRACES, COMMA]
   91 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27

    $default  reduce using rule 45 (call_args)


State 99

   21 func_definition: var_type identifier @1 O_ROUND_BRACES argument_list $@2 . C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES

    C_ROUND_BRACES  shift, and go to state 106


State 100

   26 parameter_list: parameter_list COMMA . parameter_declaration
   27 parameter_declaration: . var_type identifier
   86 var_type: . VOID
   87         | . INT
   88         | . FLOAT
   89         | . CHAR

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4

    parameter_declaration  go to state 107
    var_type               go to state 83


State 101

   27 parameter_declaration: var_type identifier .  [C_ROUND_BRACES, COMMA]
   91 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27

    $default  reduce using rule 27 (parameter_declaration)


State 102

   13 inizialization_list: . const
   14                    | . STRCONST
   15                    | . O_CURLY_BRACES inizialization_list COMMA inizialization_list C_CURLY_BRACES
   15                    | O_CURLY_BRACES inizialization_list COMMA . inizialization_list C_CURLY_BRACES
   16                    | . inizialization_list COMMA inizialization_list
   16                    | inizialization_list COMMA . inizialization_list
   94 const: . ICONST
   95      | . FCONST
   96      | . CCONST

    O_CURLY_BRACES  shift, and go to state 58
    ICONST          shift, and go to state 59
    FCONST          shift, and go to state 60
    CCONST          shift, and go to state 61
    STRCONST        shift, and go to state 62

    inizialization_list  go to state 108
    const                go to state 64


State 103

   16 inizialization_list: inizialization_list . COMMA inizialization_list
   16                    | inizialization_list COMMA inizialization_list .  [C_CURLY_BRACES, COMMA]

    $default  reduce using rule 16 (inizialization_list)

    Conflict between rule 16 and token COMMA resolved as reduce (%left COMMA).


State 104

   43 func_call: identifier O_ROUND_BRACES call_args C_ROUND_BRACES .

    $default  reduce using rule 43 (func_call)


State 105

   46 call_args: call_args COMMA . identifier
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    identifier  go to state 109


State 106

   21 func_definition: var_type identifier @1 O_ROUND_BRACES argument_list $@2 C_ROUND_BRACES . O_CURLY_BRACES body C_CURLY_BRACES

    O_CURLY_BRACES  shift, and go to state 110


State 107

   26 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 26 (parameter_list)


State 108

   15 inizialization_list: O_CURLY_BRACES inizialization_list COMMA inizialization_list . C_CURLY_BRACES
   16                    | inizialization_list . COMMA inizialization_list
   16                    | inizialization_list COMMA inizialization_list .  [COMMA]

    C_CURLY_BRACES  shift, and go to state 111

    $default  reduce using rule 16 (inizialization_list)

    Conflict between rule 16 and token COMMA resolved as reduce (%left COMMA).


State 109

   46 call_args: call_args COMMA identifier .  [C_ROUND_BRACES, COMMA]
   91 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27

    $default  reduce using rule 46 (call_args)


State 110

   21 func_definition: var_type identifier @1 O_ROUND_BRACES argument_list $@2 C_ROUND_BRACES O_CURLY_BRACES . body C_CURLY_BRACES
   28 body: . statements
   29 $@3: . %empty  [VOID, INT, FLOAT, CHAR, STRUCT]
   31 body: . $@3 declarations $@4 statements
   32 statements: . statement
   33           | . statements statement
   34 statement: . SEMICOLON
   35          | . func_call SEMICOLON
   36          | . assignment SEMICOLON
   37          | . increment SEMICOLON
   38          | . printf_stat SEMICOLON
   39          | . scanf_stat SEMICOLON
   40          | . if_stat
   41          | . for_stat
   42          | . return_stat SEMICOLON
   43 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES
   47 assignment: . identifier ASSIGN word
   48           | . identifier ASSIGN expr
   49           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | . identifier ASSIGN func_call
   65 increment: . identifier INCR
   66 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES
   67            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES
   70 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES
   73 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block
   74        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block
   77 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   83 return_stat: . RETURN
   84            | . RETURN const
   85            | . RETURN identifier
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    SEMICOLON   shift, and go to state 112
    IF          shift, and go to state 113
    FOR         shift, and go to state 114
    PRINTF      shift, and go to state 115
    SCANF       shift, and go to state 116
    IDENTIFIER  shift, and go to state 13
    RETURN      shift, and go to state 117

    $default  reduce using rule 29 ($@3)

    body         go to state 118
    $@3          go to state 119
    statements   go to state 120
    statement    go to state 121
    func_call    go to state 122
    assignment   go to state 123
    increment    go to state 124
    printf_stat  go to state 125
    scanf_stat   go to state 126
    if_stat      go to state 127
    for_stat     go to state 128
    return_stat  go to state 129
    identifier   go to state 130


State 111

   15 inizialization_list: O_CURLY_BRACES inizialization_list COMMA inizialization_list C_CURLY_BRACES .

    $default  reduce using rule 15 (inizialization_list)


State 112

   34 statement: SEMICOLON .

    $default  reduce using rule 34 (statement)


State 113

   73 if_stat: IF . O_ROUND_BRACES expr C_ROUND_BRACES block
   74        | IF . O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block

    O_ROUND_BRACES  shift, and go to state 131


State 114

   77 for_stat: FOR . O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block

    O_ROUND_BRACES  shift, and go to state 132


State 115

   66 printf_stat: PRINTF . O_ROUND_BRACES word C_ROUND_BRACES
   67            | PRINTF . O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES

    O_ROUND_BRACES  shift, and go to state 133


State 116

   70 scanf_stat: SCANF . O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES

    O_ROUND_BRACES  shift, and go to state 134


State 117

   83 return_stat: RETURN .  [SEMICOLON]
   84            | RETURN . const
   85            | RETURN . identifier
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier
   94 const: . ICONST
   95      | . FCONST
   96      | . CCONST

    IDENTIFIER  shift, and go to state 13
    ICONST      shift, and go to state 59
    FCONST      shift, and go to state 60
    CCONST      shift, and go to state 61

    $default  reduce using rule 83 (return_stat)

    identifier  go to state 135
    const       go to state 136


State 118

   21 func_definition: var_type identifier @1 O_ROUND_BRACES argument_list $@2 C_ROUND_BRACES O_CURLY_BRACES body . C_CURLY_BRACES

    C_CURLY_BRACES  shift, and go to state 137


State 119

    3 declarations: . declaration
    4             | . declarations declaration
    5 declaration: . var_type var_decl SEMICOLON
    6            | . struct_declaration SEMICOLON
   12 struct_declaration: . STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl
   31 body: $@3 . declarations $@4 statements
   86 var_type: . VOID
   87         | . INT
   88         | . FLOAT
   89         | . CHAR

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    STRUCT  shift, and go to state 5

    declarations        go to state 138
    declaration         go to state 8
    struct_declaration  go to state 9
    var_type            go to state 34


State 120

   28 body: statements .  [C_CURLY_BRACES]
   33 statements: statements . statement
   34 statement: . SEMICOLON
   35          | . func_call SEMICOLON
   36          | . assignment SEMICOLON
   37          | . increment SEMICOLON
   38          | . printf_stat SEMICOLON
   39          | . scanf_stat SEMICOLON
   40          | . if_stat
   41          | . for_stat
   42          | . return_stat SEMICOLON
   43 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES
   47 assignment: . identifier ASSIGN word
   48           | . identifier ASSIGN expr
   49           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | . identifier ASSIGN func_call
   65 increment: . identifier INCR
   66 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES
   67            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES
   70 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES
   73 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block
   74        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block
   77 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   83 return_stat: . RETURN
   84            | . RETURN const
   85            | . RETURN identifier
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    SEMICOLON   shift, and go to state 112
    IF          shift, and go to state 113
    FOR         shift, and go to state 114
    PRINTF      shift, and go to state 115
    SCANF       shift, and go to state 116
    IDENTIFIER  shift, and go to state 13
    RETURN      shift, and go to state 117

    $default  reduce using rule 28 (body)

    statement    go to state 139
    func_call    go to state 122
    assignment   go to state 123
    increment    go to state 124
    printf_stat  go to state 125
    scanf_stat   go to state 126
    if_stat      go to state 127
    for_stat     go to state 128
    return_stat  go to state 129
    identifier   go to state 130


State 121

   32 statements: statement .

    $default  reduce using rule 32 (statements)


State 122

   35 statement: func_call . SEMICOLON

    SEMICOLON  shift, and go to state 140


State 123

   36 statement: assignment . SEMICOLON

    SEMICOLON  shift, and go to state 141


State 124

   37 statement: increment . SEMICOLON

    SEMICOLON  shift, and go to state 142


State 125

   38 statement: printf_stat . SEMICOLON

    SEMICOLON  shift, and go to state 143


State 126

   39 statement: scanf_stat . SEMICOLON

    SEMICOLON  shift, and go to state 144


State 127

   40 statement: if_stat .

    $default  reduce using rule 40 (statement)


State 128

   41 statement: for_stat .

    $default  reduce using rule 41 (statement)


State 129

   42 statement: return_stat . SEMICOLON

    SEMICOLON  shift, and go to state 145


State 130

   43 func_call: identifier . O_ROUND_BRACES call_args C_ROUND_BRACES
   47 assignment: identifier . ASSIGN word
   48           | identifier . ASSIGN expr
   49           | identifier . ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | identifier . ASSIGN func_call
   65 increment: identifier . INCR
   91 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    O_ROUND_BRACES   shift, and go to state 77
    DOT              shift, and go to state 27
    ASSIGN           shift, and go to state 31
    INCR             shift, and go to state 78


State 131

   51 expr: . expr ADD expr
   52     | . expr SUB expr
   53     | . expr TIMES expr
   54     | . expr DIVIDE expr
   55     | . SUB expr
   56     | . increment
   57     | . expr EQOP expr
   58     | . expr RELOP expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . NOT expr
   62     | . O_ROUND_BRACES expr C_ROUND_BRACES
   63     | . number
   64     | . identifier
   65 increment: . identifier INCR
   73 if_stat: IF O_ROUND_BRACES . expr C_ROUND_BRACES block
   74        | IF O_ROUND_BRACES . expr C_ROUND_BRACES block ELSE block
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier
   99 number: . ICONST
  100       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 146
    increment   go to state 50
    identifier  go to state 66
    number      go to state 53


State 132

   47 assignment: . identifier ASSIGN word
   48           | . identifier ASSIGN expr
   49           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | . identifier ASSIGN func_call
   77 for_stat: FOR O_ROUND_BRACES . init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   78 init_for: . %empty  [COMMA, SEMICOLON]
   79         | . assignment
   80         | . init_for COMMA init_for
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 78 (init_for)

    assignment  go to state 147
    init_for    go to state 148
    identifier  go to state 149


State 133

   66 printf_stat: PRINTF O_ROUND_BRACES . word C_ROUND_BRACES
   67            | PRINTF O_ROUND_BRACES . STRCONST COMMA printed_var C_ROUND_BRACES
   97 word: . CCONST
   98     | . STRCONST

    CCONST    shift, and go to state 46
    STRCONST  shift, and go to state 150

    word  go to state 151


State 134

   70 scanf_stat: SCANF O_ROUND_BRACES . STRCONST COMMA retrieved_var C_ROUND_BRACES

    STRCONST  shift, and go to state 152


State 135

   85 return_stat: RETURN identifier .  [SEMICOLON]
   91 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27

    $default  reduce using rule 85 (return_stat)


State 136

   84 return_stat: RETURN const .

    $default  reduce using rule 84 (return_stat)


State 137

   21 func_definition: var_type identifier @1 O_ROUND_BRACES argument_list $@2 C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES .

    $default  reduce using rule 21 (func_definition)


State 138

    4 declarations: declarations . declaration
    5 declaration: . var_type var_decl SEMICOLON
    6            | . struct_declaration SEMICOLON
   12 struct_declaration: . STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl
   30 $@4: . %empty  [SEMICOLON, IF, FOR, PRINTF, SCANF, IDENTIFIER, RETURN]
   31 body: $@3 declarations . $@4 statements
   86 var_type: . VOID
   87         | . INT
   88         | . FLOAT
   89         | . CHAR

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    STRUCT  shift, and go to state 5

    $default  reduce using rule 30 ($@4)

    declaration         go to state 16
    struct_declaration  go to state 9
    $@4                 go to state 153
    var_type            go to state 34


State 139

   33 statements: statements statement .

    $default  reduce using rule 33 (statements)


State 140

   35 statement: func_call SEMICOLON .

    $default  reduce using rule 35 (statement)


State 141

   36 statement: assignment SEMICOLON .

    $default  reduce using rule 36 (statement)


State 142

   37 statement: increment SEMICOLON .

    $default  reduce using rule 37 (statement)


State 143

   38 statement: printf_stat SEMICOLON .

    $default  reduce using rule 38 (statement)


State 144

   39 statement: scanf_stat SEMICOLON .

    $default  reduce using rule 39 (statement)


State 145

   42 statement: return_stat SEMICOLON .

    $default  reduce using rule 42 (statement)


State 146

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . TIMES expr
   54     | expr . DIVIDE expr
   57     | expr . EQOP expr
   58     | expr . RELOP expr
   59     | expr . AND expr
   60     | expr . OR expr
   73 if_stat: IF O_ROUND_BRACES expr . C_ROUND_BRACES block
   74        | IF O_ROUND_BRACES expr . C_ROUND_BRACES block ELSE block

    C_ROUND_BRACES  shift, and go to state 154
    ADD             shift, and go to state 69
    SUB             shift, and go to state 70
    TIMES           shift, and go to state 71
    DIVIDE          shift, and go to state 72
    EQOP            shift, and go to state 73
    RELOP           shift, and go to state 74
    AND             shift, and go to state 75
    OR              shift, and go to state 76


State 147

   79 init_for: assignment .

    $default  reduce using rule 79 (init_for)


State 148

   77 for_stat: FOR O_ROUND_BRACES init_for . SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   80 init_for: init_for . COMMA init_for

    COMMA      shift, and go to state 155
    SEMICOLON  shift, and go to state 156


State 149

   47 assignment: identifier . ASSIGN word
   48           | identifier . ASSIGN expr
   49           | identifier . ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | identifier . ASSIGN func_call
   91 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27
    ASSIGN           shift, and go to state 31


State 150

   67 printf_stat: PRINTF O_ROUND_BRACES STRCONST . COMMA printed_var C_ROUND_BRACES
   98 word: STRCONST .  [C_ROUND_BRACES]

    COMMA  shift, and go to state 157

    $default  reduce using rule 98 (word)


State 151

   66 printf_stat: PRINTF O_ROUND_BRACES word . C_ROUND_BRACES

    C_ROUND_BRACES  shift, and go to state 158


State 152

   70 scanf_stat: SCANF O_ROUND_BRACES STRCONST . COMMA retrieved_var C_ROUND_BRACES

    COMMA  shift, and go to state 159


State 153

   31 body: $@3 declarations $@4 . statements
   32 statements: . statement
   33           | . statements statement
   34 statement: . SEMICOLON
   35          | . func_call SEMICOLON
   36          | . assignment SEMICOLON
   37          | . increment SEMICOLON
   38          | . printf_stat SEMICOLON
   39          | . scanf_stat SEMICOLON
   40          | . if_stat
   41          | . for_stat
   42          | . return_stat SEMICOLON
   43 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES
   47 assignment: . identifier ASSIGN word
   48           | . identifier ASSIGN expr
   49           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | . identifier ASSIGN func_call
   65 increment: . identifier INCR
   66 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES
   67            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES
   70 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES
   73 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block
   74        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block
   77 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   83 return_stat: . RETURN
   84            | . RETURN const
   85            | . RETURN identifier
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    SEMICOLON   shift, and go to state 112
    IF          shift, and go to state 113
    FOR         shift, and go to state 114
    PRINTF      shift, and go to state 115
    SCANF       shift, and go to state 116
    IDENTIFIER  shift, and go to state 13
    RETURN      shift, and go to state 117

    statements   go to state 160
    statement    go to state 121
    func_call    go to state 122
    assignment   go to state 123
    increment    go to state 124
    printf_stat  go to state 125
    scanf_stat   go to state 126
    if_stat      go to state 127
    for_stat     go to state 128
    return_stat  go to state 129
    identifier   go to state 130


State 154

   34 statement: . SEMICOLON
   35          | . func_call SEMICOLON
   36          | . assignment SEMICOLON
   37          | . increment SEMICOLON
   38          | . printf_stat SEMICOLON
   39          | . scanf_stat SEMICOLON
   40          | . if_stat
   41          | . for_stat
   42          | . return_stat SEMICOLON
   43 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES
   47 assignment: . identifier ASSIGN word
   48           | . identifier ASSIGN expr
   49           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | . identifier ASSIGN func_call
   65 increment: . identifier INCR
   66 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES
   67            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES
   70 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES
   73 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block
   73        | IF O_ROUND_BRACES expr C_ROUND_BRACES . block
   74        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block
   74        | IF O_ROUND_BRACES expr C_ROUND_BRACES . block ELSE block
   75 block: . statement
   76      | . O_CURLY_BRACES statements C_CURLY_BRACES
   77 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   83 return_stat: . RETURN
   84            | . RETURN const
   85            | . RETURN identifier
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    O_CURLY_BRACES  shift, and go to state 161
    SEMICOLON       shift, and go to state 112
    IF              shift, and go to state 113
    FOR             shift, and go to state 114
    PRINTF          shift, and go to state 115
    SCANF           shift, and go to state 116
    IDENTIFIER      shift, and go to state 13
    RETURN          shift, and go to state 117

    statement    go to state 162
    func_call    go to state 122
    assignment   go to state 123
    increment    go to state 124
    printf_stat  go to state 125
    scanf_stat   go to state 126
    if_stat      go to state 127
    block        go to state 163
    for_stat     go to state 128
    return_stat  go to state 129
    identifier   go to state 130


State 155

   47 assignment: . identifier ASSIGN word
   48           | . identifier ASSIGN expr
   49           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | . identifier ASSIGN func_call
   78 init_for: . %empty  [COMMA, SEMICOLON]
   79         | . assignment
   80         | . init_for COMMA init_for
   80         | init_for COMMA . init_for
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 78 (init_for)

    assignment  go to state 147
    init_for    go to state 164
    identifier  go to state 149


State 156

   51 expr: . expr ADD expr
   52     | . expr SUB expr
   53     | . expr TIMES expr
   54     | . expr DIVIDE expr
   55     | . SUB expr
   56     | . increment
   57     | . expr EQOP expr
   58     | . expr RELOP expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . NOT expr
   62     | . O_ROUND_BRACES expr C_ROUND_BRACES
   63     | . number
   64     | . identifier
   65 increment: . identifier INCR
   77 for_stat: FOR O_ROUND_BRACES init_for SEMICOLON . expr SEMICOLON incr_for C_ROUND_BRACES block
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier
   99 number: . ICONST
  100       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 165
    increment   go to state 50
    identifier  go to state 66
    number      go to state 53


State 157

   67 printf_stat: PRINTF O_ROUND_BRACES STRCONST COMMA . printed_var C_ROUND_BRACES
   68 printed_var: . identifier
   69            | . printed_var COMMA identifier
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    printed_var  go to state 166
    identifier   go to state 167


State 158

   66 printf_stat: PRINTF O_ROUND_BRACES word C_ROUND_BRACES .

    $default  reduce using rule 66 (printf_stat)


State 159

   70 scanf_stat: SCANF O_ROUND_BRACES STRCONST COMMA . retrieved_var C_ROUND_BRACES
   71 retrieved_var: . E_COMM identifier
   72              | . retrieved_var COMMA E_COMM identifier

    E_COMM  shift, and go to state 168

    retrieved_var  go to state 169


State 160

   31 body: $@3 declarations $@4 statements .  [C_CURLY_BRACES]
   33 statements: statements . statement
   34 statement: . SEMICOLON
   35          | . func_call SEMICOLON
   36          | . assignment SEMICOLON
   37          | . increment SEMICOLON
   38          | . printf_stat SEMICOLON
   39          | . scanf_stat SEMICOLON
   40          | . if_stat
   41          | . for_stat
   42          | . return_stat SEMICOLON
   43 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES
   47 assignment: . identifier ASSIGN word
   48           | . identifier ASSIGN expr
   49           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | . identifier ASSIGN func_call
   65 increment: . identifier INCR
   66 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES
   67            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES
   70 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES
   73 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block
   74        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block
   77 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   83 return_stat: . RETURN
   84            | . RETURN const
   85            | . RETURN identifier
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    SEMICOLON   shift, and go to state 112
    IF          shift, and go to state 113
    FOR         shift, and go to state 114
    PRINTF      shift, and go to state 115
    SCANF       shift, and go to state 116
    IDENTIFIER  shift, and go to state 13
    RETURN      shift, and go to state 117

    $default  reduce using rule 31 (body)

    statement    go to state 139
    func_call    go to state 122
    assignment   go to state 123
    increment    go to state 124
    printf_stat  go to state 125
    scanf_stat   go to state 126
    if_stat      go to state 127
    for_stat     go to state 128
    return_stat  go to state 129
    identifier   go to state 130


State 161

   32 statements: . statement
   33           | . statements statement
   34 statement: . SEMICOLON
   35          | . func_call SEMICOLON
   36          | . assignment SEMICOLON
   37          | . increment SEMICOLON
   38          | . printf_stat SEMICOLON
   39          | . scanf_stat SEMICOLON
   40          | . if_stat
   41          | . for_stat
   42          | . return_stat SEMICOLON
   43 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES
   47 assignment: . identifier ASSIGN word
   48           | . identifier ASSIGN expr
   49           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | . identifier ASSIGN func_call
   65 increment: . identifier INCR
   66 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES
   67            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES
   70 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES
   73 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block
   74        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block
   76 block: O_CURLY_BRACES . statements C_CURLY_BRACES
   77 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   83 return_stat: . RETURN
   84            | . RETURN const
   85            | . RETURN identifier
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    SEMICOLON   shift, and go to state 112
    IF          shift, and go to state 113
    FOR         shift, and go to state 114
    PRINTF      shift, and go to state 115
    SCANF       shift, and go to state 116
    IDENTIFIER  shift, and go to state 13
    RETURN      shift, and go to state 117

    statements   go to state 170
    statement    go to state 121
    func_call    go to state 122
    assignment   go to state 123
    increment    go to state 124
    printf_stat  go to state 125
    scanf_stat   go to state 126
    if_stat      go to state 127
    for_stat     go to state 128
    return_stat  go to state 129
    identifier   go to state 130


State 162

   75 block: statement .

    $default  reduce using rule 75 (block)


State 163

   73 if_stat: IF O_ROUND_BRACES expr C_ROUND_BRACES block .  [C_CURLY_BRACES, SEMICOLON, IF, FOR, PRINTF, SCANF, IDENTIFIER, RETURN]
   74        | IF O_ROUND_BRACES expr C_ROUND_BRACES block . ELSE block

    ELSE  shift, and go to state 171

    $default  reduce using rule 73 (if_stat)

    Conflict between rule 73 and token ELSE resolved as shift (IFX < ELSE).


State 164

   80 init_for: init_for . COMMA init_for
   80         | init_for COMMA init_for .  [COMMA, SEMICOLON]

    $default  reduce using rule 80 (init_for)

    Conflict between rule 80 and token COMMA resolved as reduce (%left COMMA).


State 165

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . TIMES expr
   54     | expr . DIVIDE expr
   57     | expr . EQOP expr
   58     | expr . RELOP expr
   59     | expr . AND expr
   60     | expr . OR expr
   77 for_stat: FOR O_ROUND_BRACES init_for SEMICOLON expr . SEMICOLON incr_for C_ROUND_BRACES block

    SEMICOLON  shift, and go to state 172
    ADD        shift, and go to state 69
    SUB        shift, and go to state 70
    TIMES      shift, and go to state 71
    DIVIDE     shift, and go to state 72
    EQOP       shift, and go to state 73
    RELOP      shift, and go to state 74
    AND        shift, and go to state 75
    OR         shift, and go to state 76


State 166

   67 printf_stat: PRINTF O_ROUND_BRACES STRCONST COMMA printed_var . C_ROUND_BRACES
   69 printed_var: printed_var . COMMA identifier

    C_ROUND_BRACES  shift, and go to state 173
    COMMA           shift, and go to state 174


State 167

   68 printed_var: identifier .  [C_ROUND_BRACES, COMMA]
   91 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27

    $default  reduce using rule 68 (printed_var)


State 168

   71 retrieved_var: E_COMM . identifier
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    identifier  go to state 175


State 169

   70 scanf_stat: SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var . C_ROUND_BRACES
   72 retrieved_var: retrieved_var . COMMA E_COMM identifier

    C_ROUND_BRACES  shift, and go to state 176
    COMMA           shift, and go to state 177


State 170

   33 statements: statements . statement
   34 statement: . SEMICOLON
   35          | . func_call SEMICOLON
   36          | . assignment SEMICOLON
   37          | . increment SEMICOLON
   38          | . printf_stat SEMICOLON
   39          | . scanf_stat SEMICOLON
   40          | . if_stat
   41          | . for_stat
   42          | . return_stat SEMICOLON
   43 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES
   47 assignment: . identifier ASSIGN word
   48           | . identifier ASSIGN expr
   49           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | . identifier ASSIGN func_call
   65 increment: . identifier INCR
   66 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES
   67            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES
   70 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES
   73 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block
   74        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block
   76 block: O_CURLY_BRACES statements . C_CURLY_BRACES
   77 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   83 return_stat: . RETURN
   84            | . RETURN const
   85            | . RETURN identifier
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    C_CURLY_BRACES  shift, and go to state 178
    SEMICOLON       shift, and go to state 112
    IF              shift, and go to state 113
    FOR             shift, and go to state 114
    PRINTF          shift, and go to state 115
    SCANF           shift, and go to state 116
    IDENTIFIER      shift, and go to state 13
    RETURN          shift, and go to state 117

    statement    go to state 139
    func_call    go to state 122
    assignment   go to state 123
    increment    go to state 124
    printf_stat  go to state 125
    scanf_stat   go to state 126
    if_stat      go to state 127
    for_stat     go to state 128
    return_stat  go to state 129
    identifier   go to state 130


State 171

   34 statement: . SEMICOLON
   35          | . func_call SEMICOLON
   36          | . assignment SEMICOLON
   37          | . increment SEMICOLON
   38          | . printf_stat SEMICOLON
   39          | . scanf_stat SEMICOLON
   40          | . if_stat
   41          | . for_stat
   42          | . return_stat SEMICOLON
   43 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES
   47 assignment: . identifier ASSIGN word
   48           | . identifier ASSIGN expr
   49           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | . identifier ASSIGN func_call
   65 increment: . identifier INCR
   66 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES
   67            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES
   70 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES
   73 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block
   74        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block
   74        | IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE . block
   75 block: . statement
   76      | . O_CURLY_BRACES statements C_CURLY_BRACES
   77 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   83 return_stat: . RETURN
   84            | . RETURN const
   85            | . RETURN identifier
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    O_CURLY_BRACES  shift, and go to state 161
    SEMICOLON       shift, and go to state 112
    IF              shift, and go to state 113
    FOR             shift, and go to state 114
    PRINTF          shift, and go to state 115
    SCANF           shift, and go to state 116
    IDENTIFIER      shift, and go to state 13
    RETURN          shift, and go to state 117

    statement    go to state 162
    func_call    go to state 122
    assignment   go to state 123
    increment    go to state 124
    printf_stat  go to state 125
    scanf_stat   go to state 126
    if_stat      go to state 127
    block        go to state 179
    for_stat     go to state 128
    return_stat  go to state 129
    identifier   go to state 130


State 172

   51 expr: . expr ADD expr
   52     | . expr SUB expr
   53     | . expr TIMES expr
   54     | . expr DIVIDE expr
   55     | . SUB expr
   56     | . increment
   57     | . expr EQOP expr
   58     | . expr RELOP expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . NOT expr
   62     | . O_ROUND_BRACES expr C_ROUND_BRACES
   63     | . number
   64     | . identifier
   65 increment: . identifier INCR
   77 for_stat: FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON . incr_for C_ROUND_BRACES block
   81 incr_for: . expr
   82         | . incr_for COMMA expr
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier
   99 number: . ICONST
  100       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 180
    increment   go to state 50
    incr_for    go to state 181
    identifier  go to state 66
    number      go to state 53


State 173

   67 printf_stat: PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES .

    $default  reduce using rule 67 (printf_stat)


State 174

   69 printed_var: printed_var COMMA . identifier
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    identifier  go to state 182


State 175

   71 retrieved_var: E_COMM identifier .  [C_ROUND_BRACES, COMMA]
   91 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27

    $default  reduce using rule 71 (retrieved_var)


State 176

   70 scanf_stat: SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES .

    $default  reduce using rule 70 (scanf_stat)


State 177

   72 retrieved_var: retrieved_var COMMA . E_COMM identifier

    E_COMM  shift, and go to state 183


State 178

   76 block: O_CURLY_BRACES statements C_CURLY_BRACES .

    $default  reduce using rule 76 (block)


State 179

   74 if_stat: IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block .

    $default  reduce using rule 74 (if_stat)


State 180

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . TIMES expr
   54     | expr . DIVIDE expr
   57     | expr . EQOP expr
   58     | expr . RELOP expr
   59     | expr . AND expr
   60     | expr . OR expr
   81 incr_for: expr .  [C_ROUND_BRACES, COMMA]

    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    TIMES   shift, and go to state 71
    DIVIDE  shift, and go to state 72
    EQOP    shift, and go to state 73
    RELOP   shift, and go to state 74
    AND     shift, and go to state 75
    OR      shift, and go to state 76

    $default  reduce using rule 81 (incr_for)


State 181

   77 for_stat: FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for . C_ROUND_BRACES block
   82 incr_for: incr_for . COMMA expr

    C_ROUND_BRACES  shift, and go to state 184
    COMMA           shift, and go to state 185


State 182

   69 printed_var: printed_var COMMA identifier .  [C_ROUND_BRACES, COMMA]
   91 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27

    $default  reduce using rule 69 (printed_var)


State 183

   72 retrieved_var: retrieved_var COMMA E_COMM . identifier
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    identifier  go to state 186


State 184

   34 statement: . SEMICOLON
   35          | . func_call SEMICOLON
   36          | . assignment SEMICOLON
   37          | . increment SEMICOLON
   38          | . printf_stat SEMICOLON
   39          | . scanf_stat SEMICOLON
   40          | . if_stat
   41          | . for_stat
   42          | . return_stat SEMICOLON
   43 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES
   47 assignment: . identifier ASSIGN word
   48           | . identifier ASSIGN expr
   49           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   50           | . identifier ASSIGN func_call
   65 increment: . identifier INCR
   66 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES
   67            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES
   70 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES
   73 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block
   74        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block
   75 block: . statement
   76      | . O_CURLY_BRACES statements C_CURLY_BRACES
   77 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   77         | FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES . block
   83 return_stat: . RETURN
   84            | . RETURN const
   85            | . RETURN identifier
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier

    O_CURLY_BRACES  shift, and go to state 161
    SEMICOLON       shift, and go to state 112
    IF              shift, and go to state 113
    FOR             shift, and go to state 114
    PRINTF          shift, and go to state 115
    SCANF           shift, and go to state 116
    IDENTIFIER      shift, and go to state 13
    RETURN          shift, and go to state 117

    statement    go to state 162
    func_call    go to state 122
    assignment   go to state 123
    increment    go to state 124
    printf_stat  go to state 125
    scanf_stat   go to state 126
    if_stat      go to state 127
    block        go to state 187
    for_stat     go to state 128
    return_stat  go to state 129
    identifier   go to state 130


State 185

   51 expr: . expr ADD expr
   52     | . expr SUB expr
   53     | . expr TIMES expr
   54     | . expr DIVIDE expr
   55     | . SUB expr
   56     | . increment
   57     | . expr EQOP expr
   58     | . expr RELOP expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . NOT expr
   62     | . O_ROUND_BRACES expr C_ROUND_BRACES
   63     | . number
   64     | . identifier
   65 increment: . identifier INCR
   82 incr_for: incr_for COMMA . expr
   90 identifier: . IDENTIFIER
   91           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | . identifier DOT identifier
   99 number: . ICONST
  100       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 188
    increment   go to state 50
    identifier  go to state 66
    number      go to state 53


State 186

   72 retrieved_var: retrieved_var COMMA E_COMM identifier .  [C_ROUND_BRACES, COMMA]
   91 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   92           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   93           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27

    $default  reduce using rule 72 (retrieved_var)


State 187

   77 for_stat: FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block .

    $default  reduce using rule 77 (for_stat)


State 188

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . TIMES expr
   54     | expr . DIVIDE expr
   57     | expr . EQOP expr
   58     | expr . RELOP expr
   59     | expr . AND expr
   60     | expr . OR expr
   82 incr_for: incr_for COMMA expr .  [C_ROUND_BRACES, COMMA]

    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    TIMES   shift, and go to state 71
    DIVIDE  shift, and go to state 72
    EQOP    shift, and go to state 73
    RELOP   shift, and go to state 74
    AND     shift, and go to state 75
    OR      shift, and go to state 76

    $default  reduce using rule 82 (incr_for)
