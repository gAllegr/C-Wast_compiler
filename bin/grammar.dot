// Generated by GNU Bison 3.0.4.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <http://www.gnu.org/software/bison/>.

digraph "./src/grammar.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . program $end\l  1 program: . functions\l  2        | . declarations functions\l  3 declarations: . declaration\l  4             | . declarations declaration\l  5 declaration: . var_type var_decl SEMICOLON\l  6            | . struct_declaration SEMICOLON\l 12 struct_declaration: . STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl\l 18 functions: . func_definition\l 19          | . functions func_definition\l 20 func_definition: . var_type identifier O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES\l 83 var_type: . VOID\l 84         | . INT\l 85         | . FLOAT\l 86         | . CHAR\l 87         | . STRUCT identifier\l"]
  0 -> 1 [style=solid label="VOID"]
  0 -> 2 [style=solid label="INT"]
  0 -> 3 [style=solid label="FLOAT"]
  0 -> 4 [style=solid label="CHAR"]
  0 -> 5 [style=solid label="STRUCT"]
  0 -> 6 [style=dashed label="program"]
  0 -> 7 [style=dashed label="declarations"]
  0 -> 8 [style=dashed label="declaration"]
  0 -> 9 [style=dashed label="struct_declaration"]
  0 -> 10 [style=dashed label="functions"]
  0 -> 11 [style=dashed label="func_definition"]
  0 -> 12 [style=dashed label="var_type"]
  1 [label="State 1\n\l 83 var_type: VOID .\l"]
  1 -> "1R83" [style=solid]
 "1R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  2 [label="State 2\n\l 84 var_type: INT .\l"]
  2 -> "2R84" [style=solid]
 "2R84" [label="R84", fillcolor=3, shape=diamond, style=filled]
  3 [label="State 3\n\l 85 var_type: FLOAT .\l"]
  3 -> "3R85" [style=solid]
 "3R85" [label="R85", fillcolor=3, shape=diamond, style=filled]
  4 [label="State 4\n\l 86 var_type: CHAR .\l"]
  4 -> "4R86" [style=solid]
 "4R86" [label="R86", fillcolor=3, shape=diamond, style=filled]
  5 [label="State 5\n\l 12 struct_declaration: STRUCT . identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl\l 87 var_type: STRUCT . identifier\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  5 -> 13 [style=solid label="IDENTIFIER"]
  5 -> 14 [style=dashed label="identifier"]
  6 [label="State 6\n\l  0 $accept: program . $end\l"]
  6 -> 15 [style=solid label="$end"]
  7 [label="State 7\n\l  2 program: declarations . functions\l  4 declarations: declarations . declaration\l  5 declaration: . var_type var_decl SEMICOLON\l  6            | . struct_declaration SEMICOLON\l 12 struct_declaration: . STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl\l 18 functions: . func_definition\l 19          | . functions func_definition\l 20 func_definition: . var_type identifier O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES\l 83 var_type: . VOID\l 84         | . INT\l 85         | . FLOAT\l 86         | . CHAR\l 87         | . STRUCT identifier\l"]
  7 -> 1 [style=solid label="VOID"]
  7 -> 2 [style=solid label="INT"]
  7 -> 3 [style=solid label="FLOAT"]
  7 -> 4 [style=solid label="CHAR"]
  7 -> 5 [style=solid label="STRUCT"]
  7 -> 16 [style=dashed label="declaration"]
  7 -> 9 [style=dashed label="struct_declaration"]
  7 -> 17 [style=dashed label="functions"]
  7 -> 11 [style=dashed label="func_definition"]
  7 -> 12 [style=dashed label="var_type"]
  8 [label="State 8\n\l  3 declarations: declaration .\l"]
  8 -> "8R3" [style=solid]
 "8R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l  6 declaration: struct_declaration . SEMICOLON\l"]
  9 -> 18 [style=solid label="SEMICOLON"]
  10 [label="State 10\n\l  1 program: functions .  [$end]\l 19 functions: functions . func_definition\l 20 func_definition: . var_type identifier O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES\l 83 var_type: . VOID\l 84         | . INT\l 85         | . FLOAT\l 86         | . CHAR\l 87         | . STRUCT identifier\l"]
  10 -> 1 [style=solid label="VOID"]
  10 -> 2 [style=solid label="INT"]
  10 -> 3 [style=solid label="FLOAT"]
  10 -> 4 [style=solid label="CHAR"]
  10 -> 19 [style=solid label="STRUCT"]
  10 -> 20 [style=dashed label="func_definition"]
  10 -> 21 [style=dashed label="var_type"]
  10 -> "10R1" [style=solid]
 "10R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  11 [label="State 11\n\l 18 functions: func_definition .\l"]
  11 -> "11R18" [style=solid]
 "11R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  12 [label="State 12\n\l  5 declaration: var_type . var_decl SEMICOLON\l  7 var_decl: . simple_declaration\l  8         | . assignment\l  9         | . var_decl COMMA var_decl\l 10 simple_declaration: . %empty  [COMMA, SEMICOLON]\l 11                   | . identifier\l 20 func_definition: var_type . identifier O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES\l 45 assignment: . identifier ASSIGN word\l 46           | . identifier ASSIGN expr\l 47           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  12 -> 13 [style=solid label="IDENTIFIER"]
  12 -> 22 [style=dashed label="var_decl"]
  12 -> 23 [style=dashed label="simple_declaration"]
  12 -> 24 [style=dashed label="assignment"]
  12 -> 25 [style=dashed label="identifier"]
  12 -> "12R10" [style=solid]
 "12R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l 88 identifier: IDENTIFIER .\l"]
  13 -> "13R88" [style=solid]
 "13R88" [label="R88", fillcolor=3, shape=diamond, style=filled]
  14 [label="State 14\n\l 12 struct_declaration: STRUCT identifier . O_CURLY_BRACES declarations C_CURLY_BRACES var_decl\l 87 var_type: STRUCT identifier .  [COMMA, SEMICOLON, IDENTIFIER]\l 89 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | identifier . DOT identifier\l"]
  14 -> 26 [style=solid label="O_CURLY_BRACES"]
  14 -> 27 [style=solid label="O_SQUARE_BRACES"]
  14 -> 28 [style=solid label="DOT"]
  14 -> "14R87" [style=solid]
 "14R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  15 [label="State 15\n\l  0 $accept: program $end .\l"]
  15 -> "15R0" [style=solid]
 "15R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  16 [label="State 16\n\l  4 declarations: declarations declaration .\l"]
  16 -> "16R4" [style=solid]
 "16R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  17 [label="State 17\n\l  2 program: declarations functions .  [$end]\l 19 functions: functions . func_definition\l 20 func_definition: . var_type identifier O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES\l 83 var_type: . VOID\l 84         | . INT\l 85         | . FLOAT\l 86         | . CHAR\l 87         | . STRUCT identifier\l"]
  17 -> 1 [style=solid label="VOID"]
  17 -> 2 [style=solid label="INT"]
  17 -> 3 [style=solid label="FLOAT"]
  17 -> 4 [style=solid label="CHAR"]
  17 -> 19 [style=solid label="STRUCT"]
  17 -> 20 [style=dashed label="func_definition"]
  17 -> 21 [style=dashed label="var_type"]
  17 -> "17R2" [style=solid]
 "17R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l  6 declaration: struct_declaration SEMICOLON .\l"]
  18 -> "18R6" [style=solid]
 "18R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l 87 var_type: STRUCT . identifier\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  19 -> 13 [style=solid label="IDENTIFIER"]
  19 -> 29 [style=dashed label="identifier"]
  20 [label="State 20\n\l 19 functions: functions func_definition .\l"]
  20 -> "20R19" [style=solid]
 "20R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  21 [label="State 21\n\l 20 func_definition: var_type . identifier O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  21 -> 13 [style=solid label="IDENTIFIER"]
  21 -> 30 [style=dashed label="identifier"]
  22 [label="State 22\n\l  5 declaration: var_type var_decl . SEMICOLON\l  9 var_decl: var_decl . COMMA var_decl\l"]
  22 -> 31 [style=solid label="COMMA"]
  22 -> 32 [style=solid label="SEMICOLON"]
  23 [label="State 23\n\l  7 var_decl: simple_declaration .\l"]
  23 -> "23R7" [style=solid]
 "23R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  24 [label="State 24\n\l  8 var_decl: assignment .\l"]
  24 -> "24R8" [style=solid]
 "24R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  25 [label="State 25\n\l 11 simple_declaration: identifier .  [COMMA, SEMICOLON]\l 20 func_definition: var_type identifier . O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES\l 45 assignment: identifier . ASSIGN word\l 46           | identifier . ASSIGN expr\l 47           | identifier . ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 89 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | identifier . DOT identifier\l"]
  25 -> 27 [style=solid label="O_SQUARE_BRACES"]
  25 -> 33 [style=solid label="O_ROUND_BRACES"]
  25 -> 28 [style=solid label="DOT"]
  25 -> 34 [style=solid label="ASSIGN"]
  25 -> "25R11" [style=solid]
 "25R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  26 [label="State 26\n\l  3 declarations: . declaration\l  4             | . declarations declaration\l  5 declaration: . var_type var_decl SEMICOLON\l  6            | . struct_declaration SEMICOLON\l 12 struct_declaration: . STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl\l 12                   | STRUCT identifier O_CURLY_BRACES . declarations C_CURLY_BRACES var_decl\l 83 var_type: . VOID\l 84         | . INT\l 85         | . FLOAT\l 86         | . CHAR\l 87         | . STRUCT identifier\l"]
  26 -> 1 [style=solid label="VOID"]
  26 -> 2 [style=solid label="INT"]
  26 -> 3 [style=solid label="FLOAT"]
  26 -> 4 [style=solid label="CHAR"]
  26 -> 5 [style=solid label="STRUCT"]
  26 -> 35 [style=dashed label="declarations"]
  26 -> 8 [style=dashed label="declaration"]
  26 -> 9 [style=dashed label="struct_declaration"]
  26 -> 36 [style=dashed label="var_type"]
  27 [label="State 27\n\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 89           | identifier O_SQUARE_BRACES . ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 90           | identifier O_SQUARE_BRACES . identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  27 -> 13 [style=solid label="IDENTIFIER"]
  27 -> 37 [style=solid label="ICONST"]
  27 -> 38 [style=dashed label="identifier"]
  28 [label="State 28\n\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 91           | identifier DOT . identifier\l"]
  28 -> 13 [style=solid label="IDENTIFIER"]
  28 -> 39 [style=dashed label="identifier"]
  29 [label="State 29\n\l 87 var_type: STRUCT identifier .  [IDENTIFIER]\l 89 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | identifier . DOT identifier\l"]
  29 -> 27 [style=solid label="O_SQUARE_BRACES"]
  29 -> 28 [style=solid label="DOT"]
  29 -> "29R87" [style=solid]
 "29R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  30 [label="State 30\n\l 20 func_definition: var_type identifier . O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES\l 89 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | identifier . DOT identifier\l"]
  30 -> 27 [style=solid label="O_SQUARE_BRACES"]
  30 -> 33 [style=solid label="O_ROUND_BRACES"]
  30 -> 28 [style=solid label="DOT"]
  31 [label="State 31\n\l  7 var_decl: . simple_declaration\l  8         | . assignment\l  9         | . var_decl COMMA var_decl\l  9         | var_decl COMMA . var_decl\l 10 simple_declaration: . %empty  [COMMA, SEMICOLON]\l 11                   | . identifier\l 45 assignment: . identifier ASSIGN word\l 46           | . identifier ASSIGN expr\l 47           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  31 -> 13 [style=solid label="IDENTIFIER"]
  31 -> 40 [style=dashed label="var_decl"]
  31 -> 23 [style=dashed label="simple_declaration"]
  31 -> 24 [style=dashed label="assignment"]
  31 -> 41 [style=dashed label="identifier"]
  31 -> "31R10" [style=solid]
 "31R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  32 [label="State 32\n\l  5 declaration: var_type var_decl SEMICOLON .\l"]
  32 -> "32R5" [style=solid]
 "32R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  33 [label="State 33\n\l 20 func_definition: var_type identifier O_ROUND_BRACES . argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES\l 21 argument_list: . %empty  [C_ROUND_BRACES]\l 22              | . VOID\l 23              | . parameter_list\l 24 parameter_list: . parameter_declaration\l 25               | . parameter_list COMMA parameter_declaration\l 26 parameter_declaration: . var_type identifier\l 83 var_type: . VOID\l 84         | . INT\l 85         | . FLOAT\l 86         | . CHAR\l 87         | . STRUCT identifier\l"]
  33 -> 42 [style=solid label="VOID"]
  33 -> 2 [style=solid label="INT"]
  33 -> 3 [style=solid label="FLOAT"]
  33 -> 4 [style=solid label="CHAR"]
  33 -> 19 [style=solid label="STRUCT"]
  33 -> 43 [style=dashed label="argument_list"]
  33 -> 44 [style=dashed label="parameter_list"]
  33 -> 45 [style=dashed label="parameter_declaration"]
  33 -> 46 [style=dashed label="var_type"]
  33 -> "33R21" [style=solid]
 "33R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  34 [label="State 34\n\l 45 assignment: identifier ASSIGN . word\l 46           | identifier ASSIGN . expr\l 47           | identifier ASSIGN . O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 48 expr: . expr ADD expr\l 49     | . expr SUB expr\l 50     | . expr TIMES expr\l 51     | . expr DIVIDE expr\l 52     | . SUB expr\l 53     | . increment\l 54     | . expr EQOP expr\l 55     | . expr RELOP expr\l 56     | . expr AND expr\l 57     | . expr OR expr\l 58     | . NOT expr\l 59     | . O_ROUND_BRACES expr C_ROUND_BRACES\l 60     | . number\l 61     | . identifier\l 62 increment: . identifier INCR\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 95 word: . CCONST\l 96     | . STRCONST\l 97 number: . ICONST\l 98       | . FCONST\l"]
  34 -> 47 [style=solid label="O_CURLY_BRACES"]
  34 -> 48 [style=solid label="O_ROUND_BRACES"]
  34 -> 49 [style=solid label="SUB"]
  34 -> 50 [style=solid label="NOT"]
  34 -> 13 [style=solid label="IDENTIFIER"]
  34 -> 51 [style=solid label="ICONST"]
  34 -> 52 [style=solid label="FCONST"]
  34 -> 53 [style=solid label="CCONST"]
  34 -> 54 [style=solid label="STRCONST"]
  34 -> 55 [style=dashed label="expr"]
  34 -> 56 [style=dashed label="increment"]
  34 -> 57 [style=dashed label="identifier"]
  34 -> 58 [style=dashed label="word"]
  34 -> 59 [style=dashed label="number"]
  35 [label="State 35\n\l  4 declarations: declarations . declaration\l  5 declaration: . var_type var_decl SEMICOLON\l  6            | . struct_declaration SEMICOLON\l 12 struct_declaration: . STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl\l 12                   | STRUCT identifier O_CURLY_BRACES declarations . C_CURLY_BRACES var_decl\l 83 var_type: . VOID\l 84         | . INT\l 85         | . FLOAT\l 86         | . CHAR\l 87         | . STRUCT identifier\l"]
  35 -> 60 [style=solid label="C_CURLY_BRACES"]
  35 -> 1 [style=solid label="VOID"]
  35 -> 2 [style=solid label="INT"]
  35 -> 3 [style=solid label="FLOAT"]
  35 -> 4 [style=solid label="CHAR"]
  35 -> 5 [style=solid label="STRUCT"]
  35 -> 16 [style=dashed label="declaration"]
  35 -> 9 [style=dashed label="struct_declaration"]
  35 -> 36 [style=dashed label="var_type"]
  36 [label="State 36\n\l  5 declaration: var_type . var_decl SEMICOLON\l  7 var_decl: . simple_declaration\l  8         | . assignment\l  9         | . var_decl COMMA var_decl\l 10 simple_declaration: . %empty  [COMMA, SEMICOLON]\l 11                   | . identifier\l 45 assignment: . identifier ASSIGN word\l 46           | . identifier ASSIGN expr\l 47           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  36 -> 13 [style=solid label="IDENTIFIER"]
  36 -> 22 [style=dashed label="var_decl"]
  36 -> 23 [style=dashed label="simple_declaration"]
  36 -> 24 [style=dashed label="assignment"]
  36 -> 41 [style=dashed label="identifier"]
  36 -> "36R10" [style=solid]
 "36R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  37 [label="State 37\n\l 89 identifier: identifier O_SQUARE_BRACES ICONST . C_SQUARE_BRACES\l"]
  37 -> 61 [style=solid label="C_SQUARE_BRACES"]
  38 [label="State 38\n\l 89 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 90           | identifier O_SQUARE_BRACES identifier . C_SQUARE_BRACES\l 91           | identifier . DOT identifier\l"]
  38 -> 27 [style=solid label="O_SQUARE_BRACES"]
  38 -> 62 [style=solid label="C_SQUARE_BRACES"]
  38 -> 28 [style=solid label="DOT"]
  39 [label="State 39\n\l 89 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | identifier . DOT identifier\l 91           | identifier DOT identifier .  [O_CURLY_BRACES, C_CURLY_BRACES, O_SQUARE_BRACES, C_SQUARE_BRACES, O_ROUND_BRACES, C_ROUND_BRACES, DOT, COMMA, SEMICOLON, ASSIGN, ADD, SUB, TIMES, DIVIDE, INCR, EQOP, RELOP, AND, OR, IDENTIFIER]\l"]
  39 -> "39R91" [style=solid]
 "39R91" [label="R91", fillcolor=3, shape=diamond, style=filled]
  40 [label="State 40\n\l  9 var_decl: var_decl . COMMA var_decl\l  9         | var_decl COMMA var_decl .  [COMMA, SEMICOLON]\l"]
  40 -> "40R9" [style=solid]
 "40R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  41 [label="State 41\n\l 11 simple_declaration: identifier .  [COMMA, SEMICOLON]\l 45 assignment: identifier . ASSIGN word\l 46           | identifier . ASSIGN expr\l 47           | identifier . ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 89 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | identifier . DOT identifier\l"]
  41 -> 27 [style=solid label="O_SQUARE_BRACES"]
  41 -> 28 [style=solid label="DOT"]
  41 -> 34 [style=solid label="ASSIGN"]
  41 -> "41R11" [style=solid]
 "41R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  42 [label="State 42\n\l 22 argument_list: VOID .  [C_ROUND_BRACES]\l 83 var_type: VOID .  [IDENTIFIER]\l"]
  42 -> "42R22" [style=solid]
 "42R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  42 -> "42R83" [label="[IDENTIFIER]", style=solid]
 "42R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  43 [label="State 43\n\l 20 func_definition: var_type identifier O_ROUND_BRACES argument_list . C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES\l"]
  43 -> 63 [style=solid label="C_ROUND_BRACES"]
  44 [label="State 44\n\l 23 argument_list: parameter_list .  [C_ROUND_BRACES]\l 25 parameter_list: parameter_list . COMMA parameter_declaration\l"]
  44 -> 64 [style=solid label="COMMA"]
  44 -> "44R23" [style=solid]
 "44R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  45 [label="State 45\n\l 24 parameter_list: parameter_declaration .\l"]
  45 -> "45R24" [style=solid]
 "45R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  46 [label="State 46\n\l 26 parameter_declaration: var_type . identifier\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  46 -> 13 [style=solid label="IDENTIFIER"]
  46 -> 65 [style=dashed label="identifier"]
  47 [label="State 47\n\l 13 inizialization_list: . identifier\l 14                    | . const\l 15                    | . STRCONST\l 16                    | . O_CURLY_BRACES inizialization_list COMMA inizialization_list C_CURLY_BRACES\l 17                    | . inizialization_list COMMA inizialization_list\l 47 assignment: identifier ASSIGN O_CURLY_BRACES . inizialization_list C_CURLY_BRACES\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 92 const: . ICONST\l 93      | . FCONST\l 94      | . CCONST\l"]
  47 -> 66 [style=solid label="O_CURLY_BRACES"]
  47 -> 13 [style=solid label="IDENTIFIER"]
  47 -> 67 [style=solid label="ICONST"]
  47 -> 68 [style=solid label="FCONST"]
  47 -> 69 [style=solid label="CCONST"]
  47 -> 70 [style=solid label="STRCONST"]
  47 -> 71 [style=dashed label="inizialization_list"]
  47 -> 72 [style=dashed label="identifier"]
  47 -> 73 [style=dashed label="const"]
  48 [label="State 48\n\l 48 expr: . expr ADD expr\l 49     | . expr SUB expr\l 50     | . expr TIMES expr\l 51     | . expr DIVIDE expr\l 52     | . SUB expr\l 53     | . increment\l 54     | . expr EQOP expr\l 55     | . expr RELOP expr\l 56     | . expr AND expr\l 57     | . expr OR expr\l 58     | . NOT expr\l 59     | . O_ROUND_BRACES expr C_ROUND_BRACES\l 59     | O_ROUND_BRACES . expr C_ROUND_BRACES\l 60     | . number\l 61     | . identifier\l 62 increment: . identifier INCR\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 97 number: . ICONST\l 98       | . FCONST\l"]
  48 -> 48 [style=solid label="O_ROUND_BRACES"]
  48 -> 49 [style=solid label="SUB"]
  48 -> 50 [style=solid label="NOT"]
  48 -> 13 [style=solid label="IDENTIFIER"]
  48 -> 51 [style=solid label="ICONST"]
  48 -> 52 [style=solid label="FCONST"]
  48 -> 74 [style=dashed label="expr"]
  48 -> 56 [style=dashed label="increment"]
  48 -> 57 [style=dashed label="identifier"]
  48 -> 59 [style=dashed label="number"]
  49 [label="State 49\n\l 48 expr: . expr ADD expr\l 49     | . expr SUB expr\l 50     | . expr TIMES expr\l 51     | . expr DIVIDE expr\l 52     | . SUB expr\l 52     | SUB . expr\l 53     | . increment\l 54     | . expr EQOP expr\l 55     | . expr RELOP expr\l 56     | . expr AND expr\l 57     | . expr OR expr\l 58     | . NOT expr\l 59     | . O_ROUND_BRACES expr C_ROUND_BRACES\l 60     | . number\l 61     | . identifier\l 62 increment: . identifier INCR\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 97 number: . ICONST\l 98       | . FCONST\l"]
  49 -> 48 [style=solid label="O_ROUND_BRACES"]
  49 -> 49 [style=solid label="SUB"]
  49 -> 50 [style=solid label="NOT"]
  49 -> 13 [style=solid label="IDENTIFIER"]
  49 -> 51 [style=solid label="ICONST"]
  49 -> 52 [style=solid label="FCONST"]
  49 -> 75 [style=dashed label="expr"]
  49 -> 56 [style=dashed label="increment"]
  49 -> 57 [style=dashed label="identifier"]
  49 -> 59 [style=dashed label="number"]
  50 [label="State 50\n\l 48 expr: . expr ADD expr\l 49     | . expr SUB expr\l 50     | . expr TIMES expr\l 51     | . expr DIVIDE expr\l 52     | . SUB expr\l 53     | . increment\l 54     | . expr EQOP expr\l 55     | . expr RELOP expr\l 56     | . expr AND expr\l 57     | . expr OR expr\l 58     | . NOT expr\l 58     | NOT . expr\l 59     | . O_ROUND_BRACES expr C_ROUND_BRACES\l 60     | . number\l 61     | . identifier\l 62 increment: . identifier INCR\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 97 number: . ICONST\l 98       | . FCONST\l"]
  50 -> 48 [style=solid label="O_ROUND_BRACES"]
  50 -> 49 [style=solid label="SUB"]
  50 -> 50 [style=solid label="NOT"]
  50 -> 13 [style=solid label="IDENTIFIER"]
  50 -> 51 [style=solid label="ICONST"]
  50 -> 52 [style=solid label="FCONST"]
  50 -> 76 [style=dashed label="expr"]
  50 -> 56 [style=dashed label="increment"]
  50 -> 57 [style=dashed label="identifier"]
  50 -> 59 [style=dashed label="number"]
  51 [label="State 51\n\l 97 number: ICONST .\l"]
  51 -> "51R97" [style=solid]
 "51R97" [label="R97", fillcolor=3, shape=diamond, style=filled]
  52 [label="State 52\n\l 98 number: FCONST .\l"]
  52 -> "52R98" [style=solid]
 "52R98" [label="R98", fillcolor=3, shape=diamond, style=filled]
  53 [label="State 53\n\l 95 word: CCONST .\l"]
  53 -> "53R95" [style=solid]
 "53R95" [label="R95", fillcolor=3, shape=diamond, style=filled]
  54 [label="State 54\n\l 96 word: STRCONST .\l"]
  54 -> "54R96" [style=solid]
 "54R96" [label="R96", fillcolor=3, shape=diamond, style=filled]
  55 [label="State 55\n\l 46 assignment: identifier ASSIGN expr .  [COMMA, SEMICOLON]\l 48 expr: expr . ADD expr\l 49     | expr . SUB expr\l 50     | expr . TIMES expr\l 51     | expr . DIVIDE expr\l 54     | expr . EQOP expr\l 55     | expr . RELOP expr\l 56     | expr . AND expr\l 57     | expr . OR expr\l"]
  55 -> 77 [style=solid label="ADD"]
  55 -> 78 [style=solid label="SUB"]
  55 -> 79 [style=solid label="TIMES"]
  55 -> 80 [style=solid label="DIVIDE"]
  55 -> 81 [style=solid label="EQOP"]
  55 -> 82 [style=solid label="RELOP"]
  55 -> 83 [style=solid label="AND"]
  55 -> 84 [style=solid label="OR"]
  55 -> "55R46" [style=solid]
 "55R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  56 [label="State 56\n\l 53 expr: increment .\l"]
  56 -> "56R53" [style=solid]
 "56R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  57 [label="State 57\n\l 61 expr: identifier .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, TIMES, DIVIDE, EQOP, RELOP, AND, OR]\l 62 increment: identifier . INCR\l 89 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | identifier . DOT identifier\l"]
  57 -> 27 [style=solid label="O_SQUARE_BRACES"]
  57 -> 28 [style=solid label="DOT"]
  57 -> 85 [style=solid label="INCR"]
  57 -> "57R61" [style=solid]
 "57R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  58 [label="State 58\n\l 45 assignment: identifier ASSIGN word .\l"]
  58 -> "58R45" [style=solid]
 "58R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  59 [label="State 59\n\l 60 expr: number .\l"]
  59 -> "59R60" [style=solid]
 "59R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  60 [label="State 60\n\l  7 var_decl: . simple_declaration\l  8         | . assignment\l  9         | . var_decl COMMA var_decl\l 10 simple_declaration: . %empty  [COMMA, SEMICOLON]\l 11                   | . identifier\l 12 struct_declaration: STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES . var_decl\l 45 assignment: . identifier ASSIGN word\l 46           | . identifier ASSIGN expr\l 47           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  60 -> 13 [style=solid label="IDENTIFIER"]
  60 -> 86 [style=dashed label="var_decl"]
  60 -> 23 [style=dashed label="simple_declaration"]
  60 -> 24 [style=dashed label="assignment"]
  60 -> 41 [style=dashed label="identifier"]
  60 -> "60R10" [style=solid]
 "60R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  61 [label="State 61\n\l 89 identifier: identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES .\l"]
  61 -> "61R89" [style=solid]
 "61R89" [label="R89", fillcolor=3, shape=diamond, style=filled]
  62 [label="State 62\n\l 90 identifier: identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES .\l"]
  62 -> "62R90" [style=solid]
 "62R90" [label="R90", fillcolor=3, shape=diamond, style=filled]
  63 [label="State 63\n\l 20 func_definition: var_type identifier O_ROUND_BRACES argument_list C_ROUND_BRACES . O_CURLY_BRACES body C_CURLY_BRACES\l"]
  63 -> 87 [style=solid label="O_CURLY_BRACES"]
  64 [label="State 64\n\l 25 parameter_list: parameter_list COMMA . parameter_declaration\l 26 parameter_declaration: . var_type identifier\l 83 var_type: . VOID\l 84         | . INT\l 85         | . FLOAT\l 86         | . CHAR\l 87         | . STRUCT identifier\l"]
  64 -> 1 [style=solid label="VOID"]
  64 -> 2 [style=solid label="INT"]
  64 -> 3 [style=solid label="FLOAT"]
  64 -> 4 [style=solid label="CHAR"]
  64 -> 19 [style=solid label="STRUCT"]
  64 -> 88 [style=dashed label="parameter_declaration"]
  64 -> 46 [style=dashed label="var_type"]
  65 [label="State 65\n\l 26 parameter_declaration: var_type identifier .  [C_ROUND_BRACES, COMMA]\l 89 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | identifier . DOT identifier\l"]
  65 -> 27 [style=solid label="O_SQUARE_BRACES"]
  65 -> 28 [style=solid label="DOT"]
  65 -> "65R26" [style=solid]
 "65R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  66 [label="State 66\n\l 13 inizialization_list: . identifier\l 14                    | . const\l 15                    | . STRCONST\l 16                    | . O_CURLY_BRACES inizialization_list COMMA inizialization_list C_CURLY_BRACES\l 16                    | O_CURLY_BRACES . inizialization_list COMMA inizialization_list C_CURLY_BRACES\l 17                    | . inizialization_list COMMA inizialization_list\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 92 const: . ICONST\l 93      | . FCONST\l 94      | . CCONST\l"]
  66 -> 66 [style=solid label="O_CURLY_BRACES"]
  66 -> 13 [style=solid label="IDENTIFIER"]
  66 -> 67 [style=solid label="ICONST"]
  66 -> 68 [style=solid label="FCONST"]
  66 -> 69 [style=solid label="CCONST"]
  66 -> 70 [style=solid label="STRCONST"]
  66 -> 89 [style=dashed label="inizialization_list"]
  66 -> 72 [style=dashed label="identifier"]
  66 -> 73 [style=dashed label="const"]
  67 [label="State 67\n\l 92 const: ICONST .\l"]
  67 -> "67R92" [style=solid]
 "67R92" [label="R92", fillcolor=3, shape=diamond, style=filled]
  68 [label="State 68\n\l 93 const: FCONST .\l"]
  68 -> "68R93" [style=solid]
 "68R93" [label="R93", fillcolor=3, shape=diamond, style=filled]
  69 [label="State 69\n\l 94 const: CCONST .\l"]
  69 -> "69R94" [style=solid]
 "69R94" [label="R94", fillcolor=3, shape=diamond, style=filled]
  70 [label="State 70\n\l 15 inizialization_list: STRCONST .\l"]
  70 -> "70R15" [style=solid]
 "70R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  71 [label="State 71\n\l 17 inizialization_list: inizialization_list . COMMA inizialization_list\l 47 assignment: identifier ASSIGN O_CURLY_BRACES inizialization_list . C_CURLY_BRACES\l"]
  71 -> 90 [style=solid label="C_CURLY_BRACES"]
  71 -> 91 [style=solid label="COMMA"]
  72 [label="State 72\n\l 13 inizialization_list: identifier .  [C_CURLY_BRACES, COMMA]\l 89 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | identifier . DOT identifier\l"]
  72 -> 27 [style=solid label="O_SQUARE_BRACES"]
  72 -> 28 [style=solid label="DOT"]
  72 -> "72R13" [style=solid]
 "72R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  73 [label="State 73\n\l 14 inizialization_list: const .\l"]
  73 -> "73R14" [style=solid]
 "73R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  74 [label="State 74\n\l 48 expr: expr . ADD expr\l 49     | expr . SUB expr\l 50     | expr . TIMES expr\l 51     | expr . DIVIDE expr\l 54     | expr . EQOP expr\l 55     | expr . RELOP expr\l 56     | expr . AND expr\l 57     | expr . OR expr\l 59     | O_ROUND_BRACES expr . C_ROUND_BRACES\l"]
  74 -> 92 [style=solid label="C_ROUND_BRACES"]
  74 -> 77 [style=solid label="ADD"]
  74 -> 78 [style=solid label="SUB"]
  74 -> 79 [style=solid label="TIMES"]
  74 -> 80 [style=solid label="DIVIDE"]
  74 -> 81 [style=solid label="EQOP"]
  74 -> 82 [style=solid label="RELOP"]
  74 -> 83 [style=solid label="AND"]
  74 -> 84 [style=solid label="OR"]
  75 [label="State 75\n\l 48 expr: expr . ADD expr\l 49     | expr . SUB expr\l 50     | expr . TIMES expr\l 51     | expr . DIVIDE expr\l 52     | SUB expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, TIMES, DIVIDE, EQOP, RELOP, AND, OR]\l 54     | expr . EQOP expr\l 55     | expr . RELOP expr\l 56     | expr . AND expr\l 57     | expr . OR expr\l"]
  75 -> "75R52" [style=solid]
 "75R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  76 [label="State 76\n\l 48 expr: expr . ADD expr\l 49     | expr . SUB expr\l 50     | expr . TIMES expr\l 51     | expr . DIVIDE expr\l 54     | expr . EQOP expr\l 55     | expr . RELOP expr\l 56     | expr . AND expr\l 57     | expr . OR expr\l 58     | NOT expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, TIMES, DIVIDE, EQOP, RELOP, AND, OR]\l"]
  76 -> "76R58" [style=solid]
 "76R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  77 [label="State 77\n\l 48 expr: . expr ADD expr\l 48     | expr ADD . expr\l 49     | . expr SUB expr\l 50     | . expr TIMES expr\l 51     | . expr DIVIDE expr\l 52     | . SUB expr\l 53     | . increment\l 54     | . expr EQOP expr\l 55     | . expr RELOP expr\l 56     | . expr AND expr\l 57     | . expr OR expr\l 58     | . NOT expr\l 59     | . O_ROUND_BRACES expr C_ROUND_BRACES\l 60     | . number\l 61     | . identifier\l 62 increment: . identifier INCR\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 97 number: . ICONST\l 98       | . FCONST\l"]
  77 -> 48 [style=solid label="O_ROUND_BRACES"]
  77 -> 49 [style=solid label="SUB"]
  77 -> 50 [style=solid label="NOT"]
  77 -> 13 [style=solid label="IDENTIFIER"]
  77 -> 51 [style=solid label="ICONST"]
  77 -> 52 [style=solid label="FCONST"]
  77 -> 93 [style=dashed label="expr"]
  77 -> 56 [style=dashed label="increment"]
  77 -> 57 [style=dashed label="identifier"]
  77 -> 59 [style=dashed label="number"]
  78 [label="State 78\n\l 48 expr: . expr ADD expr\l 49     | . expr SUB expr\l 49     | expr SUB . expr\l 50     | . expr TIMES expr\l 51     | . expr DIVIDE expr\l 52     | . SUB expr\l 53     | . increment\l 54     | . expr EQOP expr\l 55     | . expr RELOP expr\l 56     | . expr AND expr\l 57     | . expr OR expr\l 58     | . NOT expr\l 59     | . O_ROUND_BRACES expr C_ROUND_BRACES\l 60     | . number\l 61     | . identifier\l 62 increment: . identifier INCR\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 97 number: . ICONST\l 98       | . FCONST\l"]
  78 -> 48 [style=solid label="O_ROUND_BRACES"]
  78 -> 49 [style=solid label="SUB"]
  78 -> 50 [style=solid label="NOT"]
  78 -> 13 [style=solid label="IDENTIFIER"]
  78 -> 51 [style=solid label="ICONST"]
  78 -> 52 [style=solid label="FCONST"]
  78 -> 94 [style=dashed label="expr"]
  78 -> 56 [style=dashed label="increment"]
  78 -> 57 [style=dashed label="identifier"]
  78 -> 59 [style=dashed label="number"]
  79 [label="State 79\n\l 48 expr: . expr ADD expr\l 49     | . expr SUB expr\l 50     | . expr TIMES expr\l 50     | expr TIMES . expr\l 51     | . expr DIVIDE expr\l 52     | . SUB expr\l 53     | . increment\l 54     | . expr EQOP expr\l 55     | . expr RELOP expr\l 56     | . expr AND expr\l 57     | . expr OR expr\l 58     | . NOT expr\l 59     | . O_ROUND_BRACES expr C_ROUND_BRACES\l 60     | . number\l 61     | . identifier\l 62 increment: . identifier INCR\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 97 number: . ICONST\l 98       | . FCONST\l"]
  79 -> 48 [style=solid label="O_ROUND_BRACES"]
  79 -> 49 [style=solid label="SUB"]
  79 -> 50 [style=solid label="NOT"]
  79 -> 13 [style=solid label="IDENTIFIER"]
  79 -> 51 [style=solid label="ICONST"]
  79 -> 52 [style=solid label="FCONST"]
  79 -> 95 [style=dashed label="expr"]
  79 -> 56 [style=dashed label="increment"]
  79 -> 57 [style=dashed label="identifier"]
  79 -> 59 [style=dashed label="number"]
  80 [label="State 80\n\l 48 expr: . expr ADD expr\l 49     | . expr SUB expr\l 50     | . expr TIMES expr\l 51     | . expr DIVIDE expr\l 51     | expr DIVIDE . expr\l 52     | . SUB expr\l 53     | . increment\l 54     | . expr EQOP expr\l 55     | . expr RELOP expr\l 56     | . expr AND expr\l 57     | . expr OR expr\l 58     | . NOT expr\l 59     | . O_ROUND_BRACES expr C_ROUND_BRACES\l 60     | . number\l 61     | . identifier\l 62 increment: . identifier INCR\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 97 number: . ICONST\l 98       | . FCONST\l"]
  80 -> 48 [style=solid label="O_ROUND_BRACES"]
  80 -> 49 [style=solid label="SUB"]
  80 -> 50 [style=solid label="NOT"]
  80 -> 13 [style=solid label="IDENTIFIER"]
  80 -> 51 [style=solid label="ICONST"]
  80 -> 52 [style=solid label="FCONST"]
  80 -> 96 [style=dashed label="expr"]
  80 -> 56 [style=dashed label="increment"]
  80 -> 57 [style=dashed label="identifier"]
  80 -> 59 [style=dashed label="number"]
  81 [label="State 81\n\l 48 expr: . expr ADD expr\l 49     | . expr SUB expr\l 50     | . expr TIMES expr\l 51     | . expr DIVIDE expr\l 52     | . SUB expr\l 53     | . increment\l 54     | . expr EQOP expr\l 54     | expr EQOP . expr\l 55     | . expr RELOP expr\l 56     | . expr AND expr\l 57     | . expr OR expr\l 58     | . NOT expr\l 59     | . O_ROUND_BRACES expr C_ROUND_BRACES\l 60     | . number\l 61     | . identifier\l 62 increment: . identifier INCR\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 97 number: . ICONST\l 98       | . FCONST\l"]
  81 -> 48 [style=solid label="O_ROUND_BRACES"]
  81 -> 49 [style=solid label="SUB"]
  81 -> 50 [style=solid label="NOT"]
  81 -> 13 [style=solid label="IDENTIFIER"]
  81 -> 51 [style=solid label="ICONST"]
  81 -> 52 [style=solid label="FCONST"]
  81 -> 97 [style=dashed label="expr"]
  81 -> 56 [style=dashed label="increment"]
  81 -> 57 [style=dashed label="identifier"]
  81 -> 59 [style=dashed label="number"]
  82 [label="State 82\n\l 48 expr: . expr ADD expr\l 49     | . expr SUB expr\l 50     | . expr TIMES expr\l 51     | . expr DIVIDE expr\l 52     | . SUB expr\l 53     | . increment\l 54     | . expr EQOP expr\l 55     | . expr RELOP expr\l 55     | expr RELOP . expr\l 56     | . expr AND expr\l 57     | . expr OR expr\l 58     | . NOT expr\l 59     | . O_ROUND_BRACES expr C_ROUND_BRACES\l 60     | . number\l 61     | . identifier\l 62 increment: . identifier INCR\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 97 number: . ICONST\l 98       | . FCONST\l"]
  82 -> 48 [style=solid label="O_ROUND_BRACES"]
  82 -> 49 [style=solid label="SUB"]
  82 -> 50 [style=solid label="NOT"]
  82 -> 13 [style=solid label="IDENTIFIER"]
  82 -> 51 [style=solid label="ICONST"]
  82 -> 52 [style=solid label="FCONST"]
  82 -> 98 [style=dashed label="expr"]
  82 -> 56 [style=dashed label="increment"]
  82 -> 57 [style=dashed label="identifier"]
  82 -> 59 [style=dashed label="number"]
  83 [label="State 83\n\l 48 expr: . expr ADD expr\l 49     | . expr SUB expr\l 50     | . expr TIMES expr\l 51     | . expr DIVIDE expr\l 52     | . SUB expr\l 53     | . increment\l 54     | . expr EQOP expr\l 55     | . expr RELOP expr\l 56     | . expr AND expr\l 56     | expr AND . expr\l 57     | . expr OR expr\l 58     | . NOT expr\l 59     | . O_ROUND_BRACES expr C_ROUND_BRACES\l 60     | . number\l 61     | . identifier\l 62 increment: . identifier INCR\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 97 number: . ICONST\l 98       | . FCONST\l"]
  83 -> 48 [style=solid label="O_ROUND_BRACES"]
  83 -> 49 [style=solid label="SUB"]
  83 -> 50 [style=solid label="NOT"]
  83 -> 13 [style=solid label="IDENTIFIER"]
  83 -> 51 [style=solid label="ICONST"]
  83 -> 52 [style=solid label="FCONST"]
  83 -> 99 [style=dashed label="expr"]
  83 -> 56 [style=dashed label="increment"]
  83 -> 57 [style=dashed label="identifier"]
  83 -> 59 [style=dashed label="number"]
  84 [label="State 84\n\l 48 expr: . expr ADD expr\l 49     | . expr SUB expr\l 50     | . expr TIMES expr\l 51     | . expr DIVIDE expr\l 52     | . SUB expr\l 53     | . increment\l 54     | . expr EQOP expr\l 55     | . expr RELOP expr\l 56     | . expr AND expr\l 57     | . expr OR expr\l 57     | expr OR . expr\l 58     | . NOT expr\l 59     | . O_ROUND_BRACES expr C_ROUND_BRACES\l 60     | . number\l 61     | . identifier\l 62 increment: . identifier INCR\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 97 number: . ICONST\l 98       | . FCONST\l"]
  84 -> 48 [style=solid label="O_ROUND_BRACES"]
  84 -> 49 [style=solid label="SUB"]
  84 -> 50 [style=solid label="NOT"]
  84 -> 13 [style=solid label="IDENTIFIER"]
  84 -> 51 [style=solid label="ICONST"]
  84 -> 52 [style=solid label="FCONST"]
  84 -> 100 [style=dashed label="expr"]
  84 -> 56 [style=dashed label="increment"]
  84 -> 57 [style=dashed label="identifier"]
  84 -> 59 [style=dashed label="number"]
  85 [label="State 85\n\l 62 increment: identifier INCR .\l"]
  85 -> "85R62" [style=solid]
 "85R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  86 [label="State 86\n\l  9 var_decl: var_decl . COMMA var_decl\l 12 struct_declaration: STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl .  [SEMICOLON]\l"]
  86 -> 31 [style=solid label="COMMA"]
  86 -> "86R12" [style=solid]
 "86R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  87 [label="State 87\n\l  3 declarations: . declaration\l  4             | . declarations declaration\l  5 declaration: . var_type var_decl SEMICOLON\l  6            | . struct_declaration SEMICOLON\l 12 struct_declaration: . STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl\l 20 func_definition: var_type identifier O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES . body C_CURLY_BRACES\l 27 body: . statements\l 28     | . declarations statements\l 29 statements: . statement\l 30           | . statements statement\l 31 statement: . SEMICOLON\l 32          | . func_call SEMICOLON\l 33          | . assignment SEMICOLON\l 34          | . increment SEMICOLON\l 35          | . printf_stat SEMICOLON\l 36          | . scanf_stat SEMICOLON\l 37          | . if_stat\l 38          | . for_stat\l 39          | . return_stat SEMICOLON\l 40 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES\l 41          | . identifier ASSIGN identifier O_ROUND_BRACES call_args C_ROUND_BRACES\l 45 assignment: . identifier ASSIGN word\l 46           | . identifier ASSIGN expr\l 47           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 62 increment: . identifier INCR\l 63 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES\l 64            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES\l 67 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES\l 70 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block\l 71        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block\l 74 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block\l 80 return_stat: . RETURN\l 81            | . RETURN const\l 82            | . RETURN identifier\l 83 var_type: . VOID\l 84         | . INT\l 85         | . FLOAT\l 86         | . CHAR\l 87         | . STRUCT identifier\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  87 -> 101 [style=solid label="SEMICOLON"]
  87 -> 102 [style=solid label="IF"]
  87 -> 103 [style=solid label="FOR"]
  87 -> 104 [style=solid label="PRINTF"]
  87 -> 105 [style=solid label="SCANF"]
  87 -> 13 [style=solid label="IDENTIFIER"]
  87 -> 106 [style=solid label="RETURN"]
  87 -> 1 [style=solid label="VOID"]
  87 -> 2 [style=solid label="INT"]
  87 -> 3 [style=solid label="FLOAT"]
  87 -> 4 [style=solid label="CHAR"]
  87 -> 5 [style=solid label="STRUCT"]
  87 -> 107 [style=dashed label="declarations"]
  87 -> 8 [style=dashed label="declaration"]
  87 -> 9 [style=dashed label="struct_declaration"]
  87 -> 108 [style=dashed label="body"]
  87 -> 109 [style=dashed label="statements"]
  87 -> 110 [style=dashed label="statement"]
  87 -> 111 [style=dashed label="func_call"]
  87 -> 112 [style=dashed label="assignment"]
  87 -> 113 [style=dashed label="increment"]
  87 -> 114 [style=dashed label="printf_stat"]
  87 -> 115 [style=dashed label="scanf_stat"]
  87 -> 116 [style=dashed label="if_stat"]
  87 -> 117 [style=dashed label="for_stat"]
  87 -> 118 [style=dashed label="return_stat"]
  87 -> 36 [style=dashed label="var_type"]
  87 -> 119 [style=dashed label="identifier"]
  88 [label="State 88\n\l 25 parameter_list: parameter_list COMMA parameter_declaration .\l"]
  88 -> "88R25" [style=solid]
 "88R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  89 [label="State 89\n\l 16 inizialization_list: O_CURLY_BRACES inizialization_list . COMMA inizialization_list C_CURLY_BRACES\l 17                    | inizialization_list . COMMA inizialization_list\l"]
  89 -> 120 [style=solid label="COMMA"]
  90 [label="State 90\n\l 47 assignment: identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES .\l"]
  90 -> "90R47" [style=solid]
 "90R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  91 [label="State 91\n\l 13 inizialization_list: . identifier\l 14                    | . const\l 15                    | . STRCONST\l 16                    | . O_CURLY_BRACES inizialization_list COMMA inizialization_list C_CURLY_BRACES\l 17                    | . inizialization_list COMMA inizialization_list\l 17                    | inizialization_list COMMA . inizialization_list\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 92 const: . ICONST\l 93      | . FCONST\l 94      | . CCONST\l"]
  91 -> 66 [style=solid label="O_CURLY_BRACES"]
  91 -> 13 [style=solid label="IDENTIFIER"]
  91 -> 67 [style=solid label="ICONST"]
  91 -> 68 [style=solid label="FCONST"]
  91 -> 69 [style=solid label="CCONST"]
  91 -> 70 [style=solid label="STRCONST"]
  91 -> 121 [style=dashed label="inizialization_list"]
  91 -> 72 [style=dashed label="identifier"]
  91 -> 73 [style=dashed label="const"]
  92 [label="State 92\n\l 59 expr: O_ROUND_BRACES expr C_ROUND_BRACES .\l"]
  92 -> "92R59" [style=solid]
 "92R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  93 [label="State 93\n\l 48 expr: expr . ADD expr\l 48     | expr ADD expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, EQOP, RELOP, AND, OR]\l 49     | expr . SUB expr\l 50     | expr . TIMES expr\l 51     | expr . DIVIDE expr\l 54     | expr . EQOP expr\l 55     | expr . RELOP expr\l 56     | expr . AND expr\l 57     | expr . OR expr\l"]
  93 -> 79 [style=solid label="TIMES"]
  93 -> 80 [style=solid label="DIVIDE"]
  93 -> "93R48" [style=solid]
 "93R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  94 [label="State 94\n\l 48 expr: expr . ADD expr\l 49     | expr . SUB expr\l 49     | expr SUB expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, EQOP, RELOP, AND, OR]\l 50     | expr . TIMES expr\l 51     | expr . DIVIDE expr\l 54     | expr . EQOP expr\l 55     | expr . RELOP expr\l 56     | expr . AND expr\l 57     | expr . OR expr\l"]
  94 -> 79 [style=solid label="TIMES"]
  94 -> 80 [style=solid label="DIVIDE"]
  94 -> "94R49" [style=solid]
 "94R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  95 [label="State 95\n\l 48 expr: expr . ADD expr\l 49     | expr . SUB expr\l 50     | expr . TIMES expr\l 50     | expr TIMES expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, TIMES, DIVIDE, EQOP, RELOP, AND, OR]\l 51     | expr . DIVIDE expr\l 54     | expr . EQOP expr\l 55     | expr . RELOP expr\l 56     | expr . AND expr\l 57     | expr . OR expr\l"]
  95 -> "95R50" [style=solid]
 "95R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  96 [label="State 96\n\l 48 expr: expr . ADD expr\l 49     | expr . SUB expr\l 50     | expr . TIMES expr\l 51     | expr . DIVIDE expr\l 51     | expr DIVIDE expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, TIMES, DIVIDE, EQOP, RELOP, AND, OR]\l 54     | expr . EQOP expr\l 55     | expr . RELOP expr\l 56     | expr . AND expr\l 57     | expr . OR expr\l"]
  96 -> "96R51" [style=solid]
 "96R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  97 [label="State 97\n\l 48 expr: expr . ADD expr\l 49     | expr . SUB expr\l 50     | expr . TIMES expr\l 51     | expr . DIVIDE expr\l 54     | expr . EQOP expr\l 54     | expr EQOP expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, EQOP, AND, OR]\l 55     | expr . RELOP expr\l 56     | expr . AND expr\l 57     | expr . OR expr\l"]
  97 -> 77 [style=solid label="ADD"]
  97 -> 78 [style=solid label="SUB"]
  97 -> 79 [style=solid label="TIMES"]
  97 -> 80 [style=solid label="DIVIDE"]
  97 -> 82 [style=solid label="RELOP"]
  97 -> "97R54" [style=solid]
 "97R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  98 [label="State 98\n\l 48 expr: expr . ADD expr\l 49     | expr . SUB expr\l 50     | expr . TIMES expr\l 51     | expr . DIVIDE expr\l 54     | expr . EQOP expr\l 55     | expr . RELOP expr\l 55     | expr RELOP expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, EQOP, RELOP, AND, OR]\l 56     | expr . AND expr\l 57     | expr . OR expr\l"]
  98 -> 77 [style=solid label="ADD"]
  98 -> 78 [style=solid label="SUB"]
  98 -> 79 [style=solid label="TIMES"]
  98 -> 80 [style=solid label="DIVIDE"]
  98 -> "98R55" [style=solid]
 "98R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  99 [label="State 99\n\l 48 expr: expr . ADD expr\l 49     | expr . SUB expr\l 50     | expr . TIMES expr\l 51     | expr . DIVIDE expr\l 54     | expr . EQOP expr\l 55     | expr . RELOP expr\l 56     | expr . AND expr\l 56     | expr AND expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, AND, OR]\l 57     | expr . OR expr\l"]
  99 -> 77 [style=solid label="ADD"]
  99 -> 78 [style=solid label="SUB"]
  99 -> 79 [style=solid label="TIMES"]
  99 -> 80 [style=solid label="DIVIDE"]
  99 -> 81 [style=solid label="EQOP"]
  99 -> 82 [style=solid label="RELOP"]
  99 -> "99R56" [style=solid]
 "99R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  100 [label="State 100\n\l 48 expr: expr . ADD expr\l 49     | expr . SUB expr\l 50     | expr . TIMES expr\l 51     | expr . DIVIDE expr\l 54     | expr . EQOP expr\l 55     | expr . RELOP expr\l 56     | expr . AND expr\l 57     | expr . OR expr\l 57     | expr OR expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, OR]\l"]
  100 -> 77 [style=solid label="ADD"]
  100 -> 78 [style=solid label="SUB"]
  100 -> 79 [style=solid label="TIMES"]
  100 -> 80 [style=solid label="DIVIDE"]
  100 -> 81 [style=solid label="EQOP"]
  100 -> 82 [style=solid label="RELOP"]
  100 -> 83 [style=solid label="AND"]
  100 -> "100R57" [style=solid]
 "100R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  101 [label="State 101\n\l 31 statement: SEMICOLON .\l"]
  101 -> "101R31" [style=solid]
 "101R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  102 [label="State 102\n\l 70 if_stat: IF . O_ROUND_BRACES expr C_ROUND_BRACES block\l 71        | IF . O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block\l"]
  102 -> 122 [style=solid label="O_ROUND_BRACES"]
  103 [label="State 103\n\l 74 for_stat: FOR . O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block\l"]
  103 -> 123 [style=solid label="O_ROUND_BRACES"]
  104 [label="State 104\n\l 63 printf_stat: PRINTF . O_ROUND_BRACES word C_ROUND_BRACES\l 64            | PRINTF . O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES\l"]
  104 -> 124 [style=solid label="O_ROUND_BRACES"]
  105 [label="State 105\n\l 67 scanf_stat: SCANF . O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES\l"]
  105 -> 125 [style=solid label="O_ROUND_BRACES"]
  106 [label="State 106\n\l 80 return_stat: RETURN .  [SEMICOLON]\l 81            | RETURN . const\l 82            | RETURN . identifier\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 92 const: . ICONST\l 93      | . FCONST\l 94      | . CCONST\l"]
  106 -> 13 [style=solid label="IDENTIFIER"]
  106 -> 67 [style=solid label="ICONST"]
  106 -> 68 [style=solid label="FCONST"]
  106 -> 69 [style=solid label="CCONST"]
  106 -> 126 [style=dashed label="identifier"]
  106 -> 127 [style=dashed label="const"]
  106 -> "106R80" [style=solid]
 "106R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  107 [label="State 107\n\l  4 declarations: declarations . declaration\l  5 declaration: . var_type var_decl SEMICOLON\l  6            | . struct_declaration SEMICOLON\l 12 struct_declaration: . STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl\l 28 body: declarations . statements\l 29 statements: . statement\l 30           | . statements statement\l 31 statement: . SEMICOLON\l 32          | . func_call SEMICOLON\l 33          | . assignment SEMICOLON\l 34          | . increment SEMICOLON\l 35          | . printf_stat SEMICOLON\l 36          | . scanf_stat SEMICOLON\l 37          | . if_stat\l 38          | . for_stat\l 39          | . return_stat SEMICOLON\l 40 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES\l 41          | . identifier ASSIGN identifier O_ROUND_BRACES call_args C_ROUND_BRACES\l 45 assignment: . identifier ASSIGN word\l 46           | . identifier ASSIGN expr\l 47           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 62 increment: . identifier INCR\l 63 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES\l 64            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES\l 67 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES\l 70 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block\l 71        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block\l 74 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block\l 80 return_stat: . RETURN\l 81            | . RETURN const\l 82            | . RETURN identifier\l 83 var_type: . VOID\l 84         | . INT\l 85         | . FLOAT\l 86         | . CHAR\l 87         | . STRUCT identifier\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  107 -> 101 [style=solid label="SEMICOLON"]
  107 -> 102 [style=solid label="IF"]
  107 -> 103 [style=solid label="FOR"]
  107 -> 104 [style=solid label="PRINTF"]
  107 -> 105 [style=solid label="SCANF"]
  107 -> 13 [style=solid label="IDENTIFIER"]
  107 -> 106 [style=solid label="RETURN"]
  107 -> 1 [style=solid label="VOID"]
  107 -> 2 [style=solid label="INT"]
  107 -> 3 [style=solid label="FLOAT"]
  107 -> 4 [style=solid label="CHAR"]
  107 -> 5 [style=solid label="STRUCT"]
  107 -> 16 [style=dashed label="declaration"]
  107 -> 9 [style=dashed label="struct_declaration"]
  107 -> 128 [style=dashed label="statements"]
  107 -> 110 [style=dashed label="statement"]
  107 -> 111 [style=dashed label="func_call"]
  107 -> 112 [style=dashed label="assignment"]
  107 -> 113 [style=dashed label="increment"]
  107 -> 114 [style=dashed label="printf_stat"]
  107 -> 115 [style=dashed label="scanf_stat"]
  107 -> 116 [style=dashed label="if_stat"]
  107 -> 117 [style=dashed label="for_stat"]
  107 -> 118 [style=dashed label="return_stat"]
  107 -> 36 [style=dashed label="var_type"]
  107 -> 119 [style=dashed label="identifier"]
  108 [label="State 108\n\l 20 func_definition: var_type identifier O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body . C_CURLY_BRACES\l"]
  108 -> 129 [style=solid label="C_CURLY_BRACES"]
  109 [label="State 109\n\l 27 body: statements .  [C_CURLY_BRACES]\l 30 statements: statements . statement\l 31 statement: . SEMICOLON\l 32          | . func_call SEMICOLON\l 33          | . assignment SEMICOLON\l 34          | . increment SEMICOLON\l 35          | . printf_stat SEMICOLON\l 36          | . scanf_stat SEMICOLON\l 37          | . if_stat\l 38          | . for_stat\l 39          | . return_stat SEMICOLON\l 40 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES\l 41          | . identifier ASSIGN identifier O_ROUND_BRACES call_args C_ROUND_BRACES\l 45 assignment: . identifier ASSIGN word\l 46           | . identifier ASSIGN expr\l 47           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 62 increment: . identifier INCR\l 63 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES\l 64            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES\l 67 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES\l 70 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block\l 71        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block\l 74 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block\l 80 return_stat: . RETURN\l 81            | . RETURN const\l 82            | . RETURN identifier\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  109 -> 101 [style=solid label="SEMICOLON"]
  109 -> 102 [style=solid label="IF"]
  109 -> 103 [style=solid label="FOR"]
  109 -> 104 [style=solid label="PRINTF"]
  109 -> 105 [style=solid label="SCANF"]
  109 -> 13 [style=solid label="IDENTIFIER"]
  109 -> 106 [style=solid label="RETURN"]
  109 -> 130 [style=dashed label="statement"]
  109 -> 111 [style=dashed label="func_call"]
  109 -> 112 [style=dashed label="assignment"]
  109 -> 113 [style=dashed label="increment"]
  109 -> 114 [style=dashed label="printf_stat"]
  109 -> 115 [style=dashed label="scanf_stat"]
  109 -> 116 [style=dashed label="if_stat"]
  109 -> 117 [style=dashed label="for_stat"]
  109 -> 118 [style=dashed label="return_stat"]
  109 -> 119 [style=dashed label="identifier"]
  109 -> "109R27" [style=solid]
 "109R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  110 [label="State 110\n\l 29 statements: statement .\l"]
  110 -> "110R29" [style=solid]
 "110R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  111 [label="State 111\n\l 32 statement: func_call . SEMICOLON\l"]
  111 -> 131 [style=solid label="SEMICOLON"]
  112 [label="State 112\n\l 33 statement: assignment . SEMICOLON\l"]
  112 -> 132 [style=solid label="SEMICOLON"]
  113 [label="State 113\n\l 34 statement: increment . SEMICOLON\l"]
  113 -> 133 [style=solid label="SEMICOLON"]
  114 [label="State 114\n\l 35 statement: printf_stat . SEMICOLON\l"]
  114 -> 134 [style=solid label="SEMICOLON"]
  115 [label="State 115\n\l 36 statement: scanf_stat . SEMICOLON\l"]
  115 -> 135 [style=solid label="SEMICOLON"]
  116 [label="State 116\n\l 37 statement: if_stat .\l"]
  116 -> "116R37" [style=solid]
 "116R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  117 [label="State 117\n\l 38 statement: for_stat .\l"]
  117 -> "117R38" [style=solid]
 "117R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  118 [label="State 118\n\l 39 statement: return_stat . SEMICOLON\l"]
  118 -> 136 [style=solid label="SEMICOLON"]
  119 [label="State 119\n\l 40 func_call: identifier . O_ROUND_BRACES call_args C_ROUND_BRACES\l 41          | identifier . ASSIGN identifier O_ROUND_BRACES call_args C_ROUND_BRACES\l 45 assignment: identifier . ASSIGN word\l 46           | identifier . ASSIGN expr\l 47           | identifier . ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 62 increment: identifier . INCR\l 89 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | identifier . DOT identifier\l"]
  119 -> 27 [style=solid label="O_SQUARE_BRACES"]
  119 -> 137 [style=solid label="O_ROUND_BRACES"]
  119 -> 28 [style=solid label="DOT"]
  119 -> 138 [style=solid label="ASSIGN"]
  119 -> 85 [style=solid label="INCR"]
  120 [label="State 120\n\l 13 inizialization_list: . identifier\l 14                    | . const\l 15                    | . STRCONST\l 16                    | . O_CURLY_BRACES inizialization_list COMMA inizialization_list C_CURLY_BRACES\l 16                    | O_CURLY_BRACES inizialization_list COMMA . inizialization_list C_CURLY_BRACES\l 17                    | . inizialization_list COMMA inizialization_list\l 17                    | inizialization_list COMMA . inizialization_list\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 92 const: . ICONST\l 93      | . FCONST\l 94      | . CCONST\l"]
  120 -> 66 [style=solid label="O_CURLY_BRACES"]
  120 -> 13 [style=solid label="IDENTIFIER"]
  120 -> 67 [style=solid label="ICONST"]
  120 -> 68 [style=solid label="FCONST"]
  120 -> 69 [style=solid label="CCONST"]
  120 -> 70 [style=solid label="STRCONST"]
  120 -> 139 [style=dashed label="inizialization_list"]
  120 -> 72 [style=dashed label="identifier"]
  120 -> 73 [style=dashed label="const"]
  121 [label="State 121\n\l 17 inizialization_list: inizialization_list . COMMA inizialization_list\l 17                    | inizialization_list COMMA inizialization_list .  [C_CURLY_BRACES, COMMA]\l"]
  121 -> "121R17" [style=solid]
 "121R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  122 [label="State 122\n\l 48 expr: . expr ADD expr\l 49     | . expr SUB expr\l 50     | . expr TIMES expr\l 51     | . expr DIVIDE expr\l 52     | . SUB expr\l 53     | . increment\l 54     | . expr EQOP expr\l 55     | . expr RELOP expr\l 56     | . expr AND expr\l 57     | . expr OR expr\l 58     | . NOT expr\l 59     | . O_ROUND_BRACES expr C_ROUND_BRACES\l 60     | . number\l 61     | . identifier\l 62 increment: . identifier INCR\l 70 if_stat: IF O_ROUND_BRACES . expr C_ROUND_BRACES block\l 71        | IF O_ROUND_BRACES . expr C_ROUND_BRACES block ELSE block\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 97 number: . ICONST\l 98       | . FCONST\l"]
  122 -> 48 [style=solid label="O_ROUND_BRACES"]
  122 -> 49 [style=solid label="SUB"]
  122 -> 50 [style=solid label="NOT"]
  122 -> 13 [style=solid label="IDENTIFIER"]
  122 -> 51 [style=solid label="ICONST"]
  122 -> 52 [style=solid label="FCONST"]
  122 -> 140 [style=dashed label="expr"]
  122 -> 56 [style=dashed label="increment"]
  122 -> 57 [style=dashed label="identifier"]
  122 -> 59 [style=dashed label="number"]
  123 [label="State 123\n\l 45 assignment: . identifier ASSIGN word\l 46           | . identifier ASSIGN expr\l 47           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 74 for_stat: FOR O_ROUND_BRACES . init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block\l 75 init_for: . %empty  [COMMA, SEMICOLON]\l 76         | . assignment\l 77         | . init_for COMMA init_for\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  123 -> 13 [style=solid label="IDENTIFIER"]
  123 -> 141 [style=dashed label="assignment"]
  123 -> 142 [style=dashed label="init_for"]
  123 -> 143 [style=dashed label="identifier"]
  123 -> "123R75" [style=solid]
 "123R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  124 [label="State 124\n\l 63 printf_stat: PRINTF O_ROUND_BRACES . word C_ROUND_BRACES\l 64            | PRINTF O_ROUND_BRACES . STRCONST COMMA printed_var C_ROUND_BRACES\l 95 word: . CCONST\l 96     | . STRCONST\l"]
  124 -> 53 [style=solid label="CCONST"]
  124 -> 144 [style=solid label="STRCONST"]
  124 -> 145 [style=dashed label="word"]
  125 [label="State 125\n\l 67 scanf_stat: SCANF O_ROUND_BRACES . STRCONST COMMA retrieved_var C_ROUND_BRACES\l"]
  125 -> 146 [style=solid label="STRCONST"]
  126 [label="State 126\n\l 82 return_stat: RETURN identifier .  [SEMICOLON]\l 89 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | identifier . DOT identifier\l"]
  126 -> 27 [style=solid label="O_SQUARE_BRACES"]
  126 -> 28 [style=solid label="DOT"]
  126 -> "126R82" [style=solid]
 "126R82" [label="R82", fillcolor=3, shape=diamond, style=filled]
  127 [label="State 127\n\l 81 return_stat: RETURN const .\l"]
  127 -> "127R81" [style=solid]
 "127R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  128 [label="State 128\n\l 28 body: declarations statements .  [C_CURLY_BRACES]\l 30 statements: statements . statement\l 31 statement: . SEMICOLON\l 32          | . func_call SEMICOLON\l 33          | . assignment SEMICOLON\l 34          | . increment SEMICOLON\l 35          | . printf_stat SEMICOLON\l 36          | . scanf_stat SEMICOLON\l 37          | . if_stat\l 38          | . for_stat\l 39          | . return_stat SEMICOLON\l 40 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES\l 41          | . identifier ASSIGN identifier O_ROUND_BRACES call_args C_ROUND_BRACES\l 45 assignment: . identifier ASSIGN word\l 46           | . identifier ASSIGN expr\l 47           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 62 increment: . identifier INCR\l 63 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES\l 64            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES\l 67 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES\l 70 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block\l 71        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block\l 74 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block\l 80 return_stat: . RETURN\l 81            | . RETURN const\l 82            | . RETURN identifier\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  128 -> 101 [style=solid label="SEMICOLON"]
  128 -> 102 [style=solid label="IF"]
  128 -> 103 [style=solid label="FOR"]
  128 -> 104 [style=solid label="PRINTF"]
  128 -> 105 [style=solid label="SCANF"]
  128 -> 13 [style=solid label="IDENTIFIER"]
  128 -> 106 [style=solid label="RETURN"]
  128 -> 130 [style=dashed label="statement"]
  128 -> 111 [style=dashed label="func_call"]
  128 -> 112 [style=dashed label="assignment"]
  128 -> 113 [style=dashed label="increment"]
  128 -> 114 [style=dashed label="printf_stat"]
  128 -> 115 [style=dashed label="scanf_stat"]
  128 -> 116 [style=dashed label="if_stat"]
  128 -> 117 [style=dashed label="for_stat"]
  128 -> 118 [style=dashed label="return_stat"]
  128 -> 119 [style=dashed label="identifier"]
  128 -> "128R28" [style=solid]
 "128R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  129 [label="State 129\n\l 20 func_definition: var_type identifier O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES .\l"]
  129 -> "129R20" [style=solid]
 "129R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  130 [label="State 130\n\l 30 statements: statements statement .\l"]
  130 -> "130R30" [style=solid]
 "130R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  131 [label="State 131\n\l 32 statement: func_call SEMICOLON .\l"]
  131 -> "131R32" [style=solid]
 "131R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  132 [label="State 132\n\l 33 statement: assignment SEMICOLON .\l"]
  132 -> "132R33" [style=solid]
 "132R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  133 [label="State 133\n\l 34 statement: increment SEMICOLON .\l"]
  133 -> "133R34" [style=solid]
 "133R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  134 [label="State 134\n\l 35 statement: printf_stat SEMICOLON .\l"]
  134 -> "134R35" [style=solid]
 "134R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  135 [label="State 135\n\l 36 statement: scanf_stat SEMICOLON .\l"]
  135 -> "135R36" [style=solid]
 "135R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  136 [label="State 136\n\l 39 statement: return_stat SEMICOLON .\l"]
  136 -> "136R39" [style=solid]
 "136R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  137 [label="State 137\n\l 40 func_call: identifier O_ROUND_BRACES . call_args C_ROUND_BRACES\l 42 call_args: . %empty  [C_ROUND_BRACES, COMMA]\l 43          | . identifier\l 44          | . call_args COMMA identifier\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  137 -> 13 [style=solid label="IDENTIFIER"]
  137 -> 147 [style=dashed label="call_args"]
  137 -> 148 [style=dashed label="identifier"]
  137 -> "137R42" [style=solid]
 "137R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  138 [label="State 138\n\l 41 func_call: identifier ASSIGN . identifier O_ROUND_BRACES call_args C_ROUND_BRACES\l 45 assignment: identifier ASSIGN . word\l 46           | identifier ASSIGN . expr\l 47           | identifier ASSIGN . O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 48 expr: . expr ADD expr\l 49     | . expr SUB expr\l 50     | . expr TIMES expr\l 51     | . expr DIVIDE expr\l 52     | . SUB expr\l 53     | . increment\l 54     | . expr EQOP expr\l 55     | . expr RELOP expr\l 56     | . expr AND expr\l 57     | . expr OR expr\l 58     | . NOT expr\l 59     | . O_ROUND_BRACES expr C_ROUND_BRACES\l 60     | . number\l 61     | . identifier\l 62 increment: . identifier INCR\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 95 word: . CCONST\l 96     | . STRCONST\l 97 number: . ICONST\l 98       | . FCONST\l"]
  138 -> 47 [style=solid label="O_CURLY_BRACES"]
  138 -> 48 [style=solid label="O_ROUND_BRACES"]
  138 -> 49 [style=solid label="SUB"]
  138 -> 50 [style=solid label="NOT"]
  138 -> 13 [style=solid label="IDENTIFIER"]
  138 -> 51 [style=solid label="ICONST"]
  138 -> 52 [style=solid label="FCONST"]
  138 -> 53 [style=solid label="CCONST"]
  138 -> 54 [style=solid label="STRCONST"]
  138 -> 55 [style=dashed label="expr"]
  138 -> 56 [style=dashed label="increment"]
  138 -> 149 [style=dashed label="identifier"]
  138 -> 58 [style=dashed label="word"]
  138 -> 59 [style=dashed label="number"]
  139 [label="State 139\n\l 16 inizialization_list: O_CURLY_BRACES inizialization_list COMMA inizialization_list . C_CURLY_BRACES\l 17                    | inizialization_list . COMMA inizialization_list\l 17                    | inizialization_list COMMA inizialization_list .  [COMMA]\l"]
  139 -> 150 [style=solid label="C_CURLY_BRACES"]
  139 -> "139R17" [style=solid]
 "139R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  140 [label="State 140\n\l 48 expr: expr . ADD expr\l 49     | expr . SUB expr\l 50     | expr . TIMES expr\l 51     | expr . DIVIDE expr\l 54     | expr . EQOP expr\l 55     | expr . RELOP expr\l 56     | expr . AND expr\l 57     | expr . OR expr\l 70 if_stat: IF O_ROUND_BRACES expr . C_ROUND_BRACES block\l 71        | IF O_ROUND_BRACES expr . C_ROUND_BRACES block ELSE block\l"]
  140 -> 151 [style=solid label="C_ROUND_BRACES"]
  140 -> 77 [style=solid label="ADD"]
  140 -> 78 [style=solid label="SUB"]
  140 -> 79 [style=solid label="TIMES"]
  140 -> 80 [style=solid label="DIVIDE"]
  140 -> 81 [style=solid label="EQOP"]
  140 -> 82 [style=solid label="RELOP"]
  140 -> 83 [style=solid label="AND"]
  140 -> 84 [style=solid label="OR"]
  141 [label="State 141\n\l 76 init_for: assignment .\l"]
  141 -> "141R76" [style=solid]
 "141R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  142 [label="State 142\n\l 74 for_stat: FOR O_ROUND_BRACES init_for . SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block\l 77 init_for: init_for . COMMA init_for\l"]
  142 -> 152 [style=solid label="COMMA"]
  142 -> 153 [style=solid label="SEMICOLON"]
  143 [label="State 143\n\l 45 assignment: identifier . ASSIGN word\l 46           | identifier . ASSIGN expr\l 47           | identifier . ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 89 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | identifier . DOT identifier\l"]
  143 -> 27 [style=solid label="O_SQUARE_BRACES"]
  143 -> 28 [style=solid label="DOT"]
  143 -> 34 [style=solid label="ASSIGN"]
  144 [label="State 144\n\l 64 printf_stat: PRINTF O_ROUND_BRACES STRCONST . COMMA printed_var C_ROUND_BRACES\l 96 word: STRCONST .  [C_ROUND_BRACES]\l"]
  144 -> 154 [style=solid label="COMMA"]
  144 -> "144R96" [style=solid]
 "144R96" [label="R96", fillcolor=3, shape=diamond, style=filled]
  145 [label="State 145\n\l 63 printf_stat: PRINTF O_ROUND_BRACES word . C_ROUND_BRACES\l"]
  145 -> 155 [style=solid label="C_ROUND_BRACES"]
  146 [label="State 146\n\l 67 scanf_stat: SCANF O_ROUND_BRACES STRCONST . COMMA retrieved_var C_ROUND_BRACES\l"]
  146 -> 156 [style=solid label="COMMA"]
  147 [label="State 147\n\l 40 func_call: identifier O_ROUND_BRACES call_args . C_ROUND_BRACES\l 44 call_args: call_args . COMMA identifier\l"]
  147 -> 157 [style=solid label="C_ROUND_BRACES"]
  147 -> 158 [style=solid label="COMMA"]
  148 [label="State 148\n\l 43 call_args: identifier .  [C_ROUND_BRACES, COMMA]\l 89 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | identifier . DOT identifier\l"]
  148 -> 27 [style=solid label="O_SQUARE_BRACES"]
  148 -> 28 [style=solid label="DOT"]
  148 -> "148R43" [style=solid]
 "148R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  149 [label="State 149\n\l 41 func_call: identifier ASSIGN identifier . O_ROUND_BRACES call_args C_ROUND_BRACES\l 61 expr: identifier .  [SEMICOLON, ADD, SUB, TIMES, DIVIDE, EQOP, RELOP, AND, OR]\l 62 increment: identifier . INCR\l 89 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | identifier . DOT identifier\l"]
  149 -> 27 [style=solid label="O_SQUARE_BRACES"]
  149 -> 159 [style=solid label="O_ROUND_BRACES"]
  149 -> 28 [style=solid label="DOT"]
  149 -> 85 [style=solid label="INCR"]
  149 -> "149R61" [style=solid]
 "149R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  150 [label="State 150\n\l 16 inizialization_list: O_CURLY_BRACES inizialization_list COMMA inizialization_list C_CURLY_BRACES .\l"]
  150 -> "150R16" [style=solid]
 "150R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  151 [label="State 151\n\l 31 statement: . SEMICOLON\l 32          | . func_call SEMICOLON\l 33          | . assignment SEMICOLON\l 34          | . increment SEMICOLON\l 35          | . printf_stat SEMICOLON\l 36          | . scanf_stat SEMICOLON\l 37          | . if_stat\l 38          | . for_stat\l 39          | . return_stat SEMICOLON\l 40 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES\l 41          | . identifier ASSIGN identifier O_ROUND_BRACES call_args C_ROUND_BRACES\l 45 assignment: . identifier ASSIGN word\l 46           | . identifier ASSIGN expr\l 47           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 62 increment: . identifier INCR\l 63 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES\l 64            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES\l 67 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES\l 70 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block\l 70        | IF O_ROUND_BRACES expr C_ROUND_BRACES . block\l 71        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block\l 71        | IF O_ROUND_BRACES expr C_ROUND_BRACES . block ELSE block\l 72 block: . statement\l 73      | . O_CURLY_BRACES statements C_CURLY_BRACES\l 74 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block\l 80 return_stat: . RETURN\l 81            | . RETURN const\l 82            | . RETURN identifier\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  151 -> 160 [style=solid label="O_CURLY_BRACES"]
  151 -> 101 [style=solid label="SEMICOLON"]
  151 -> 102 [style=solid label="IF"]
  151 -> 103 [style=solid label="FOR"]
  151 -> 104 [style=solid label="PRINTF"]
  151 -> 105 [style=solid label="SCANF"]
  151 -> 13 [style=solid label="IDENTIFIER"]
  151 -> 106 [style=solid label="RETURN"]
  151 -> 161 [style=dashed label="statement"]
  151 -> 111 [style=dashed label="func_call"]
  151 -> 112 [style=dashed label="assignment"]
  151 -> 113 [style=dashed label="increment"]
  151 -> 114 [style=dashed label="printf_stat"]
  151 -> 115 [style=dashed label="scanf_stat"]
  151 -> 116 [style=dashed label="if_stat"]
  151 -> 162 [style=dashed label="block"]
  151 -> 117 [style=dashed label="for_stat"]
  151 -> 118 [style=dashed label="return_stat"]
  151 -> 119 [style=dashed label="identifier"]
  152 [label="State 152\n\l 45 assignment: . identifier ASSIGN word\l 46           | . identifier ASSIGN expr\l 47           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 75 init_for: . %empty  [COMMA, SEMICOLON]\l 76         | . assignment\l 77         | . init_for COMMA init_for\l 77         | init_for COMMA . init_for\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  152 -> 13 [style=solid label="IDENTIFIER"]
  152 -> 141 [style=dashed label="assignment"]
  152 -> 163 [style=dashed label="init_for"]
  152 -> 143 [style=dashed label="identifier"]
  152 -> "152R75" [style=solid]
 "152R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  153 [label="State 153\n\l 48 expr: . expr ADD expr\l 49     | . expr SUB expr\l 50     | . expr TIMES expr\l 51     | . expr DIVIDE expr\l 52     | . SUB expr\l 53     | . increment\l 54     | . expr EQOP expr\l 55     | . expr RELOP expr\l 56     | . expr AND expr\l 57     | . expr OR expr\l 58     | . NOT expr\l 59     | . O_ROUND_BRACES expr C_ROUND_BRACES\l 60     | . number\l 61     | . identifier\l 62 increment: . identifier INCR\l 74 for_stat: FOR O_ROUND_BRACES init_for SEMICOLON . expr SEMICOLON incr_for C_ROUND_BRACES block\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 97 number: . ICONST\l 98       | . FCONST\l"]
  153 -> 48 [style=solid label="O_ROUND_BRACES"]
  153 -> 49 [style=solid label="SUB"]
  153 -> 50 [style=solid label="NOT"]
  153 -> 13 [style=solid label="IDENTIFIER"]
  153 -> 51 [style=solid label="ICONST"]
  153 -> 52 [style=solid label="FCONST"]
  153 -> 164 [style=dashed label="expr"]
  153 -> 56 [style=dashed label="increment"]
  153 -> 57 [style=dashed label="identifier"]
  153 -> 59 [style=dashed label="number"]
  154 [label="State 154\n\l 64 printf_stat: PRINTF O_ROUND_BRACES STRCONST COMMA . printed_var C_ROUND_BRACES\l 65 printed_var: . identifier\l 66            | . printed_var COMMA printed_var\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  154 -> 13 [style=solid label="IDENTIFIER"]
  154 -> 165 [style=dashed label="printed_var"]
  154 -> 166 [style=dashed label="identifier"]
  155 [label="State 155\n\l 63 printf_stat: PRINTF O_ROUND_BRACES word C_ROUND_BRACES .\l"]
  155 -> "155R63" [style=solid]
 "155R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  156 [label="State 156\n\l 67 scanf_stat: SCANF O_ROUND_BRACES STRCONST COMMA . retrieved_var C_ROUND_BRACES\l 68 retrieved_var: . E_COMM identifier\l 69              | . retrieved_var COMMA retrieved_var\l"]
  156 -> 167 [style=solid label="E_COMM"]
  156 -> 168 [style=dashed label="retrieved_var"]
  157 [label="State 157\n\l 40 func_call: identifier O_ROUND_BRACES call_args C_ROUND_BRACES .\l"]
  157 -> "157R40" [style=solid]
 "157R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  158 [label="State 158\n\l 44 call_args: call_args COMMA . identifier\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  158 -> 13 [style=solid label="IDENTIFIER"]
  158 -> 169 [style=dashed label="identifier"]
  159 [label="State 159\n\l 41 func_call: identifier ASSIGN identifier O_ROUND_BRACES . call_args C_ROUND_BRACES\l 42 call_args: . %empty  [C_ROUND_BRACES, COMMA]\l 43          | . identifier\l 44          | . call_args COMMA identifier\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  159 -> 13 [style=solid label="IDENTIFIER"]
  159 -> 170 [style=dashed label="call_args"]
  159 -> 148 [style=dashed label="identifier"]
  159 -> "159R42" [style=solid]
 "159R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  160 [label="State 160\n\l 29 statements: . statement\l 30           | . statements statement\l 31 statement: . SEMICOLON\l 32          | . func_call SEMICOLON\l 33          | . assignment SEMICOLON\l 34          | . increment SEMICOLON\l 35          | . printf_stat SEMICOLON\l 36          | . scanf_stat SEMICOLON\l 37          | . if_stat\l 38          | . for_stat\l 39          | . return_stat SEMICOLON\l 40 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES\l 41          | . identifier ASSIGN identifier O_ROUND_BRACES call_args C_ROUND_BRACES\l 45 assignment: . identifier ASSIGN word\l 46           | . identifier ASSIGN expr\l 47           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 62 increment: . identifier INCR\l 63 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES\l 64            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES\l 67 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES\l 70 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block\l 71        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block\l 73 block: O_CURLY_BRACES . statements C_CURLY_BRACES\l 74 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block\l 80 return_stat: . RETURN\l 81            | . RETURN const\l 82            | . RETURN identifier\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  160 -> 101 [style=solid label="SEMICOLON"]
  160 -> 102 [style=solid label="IF"]
  160 -> 103 [style=solid label="FOR"]
  160 -> 104 [style=solid label="PRINTF"]
  160 -> 105 [style=solid label="SCANF"]
  160 -> 13 [style=solid label="IDENTIFIER"]
  160 -> 106 [style=solid label="RETURN"]
  160 -> 171 [style=dashed label="statements"]
  160 -> 110 [style=dashed label="statement"]
  160 -> 111 [style=dashed label="func_call"]
  160 -> 112 [style=dashed label="assignment"]
  160 -> 113 [style=dashed label="increment"]
  160 -> 114 [style=dashed label="printf_stat"]
  160 -> 115 [style=dashed label="scanf_stat"]
  160 -> 116 [style=dashed label="if_stat"]
  160 -> 117 [style=dashed label="for_stat"]
  160 -> 118 [style=dashed label="return_stat"]
  160 -> 119 [style=dashed label="identifier"]
  161 [label="State 161\n\l 72 block: statement .\l"]
  161 -> "161R72" [style=solid]
 "161R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  162 [label="State 162\n\l 70 if_stat: IF O_ROUND_BRACES expr C_ROUND_BRACES block .  [C_CURLY_BRACES, SEMICOLON, IF, ELSE, FOR, PRINTF, SCANF, IDENTIFIER, RETURN]\l 71        | IF O_ROUND_BRACES expr C_ROUND_BRACES block . ELSE block\l"]
  162 -> 172 [style=solid label="ELSE"]
  162 -> "162R70d" [label="[ELSE]", style=solid]
 "162R70d" [label="R70", fillcolor=5, shape=diamond, style=filled]
  162 -> "162R70" [style=solid]
 "162R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  163 [label="State 163\n\l 77 init_for: init_for . COMMA init_for\l 77         | init_for COMMA init_for .  [COMMA, SEMICOLON]\l"]
  163 -> "163R77" [style=solid]
 "163R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  164 [label="State 164\n\l 48 expr: expr . ADD expr\l 49     | expr . SUB expr\l 50     | expr . TIMES expr\l 51     | expr . DIVIDE expr\l 54     | expr . EQOP expr\l 55     | expr . RELOP expr\l 56     | expr . AND expr\l 57     | expr . OR expr\l 74 for_stat: FOR O_ROUND_BRACES init_for SEMICOLON expr . SEMICOLON incr_for C_ROUND_BRACES block\l"]
  164 -> 173 [style=solid label="SEMICOLON"]
  164 -> 77 [style=solid label="ADD"]
  164 -> 78 [style=solid label="SUB"]
  164 -> 79 [style=solid label="TIMES"]
  164 -> 80 [style=solid label="DIVIDE"]
  164 -> 81 [style=solid label="EQOP"]
  164 -> 82 [style=solid label="RELOP"]
  164 -> 83 [style=solid label="AND"]
  164 -> 84 [style=solid label="OR"]
  165 [label="State 165\n\l 64 printf_stat: PRINTF O_ROUND_BRACES STRCONST COMMA printed_var . C_ROUND_BRACES\l 66 printed_var: printed_var . COMMA printed_var\l"]
  165 -> 174 [style=solid label="C_ROUND_BRACES"]
  165 -> 175 [style=solid label="COMMA"]
  166 [label="State 166\n\l 65 printed_var: identifier .  [C_ROUND_BRACES, COMMA]\l 89 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | identifier . DOT identifier\l"]
  166 -> 27 [style=solid label="O_SQUARE_BRACES"]
  166 -> 28 [style=solid label="DOT"]
  166 -> "166R65" [style=solid]
 "166R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  167 [label="State 167\n\l 68 retrieved_var: E_COMM . identifier\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  167 -> 13 [style=solid label="IDENTIFIER"]
  167 -> 176 [style=dashed label="identifier"]
  168 [label="State 168\n\l 67 scanf_stat: SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var . C_ROUND_BRACES\l 69 retrieved_var: retrieved_var . COMMA retrieved_var\l"]
  168 -> 177 [style=solid label="C_ROUND_BRACES"]
  168 -> 178 [style=solid label="COMMA"]
  169 [label="State 169\n\l 44 call_args: call_args COMMA identifier .  [C_ROUND_BRACES, COMMA]\l 89 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | identifier . DOT identifier\l"]
  169 -> 27 [style=solid label="O_SQUARE_BRACES"]
  169 -> 28 [style=solid label="DOT"]
  169 -> "169R44" [style=solid]
 "169R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  170 [label="State 170\n\l 41 func_call: identifier ASSIGN identifier O_ROUND_BRACES call_args . C_ROUND_BRACES\l 44 call_args: call_args . COMMA identifier\l"]
  170 -> 179 [style=solid label="C_ROUND_BRACES"]
  170 -> 158 [style=solid label="COMMA"]
  171 [label="State 171\n\l 30 statements: statements . statement\l 31 statement: . SEMICOLON\l 32          | . func_call SEMICOLON\l 33          | . assignment SEMICOLON\l 34          | . increment SEMICOLON\l 35          | . printf_stat SEMICOLON\l 36          | . scanf_stat SEMICOLON\l 37          | . if_stat\l 38          | . for_stat\l 39          | . return_stat SEMICOLON\l 40 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES\l 41          | . identifier ASSIGN identifier O_ROUND_BRACES call_args C_ROUND_BRACES\l 45 assignment: . identifier ASSIGN word\l 46           | . identifier ASSIGN expr\l 47           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 62 increment: . identifier INCR\l 63 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES\l 64            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES\l 67 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES\l 70 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block\l 71        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block\l 73 block: O_CURLY_BRACES statements . C_CURLY_BRACES\l 74 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block\l 80 return_stat: . RETURN\l 81            | . RETURN const\l 82            | . RETURN identifier\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  171 -> 180 [style=solid label="C_CURLY_BRACES"]
  171 -> 101 [style=solid label="SEMICOLON"]
  171 -> 102 [style=solid label="IF"]
  171 -> 103 [style=solid label="FOR"]
  171 -> 104 [style=solid label="PRINTF"]
  171 -> 105 [style=solid label="SCANF"]
  171 -> 13 [style=solid label="IDENTIFIER"]
  171 -> 106 [style=solid label="RETURN"]
  171 -> 130 [style=dashed label="statement"]
  171 -> 111 [style=dashed label="func_call"]
  171 -> 112 [style=dashed label="assignment"]
  171 -> 113 [style=dashed label="increment"]
  171 -> 114 [style=dashed label="printf_stat"]
  171 -> 115 [style=dashed label="scanf_stat"]
  171 -> 116 [style=dashed label="if_stat"]
  171 -> 117 [style=dashed label="for_stat"]
  171 -> 118 [style=dashed label="return_stat"]
  171 -> 119 [style=dashed label="identifier"]
  172 [label="State 172\n\l 31 statement: . SEMICOLON\l 32          | . func_call SEMICOLON\l 33          | . assignment SEMICOLON\l 34          | . increment SEMICOLON\l 35          | . printf_stat SEMICOLON\l 36          | . scanf_stat SEMICOLON\l 37          | . if_stat\l 38          | . for_stat\l 39          | . return_stat SEMICOLON\l 40 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES\l 41          | . identifier ASSIGN identifier O_ROUND_BRACES call_args C_ROUND_BRACES\l 45 assignment: . identifier ASSIGN word\l 46           | . identifier ASSIGN expr\l 47           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 62 increment: . identifier INCR\l 63 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES\l 64            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES\l 67 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES\l 70 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block\l 71        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block\l 71        | IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE . block\l 72 block: . statement\l 73      | . O_CURLY_BRACES statements C_CURLY_BRACES\l 74 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block\l 80 return_stat: . RETURN\l 81            | . RETURN const\l 82            | . RETURN identifier\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  172 -> 160 [style=solid label="O_CURLY_BRACES"]
  172 -> 101 [style=solid label="SEMICOLON"]
  172 -> 102 [style=solid label="IF"]
  172 -> 103 [style=solid label="FOR"]
  172 -> 104 [style=solid label="PRINTF"]
  172 -> 105 [style=solid label="SCANF"]
  172 -> 13 [style=solid label="IDENTIFIER"]
  172 -> 106 [style=solid label="RETURN"]
  172 -> 161 [style=dashed label="statement"]
  172 -> 111 [style=dashed label="func_call"]
  172 -> 112 [style=dashed label="assignment"]
  172 -> 113 [style=dashed label="increment"]
  172 -> 114 [style=dashed label="printf_stat"]
  172 -> 115 [style=dashed label="scanf_stat"]
  172 -> 116 [style=dashed label="if_stat"]
  172 -> 181 [style=dashed label="block"]
  172 -> 117 [style=dashed label="for_stat"]
  172 -> 118 [style=dashed label="return_stat"]
  172 -> 119 [style=dashed label="identifier"]
  173 [label="State 173\n\l 48 expr: . expr ADD expr\l 49     | . expr SUB expr\l 50     | . expr TIMES expr\l 51     | . expr DIVIDE expr\l 52     | . SUB expr\l 53     | . increment\l 54     | . expr EQOP expr\l 55     | . expr RELOP expr\l 56     | . expr AND expr\l 57     | . expr OR expr\l 58     | . NOT expr\l 59     | . O_ROUND_BRACES expr C_ROUND_BRACES\l 60     | . number\l 61     | . identifier\l 62 increment: . identifier INCR\l 74 for_stat: FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON . incr_for C_ROUND_BRACES block\l 78 incr_for: . expr\l 79         | . incr_for COMMA incr_for\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 97 number: . ICONST\l 98       | . FCONST\l"]
  173 -> 48 [style=solid label="O_ROUND_BRACES"]
  173 -> 49 [style=solid label="SUB"]
  173 -> 50 [style=solid label="NOT"]
  173 -> 13 [style=solid label="IDENTIFIER"]
  173 -> 51 [style=solid label="ICONST"]
  173 -> 52 [style=solid label="FCONST"]
  173 -> 182 [style=dashed label="expr"]
  173 -> 56 [style=dashed label="increment"]
  173 -> 183 [style=dashed label="incr_for"]
  173 -> 57 [style=dashed label="identifier"]
  173 -> 59 [style=dashed label="number"]
  174 [label="State 174\n\l 64 printf_stat: PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES .\l"]
  174 -> "174R64" [style=solid]
 "174R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  175 [label="State 175\n\l 65 printed_var: . identifier\l 66            | . printed_var COMMA printed_var\l 66            | printed_var COMMA . printed_var\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  175 -> 13 [style=solid label="IDENTIFIER"]
  175 -> 184 [style=dashed label="printed_var"]
  175 -> 166 [style=dashed label="identifier"]
  176 [label="State 176\n\l 68 retrieved_var: E_COMM identifier .  [C_ROUND_BRACES, COMMA]\l 89 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | identifier . DOT identifier\l"]
  176 -> 27 [style=solid label="O_SQUARE_BRACES"]
  176 -> 28 [style=solid label="DOT"]
  176 -> "176R68" [style=solid]
 "176R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  177 [label="State 177\n\l 67 scanf_stat: SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES .\l"]
  177 -> "177R67" [style=solid]
 "177R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  178 [label="State 178\n\l 68 retrieved_var: . E_COMM identifier\l 69              | . retrieved_var COMMA retrieved_var\l 69              | retrieved_var COMMA . retrieved_var\l"]
  178 -> 167 [style=solid label="E_COMM"]
  178 -> 185 [style=dashed label="retrieved_var"]
  179 [label="State 179\n\l 41 func_call: identifier ASSIGN identifier O_ROUND_BRACES call_args C_ROUND_BRACES .\l"]
  179 -> "179R41" [style=solid]
 "179R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  180 [label="State 180\n\l 73 block: O_CURLY_BRACES statements C_CURLY_BRACES .\l"]
  180 -> "180R73" [style=solid]
 "180R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  181 [label="State 181\n\l 71 if_stat: IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block .\l"]
  181 -> "181R71" [style=solid]
 "181R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  182 [label="State 182\n\l 48 expr: expr . ADD expr\l 49     | expr . SUB expr\l 50     | expr . TIMES expr\l 51     | expr . DIVIDE expr\l 54     | expr . EQOP expr\l 55     | expr . RELOP expr\l 56     | expr . AND expr\l 57     | expr . OR expr\l 78 incr_for: expr .  [C_ROUND_BRACES, COMMA]\l"]
  182 -> 77 [style=solid label="ADD"]
  182 -> 78 [style=solid label="SUB"]
  182 -> 79 [style=solid label="TIMES"]
  182 -> 80 [style=solid label="DIVIDE"]
  182 -> 81 [style=solid label="EQOP"]
  182 -> 82 [style=solid label="RELOP"]
  182 -> 83 [style=solid label="AND"]
  182 -> 84 [style=solid label="OR"]
  182 -> "182R78" [style=solid]
 "182R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  183 [label="State 183\n\l 74 for_stat: FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for . C_ROUND_BRACES block\l 79 incr_for: incr_for . COMMA incr_for\l"]
  183 -> 186 [style=solid label="C_ROUND_BRACES"]
  183 -> 187 [style=solid label="COMMA"]
  184 [label="State 184\n\l 66 printed_var: printed_var . COMMA printed_var\l 66            | printed_var COMMA printed_var .  [C_ROUND_BRACES, COMMA]\l"]
  184 -> "184R66" [style=solid]
 "184R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  185 [label="State 185\n\l 69 retrieved_var: retrieved_var . COMMA retrieved_var\l 69              | retrieved_var COMMA retrieved_var .  [C_ROUND_BRACES, COMMA]\l"]
  185 -> "185R69" [style=solid]
 "185R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  186 [label="State 186\n\l 31 statement: . SEMICOLON\l 32          | . func_call SEMICOLON\l 33          | . assignment SEMICOLON\l 34          | . increment SEMICOLON\l 35          | . printf_stat SEMICOLON\l 36          | . scanf_stat SEMICOLON\l 37          | . if_stat\l 38          | . for_stat\l 39          | . return_stat SEMICOLON\l 40 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES\l 41          | . identifier ASSIGN identifier O_ROUND_BRACES call_args C_ROUND_BRACES\l 45 assignment: . identifier ASSIGN word\l 46           | . identifier ASSIGN expr\l 47           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES\l 62 increment: . identifier INCR\l 63 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES\l 64            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES\l 67 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES\l 70 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block\l 71        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block\l 72 block: . statement\l 73      | . O_CURLY_BRACES statements C_CURLY_BRACES\l 74 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block\l 74         | FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES . block\l 80 return_stat: . RETURN\l 81            | . RETURN const\l 82            | . RETURN identifier\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l"]
  186 -> 160 [style=solid label="O_CURLY_BRACES"]
  186 -> 101 [style=solid label="SEMICOLON"]
  186 -> 102 [style=solid label="IF"]
  186 -> 103 [style=solid label="FOR"]
  186 -> 104 [style=solid label="PRINTF"]
  186 -> 105 [style=solid label="SCANF"]
  186 -> 13 [style=solid label="IDENTIFIER"]
  186 -> 106 [style=solid label="RETURN"]
  186 -> 161 [style=dashed label="statement"]
  186 -> 111 [style=dashed label="func_call"]
  186 -> 112 [style=dashed label="assignment"]
  186 -> 113 [style=dashed label="increment"]
  186 -> 114 [style=dashed label="printf_stat"]
  186 -> 115 [style=dashed label="scanf_stat"]
  186 -> 116 [style=dashed label="if_stat"]
  186 -> 188 [style=dashed label="block"]
  186 -> 117 [style=dashed label="for_stat"]
  186 -> 118 [style=dashed label="return_stat"]
  186 -> 119 [style=dashed label="identifier"]
  187 [label="State 187\n\l 48 expr: . expr ADD expr\l 49     | . expr SUB expr\l 50     | . expr TIMES expr\l 51     | . expr DIVIDE expr\l 52     | . SUB expr\l 53     | . increment\l 54     | . expr EQOP expr\l 55     | . expr RELOP expr\l 56     | . expr AND expr\l 57     | . expr OR expr\l 58     | . NOT expr\l 59     | . O_ROUND_BRACES expr C_ROUND_BRACES\l 60     | . number\l 61     | . identifier\l 62 increment: . identifier INCR\l 78 incr_for: . expr\l 79         | . incr_for COMMA incr_for\l 79         | incr_for COMMA . incr_for\l 88 identifier: . IDENTIFIER\l 89           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES\l 90           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES\l 91           | . identifier DOT identifier\l 97 number: . ICONST\l 98       | . FCONST\l"]
  187 -> 48 [style=solid label="O_ROUND_BRACES"]
  187 -> 49 [style=solid label="SUB"]
  187 -> 50 [style=solid label="NOT"]
  187 -> 13 [style=solid label="IDENTIFIER"]
  187 -> 51 [style=solid label="ICONST"]
  187 -> 52 [style=solid label="FCONST"]
  187 -> 182 [style=dashed label="expr"]
  187 -> 56 [style=dashed label="increment"]
  187 -> 189 [style=dashed label="incr_for"]
  187 -> 57 [style=dashed label="identifier"]
  187 -> 59 [style=dashed label="number"]
  188 [label="State 188\n\l 74 for_stat: FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block .\l"]
  188 -> "188R74" [style=solid]
 "188R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  189 [label="State 189\n\l 79 incr_for: incr_for . COMMA incr_for\l 79         | incr_for COMMA incr_for .  [C_ROUND_BRACES, COMMA]\l"]
  189 -> "189R79" [style=solid]
 "189R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
}
