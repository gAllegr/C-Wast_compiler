Grammar

    0 $accept: program $end

    1 program: functions
    2        | declarations functions

    3 declarations: declaration
    4             | declarations declaration

    5 declaration: var_type var_decl SEMICOLON
    6            | struct_declaration SEMICOLON

    7 var_decl: simple_declaration
    8         | assignment
    9         | var_decl COMMA var_decl

   10 simple_declaration: %empty
   11                   | identifier

   12 struct_declaration: STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl

   13 inizialization_list: identifier
   14                    | const
   15                    | STRCONST
   16                    | O_CURLY_BRACES inizialization_list COMMA inizialization_list C_CURLY_BRACES
   17                    | inizialization_list COMMA inizialization_list

   18 functions: func_definition
   19          | functions func_definition

   20 @1: %empty

   21 func_definition: var_type identifier @1 O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES

   22 argument_list: %empty
   23              | VOID
   24              | parameter_list

   25 parameter_list: parameter_declaration
   26               | parameter_list COMMA parameter_declaration

   27 parameter_declaration: var_type identifier
   28                      | STRUCT identifier identifier

   29 body: statements
   30     | declarations statements

   31 statements: statement
   32           | statements statement

   33 statement: SEMICOLON
   34          | func_call SEMICOLON
   35          | assignment SEMICOLON
   36          | increment SEMICOLON
   37          | printf_stat SEMICOLON
   38          | scanf_stat SEMICOLON
   39          | if_stat
   40          | for_stat
   41          | return_stat SEMICOLON

   42 func_call: identifier O_ROUND_BRACES call_args C_ROUND_BRACES

   43 call_args: %empty
   44          | identifier
   45          | call_args COMMA identifier

   46 assignment: identifier ASSIGN word
   47           | identifier ASSIGN expr
   48           | identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | identifier ASSIGN func_call

   50 expr: expr ADD expr
   51     | expr SUB expr
   52     | expr TIMES expr
   53     | expr DIVIDE expr
   54     | SUB expr
   55     | increment
   56     | expr EQOP expr
   57     | expr RELOP expr
   58     | expr AND expr
   59     | expr OR expr
   60     | NOT expr
   61     | O_ROUND_BRACES expr C_ROUND_BRACES
   62     | number
   63     | identifier

   64 increment: identifier INCR

   65 printf_stat: PRINTF O_ROUND_BRACES word C_ROUND_BRACES
   66            | PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES

   67 printed_var: identifier
   68            | printed_var COMMA identifier

   69 scanf_stat: SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES

   70 retrieved_var: E_COMM identifier
   71              | retrieved_var COMMA E_COMM identifier

   72 if_stat: IF O_ROUND_BRACES expr C_ROUND_BRACES block
   73        | IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block

   74 block: statement
   75      | O_CURLY_BRACES statements C_CURLY_BRACES

   76 for_stat: FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block

   77 init_for: %empty
   78         | assignment
   79         | init_for COMMA init_for

   80 incr_for: expr
   81         | incr_for COMMA expr

   82 return_stat: RETURN
   83            | RETURN const
   84            | RETURN identifier

   85 var_type: VOID
   86         | INT
   87         | FLOAT
   88         | CHAR

   89 identifier: IDENTIFIER
   90           | identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier DOT identifier

   93 const: ICONST
   94      | FCONST
   95      | CCONST

   96 word: CCONST
   97     | STRCONST

   98 number: ICONST
   99       | FCONST


Terminals, with rules where they appear

$end (0) 0
error (256)
O_CURLY_BRACES (258) 12 16 21 48 75
C_CURLY_BRACES (259) 12 16 21 48 75
O_SQUARE_BRACES (260) 90 91
C_SQUARE_BRACES (261) 90 91
O_ROUND_BRACES (262) 21 42 61 65 66 69 72 73 76
C_ROUND_BRACES (263) 21 42 61 65 66 69 72 73 76
DOT (264) 92
COMMA (265) 9 16 17 26 45 66 68 69 71 79 81
SEMICOLON (266) 5 6 33 34 35 36 37 38 41 76
E_COMM (267) 70 71
ASSIGN (268) 46 47 48 49
ADD (269) 50
SUB (270) 51 54
TIMES (271) 52
DIVIDE (272) 53
INCR (273) 64
EQOP (274) 56
RELOP (275) 57
AND (276) 58
OR (277) 59
NOT (278) 60
IF (279) 72 73
ELSE (280) 73
FOR (281) 76
PRINTF (282) 65 66
SCANF (283) 69
IDENTIFIER (284) 89
RETURN (285) 82 83 84
VOID (286) 23 85
INT (287) 86
FLOAT (288) 87
CHAR (289) 88
STRUCT (290) 12 28
ICONST (291) 90 93 98
FCONST (292) 94 99
CCONST (293) 95 96
STRCONST (294) 15 66 69 97
IFX (295)
REV (296)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1 2, on right: 0
declarations (44)
    on left: 3 4, on right: 2 4 12 30
declaration (45)
    on left: 5 6, on right: 3 4
var_decl (46)
    on left: 7 8 9, on right: 5 9 12
simple_declaration (47)
    on left: 10 11, on right: 7
struct_declaration (48)
    on left: 12, on right: 6
inizialization_list (49)
    on left: 13 14 15 16 17, on right: 16 17 48
functions (50)
    on left: 18 19, on right: 1 2 19
func_definition (51)
    on left: 21, on right: 18 19
@1 (52)
    on left: 20, on right: 21
argument_list (53)
    on left: 22 23 24, on right: 21
parameter_list (54)
    on left: 25 26, on right: 24 26
parameter_declaration (55)
    on left: 27 28, on right: 25 26
body (56)
    on left: 29 30, on right: 21
statements (57)
    on left: 31 32, on right: 29 30 32 75
statement (58)
    on left: 33 34 35 36 37 38 39 40 41, on right: 31 32 74
func_call (59)
    on left: 42, on right: 34 49
call_args (60)
    on left: 43 44 45, on right: 42 45
assignment (61)
    on left: 46 47 48 49, on right: 8 35 78
expr (62)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63, on right: 47
    50 51 52 53 54 56 57 58 59 60 61 72 73 76 80 81
increment (63)
    on left: 64, on right: 36 55
printf_stat (64)
    on left: 65 66, on right: 37
printed_var (65)
    on left: 67 68, on right: 66 68
scanf_stat (66)
    on left: 69, on right: 38
retrieved_var (67)
    on left: 70 71, on right: 69 71
if_stat (68)
    on left: 72 73, on right: 39
block (69)
    on left: 74 75, on right: 72 73 76
for_stat (70)
    on left: 76, on right: 40
init_for (71)
    on left: 77 78 79, on right: 76 79
incr_for (72)
    on left: 80 81, on right: 76 81
return_stat (73)
    on left: 82 83 84, on right: 41
var_type (74)
    on left: 85 86 87 88, on right: 5 21 27
identifier (75)
    on left: 89 90 91 92, on right: 11 12 13 21 27 28 42 44 45 46 47
    48 49 63 64 67 68 70 71 84 90 91 92
const (76)
    on left: 93 94 95, on right: 14 83
word (77)
    on left: 96 97, on right: 46 65
number (78)
    on left: 98 99, on right: 62


State 0

    0 $accept: . program $end
    1 program: . functions
    2        | . declarations functions
    3 declarations: . declaration
    4             | . declarations declaration
    5 declaration: . var_type var_decl SEMICOLON
    6            | . struct_declaration SEMICOLON
   12 struct_declaration: . STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl
   18 functions: . func_definition
   19          | . functions func_definition
   21 func_definition: . var_type identifier @1 O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES
   85 var_type: . VOID
   86         | . INT
   87         | . FLOAT
   88         | . CHAR

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    STRUCT  shift, and go to state 5

    program             go to state 6
    declarations        go to state 7
    declaration         go to state 8
    struct_declaration  go to state 9
    functions           go to state 10
    func_definition     go to state 11
    var_type            go to state 12


State 1

   85 var_type: VOID .

    $default  reduce using rule 85 (var_type)


State 2

   86 var_type: INT .

    $default  reduce using rule 86 (var_type)


State 3

   87 var_type: FLOAT .

    $default  reduce using rule 87 (var_type)


State 4

   88 var_type: CHAR .

    $default  reduce using rule 88 (var_type)


State 5

   12 struct_declaration: STRUCT . identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    identifier  go to state 14


State 6

    0 $accept: program . $end

    $end  shift, and go to state 15


State 7

    2 program: declarations . functions
    4 declarations: declarations . declaration
    5 declaration: . var_type var_decl SEMICOLON
    6            | . struct_declaration SEMICOLON
   12 struct_declaration: . STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl
   18 functions: . func_definition
   19          | . functions func_definition
   21 func_definition: . var_type identifier @1 O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES
   85 var_type: . VOID
   86         | . INT
   87         | . FLOAT
   88         | . CHAR

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    STRUCT  shift, and go to state 5

    declaration         go to state 16
    struct_declaration  go to state 9
    functions           go to state 17
    func_definition     go to state 11
    var_type            go to state 12


State 8

    3 declarations: declaration .

    $default  reduce using rule 3 (declarations)


State 9

    6 declaration: struct_declaration . SEMICOLON

    SEMICOLON  shift, and go to state 18


State 10

    1 program: functions .  [$end]
   19 functions: functions . func_definition
   21 func_definition: . var_type identifier @1 O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES
   85 var_type: . VOID
   86         | . INT
   87         | . FLOAT
   88         | . CHAR

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4

    $default  reduce using rule 1 (program)

    func_definition  go to state 19
    var_type         go to state 20


State 11

   18 functions: func_definition .

    $default  reduce using rule 18 (functions)


State 12

    5 declaration: var_type . var_decl SEMICOLON
    7 var_decl: . simple_declaration
    8         | . assignment
    9         | . var_decl COMMA var_decl
   10 simple_declaration: . %empty  [COMMA, SEMICOLON]
   11                   | . identifier
   21 func_definition: var_type . identifier @1 O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES
   46 assignment: . identifier ASSIGN word
   47           | . identifier ASSIGN expr
   48           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | . identifier ASSIGN func_call
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 10 (simple_declaration)

    var_decl            go to state 21
    simple_declaration  go to state 22
    assignment          go to state 23
    identifier          go to state 24


State 13

   89 identifier: IDENTIFIER .

    $default  reduce using rule 89 (identifier)


State 14

   12 struct_declaration: STRUCT identifier . O_CURLY_BRACES declarations C_CURLY_BRACES var_decl
   90 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier . DOT identifier

    O_CURLY_BRACES   shift, and go to state 25
    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27


State 15

    0 $accept: program $end .

    $default  accept


State 16

    4 declarations: declarations declaration .

    $default  reduce using rule 4 (declarations)


State 17

    2 program: declarations functions .  [$end]
   19 functions: functions . func_definition
   21 func_definition: . var_type identifier @1 O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES
   85 var_type: . VOID
   86         | . INT
   87         | . FLOAT
   88         | . CHAR

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4

    $default  reduce using rule 2 (program)

    func_definition  go to state 19
    var_type         go to state 20


State 18

    6 declaration: struct_declaration SEMICOLON .

    $default  reduce using rule 6 (declaration)


State 19

   19 functions: functions func_definition .

    $default  reduce using rule 19 (functions)


State 20

   21 func_definition: var_type . identifier @1 O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    identifier  go to state 28


State 21

    5 declaration: var_type var_decl . SEMICOLON
    9 var_decl: var_decl . COMMA var_decl

    COMMA      shift, and go to state 29
    SEMICOLON  shift, and go to state 30


State 22

    7 var_decl: simple_declaration .

    $default  reduce using rule 7 (var_decl)


State 23

    8 var_decl: assignment .

    $default  reduce using rule 8 (var_decl)


State 24

   11 simple_declaration: identifier .  [COMMA, SEMICOLON]
   20 @1: . %empty  [O_ROUND_BRACES]
   21 func_definition: var_type identifier . @1 O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES
   46 assignment: identifier . ASSIGN word
   47           | identifier . ASSIGN expr
   48           | identifier . ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | identifier . ASSIGN func_call
   90 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27
    ASSIGN           shift, and go to state 31

    O_ROUND_BRACES  reduce using rule 20 (@1)
    $default        reduce using rule 11 (simple_declaration)

    @1  go to state 32


State 25

    3 declarations: . declaration
    4             | . declarations declaration
    5 declaration: . var_type var_decl SEMICOLON
    6            | . struct_declaration SEMICOLON
   12 struct_declaration: . STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl
   12                   | STRUCT identifier O_CURLY_BRACES . declarations C_CURLY_BRACES var_decl
   85 var_type: . VOID
   86         | . INT
   87         | . FLOAT
   88         | . CHAR

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    STRUCT  shift, and go to state 5

    declarations        go to state 33
    declaration         go to state 8
    struct_declaration  go to state 9
    var_type            go to state 34


State 26

   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   90           | identifier O_SQUARE_BRACES . ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   91           | identifier O_SQUARE_BRACES . identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13
    ICONST      shift, and go to state 35

    identifier  go to state 36


State 27

   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   92           | identifier DOT . identifier

    IDENTIFIER  shift, and go to state 13

    identifier  go to state 37


State 28

   20 @1: . %empty  [O_ROUND_BRACES]
   21 func_definition: var_type identifier . @1 O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES
   90 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27

    $default  reduce using rule 20 (@1)

    @1  go to state 32


State 29

    7 var_decl: . simple_declaration
    8         | . assignment
    9         | . var_decl COMMA var_decl
    9         | var_decl COMMA . var_decl
   10 simple_declaration: . %empty  [COMMA, SEMICOLON]
   11                   | . identifier
   46 assignment: . identifier ASSIGN word
   47           | . identifier ASSIGN expr
   48           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | . identifier ASSIGN func_call
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 10 (simple_declaration)

    var_decl            go to state 38
    simple_declaration  go to state 22
    assignment          go to state 23
    identifier          go to state 39


State 30

    5 declaration: var_type var_decl SEMICOLON .

    $default  reduce using rule 5 (declaration)


State 31

   42 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES
   46 assignment: identifier ASSIGN . word
   47           | identifier ASSIGN . expr
   48           | identifier ASSIGN . O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | identifier ASSIGN . func_call
   50 expr: . expr ADD expr
   51     | . expr SUB expr
   52     | . expr TIMES expr
   53     | . expr DIVIDE expr
   54     | . SUB expr
   55     | . increment
   56     | . expr EQOP expr
   57     | . expr RELOP expr
   58     | . expr AND expr
   59     | . expr OR expr
   60     | . NOT expr
   61     | . O_ROUND_BRACES expr C_ROUND_BRACES
   62     | . number
   63     | . identifier
   64 increment: . identifier INCR
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   96 word: . CCONST
   97     | . STRCONST
   98 number: . ICONST
   99       | . FCONST

    O_CURLY_BRACES  shift, and go to state 40
    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45
    CCONST          shift, and go to state 46
    STRCONST        shift, and go to state 47

    func_call   go to state 48
    expr        go to state 49
    increment   go to state 50
    identifier  go to state 51
    word        go to state 52
    number      go to state 53


State 32

   21 func_definition: var_type identifier @1 . O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES

    O_ROUND_BRACES  shift, and go to state 54


State 33

    4 declarations: declarations . declaration
    5 declaration: . var_type var_decl SEMICOLON
    6            | . struct_declaration SEMICOLON
   12 struct_declaration: . STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl
   12                   | STRUCT identifier O_CURLY_BRACES declarations . C_CURLY_BRACES var_decl
   85 var_type: . VOID
   86         | . INT
   87         | . FLOAT
   88         | . CHAR

    C_CURLY_BRACES  shift, and go to state 55
    VOID            shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    CHAR            shift, and go to state 4
    STRUCT          shift, and go to state 5

    declaration         go to state 16
    struct_declaration  go to state 9
    var_type            go to state 34


State 34

    5 declaration: var_type . var_decl SEMICOLON
    7 var_decl: . simple_declaration
    8         | . assignment
    9         | . var_decl COMMA var_decl
   10 simple_declaration: . %empty  [COMMA, SEMICOLON]
   11                   | . identifier
   46 assignment: . identifier ASSIGN word
   47           | . identifier ASSIGN expr
   48           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | . identifier ASSIGN func_call
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 10 (simple_declaration)

    var_decl            go to state 21
    simple_declaration  go to state 22
    assignment          go to state 23
    identifier          go to state 39


State 35

   90 identifier: identifier O_SQUARE_BRACES ICONST . C_SQUARE_BRACES

    C_SQUARE_BRACES  shift, and go to state 56


State 36

   90 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   91           | identifier O_SQUARE_BRACES identifier . C_SQUARE_BRACES
   92           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    C_SQUARE_BRACES  shift, and go to state 57
    DOT              shift, and go to state 27


State 37

   90 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier . DOT identifier
   92           | identifier DOT identifier .  [O_CURLY_BRACES, C_CURLY_BRACES, O_SQUARE_BRACES, C_SQUARE_BRACES, O_ROUND_BRACES, C_ROUND_BRACES, DOT, COMMA, SEMICOLON, ASSIGN, ADD, SUB, TIMES, DIVIDE, INCR, EQOP, RELOP, AND, OR, IDENTIFIER]

    $default  reduce using rule 92 (identifier)

    Conflict between rule 92 and token O_SQUARE_BRACES resolved as reduce (%left O_SQUARE_BRACES).
    Conflict between rule 92 and token DOT resolved as reduce (%left DOT).


State 38

    9 var_decl: var_decl . COMMA var_decl
    9         | var_decl COMMA var_decl .  [COMMA, SEMICOLON]

    $default  reduce using rule 9 (var_decl)

    Conflict between rule 9 and token COMMA resolved as reduce (%left COMMA).


State 39

   11 simple_declaration: identifier .  [COMMA, SEMICOLON]
   46 assignment: identifier . ASSIGN word
   47           | identifier . ASSIGN expr
   48           | identifier . ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | identifier . ASSIGN func_call
   90 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27
    ASSIGN           shift, and go to state 31

    $default  reduce using rule 11 (simple_declaration)


State 40

   13 inizialization_list: . identifier
   14                    | . const
   15                    | . STRCONST
   16                    | . O_CURLY_BRACES inizialization_list COMMA inizialization_list C_CURLY_BRACES
   17                    | . inizialization_list COMMA inizialization_list
   48 assignment: identifier ASSIGN O_CURLY_BRACES . inizialization_list C_CURLY_BRACES
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   93 const: . ICONST
   94      | . FCONST
   95      | . CCONST

    O_CURLY_BRACES  shift, and go to state 58
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 59
    FCONST          shift, and go to state 60
    CCONST          shift, and go to state 61
    STRCONST        shift, and go to state 62

    inizialization_list  go to state 63
    identifier           go to state 64
    const                go to state 65


State 41

   50 expr: . expr ADD expr
   51     | . expr SUB expr
   52     | . expr TIMES expr
   53     | . expr DIVIDE expr
   54     | . SUB expr
   55     | . increment
   56     | . expr EQOP expr
   57     | . expr RELOP expr
   58     | . expr AND expr
   59     | . expr OR expr
   60     | . NOT expr
   61     | . O_ROUND_BRACES expr C_ROUND_BRACES
   61     | O_ROUND_BRACES . expr C_ROUND_BRACES
   62     | . number
   63     | . identifier
   64 increment: . identifier INCR
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   98 number: . ICONST
   99       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 66
    increment   go to state 50
    identifier  go to state 67
    number      go to state 53


State 42

   50 expr: . expr ADD expr
   51     | . expr SUB expr
   52     | . expr TIMES expr
   53     | . expr DIVIDE expr
   54     | . SUB expr
   54     | SUB . expr
   55     | . increment
   56     | . expr EQOP expr
   57     | . expr RELOP expr
   58     | . expr AND expr
   59     | . expr OR expr
   60     | . NOT expr
   61     | . O_ROUND_BRACES expr C_ROUND_BRACES
   62     | . number
   63     | . identifier
   64 increment: . identifier INCR
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   98 number: . ICONST
   99       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 68
    increment   go to state 50
    identifier  go to state 67
    number      go to state 53


State 43

   50 expr: . expr ADD expr
   51     | . expr SUB expr
   52     | . expr TIMES expr
   53     | . expr DIVIDE expr
   54     | . SUB expr
   55     | . increment
   56     | . expr EQOP expr
   57     | . expr RELOP expr
   58     | . expr AND expr
   59     | . expr OR expr
   60     | . NOT expr
   60     | NOT . expr
   61     | . O_ROUND_BRACES expr C_ROUND_BRACES
   62     | . number
   63     | . identifier
   64 increment: . identifier INCR
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   98 number: . ICONST
   99       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 69
    increment   go to state 50
    identifier  go to state 67
    number      go to state 53


State 44

   98 number: ICONST .

    $default  reduce using rule 98 (number)


State 45

   99 number: FCONST .

    $default  reduce using rule 99 (number)


State 46

   96 word: CCONST .

    $default  reduce using rule 96 (word)


State 47

   97 word: STRCONST .

    $default  reduce using rule 97 (word)


State 48

   49 assignment: identifier ASSIGN func_call .

    $default  reduce using rule 49 (assignment)


State 49

   47 assignment: identifier ASSIGN expr .  [COMMA, SEMICOLON]
   50 expr: expr . ADD expr
   51     | expr . SUB expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   56     | expr . EQOP expr
   57     | expr . RELOP expr
   58     | expr . AND expr
   59     | expr . OR expr

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73
    EQOP    shift, and go to state 74
    RELOP   shift, and go to state 75
    AND     shift, and go to state 76
    OR      shift, and go to state 77

    $default  reduce using rule 47 (assignment)


State 50

   55 expr: increment .

    $default  reduce using rule 55 (expr)


State 51

   42 func_call: identifier . O_ROUND_BRACES call_args C_ROUND_BRACES
   63 expr: identifier .  [COMMA, SEMICOLON, ADD, SUB, TIMES, DIVIDE, EQOP, RELOP, AND, OR]
   64 increment: identifier . INCR
   90 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    O_ROUND_BRACES   shift, and go to state 78
    DOT              shift, and go to state 27
    INCR             shift, and go to state 79

    $default  reduce using rule 63 (expr)


State 52

   46 assignment: identifier ASSIGN word .

    $default  reduce using rule 46 (assignment)


State 53

   62 expr: number .

    $default  reduce using rule 62 (expr)


State 54

   21 func_definition: var_type identifier @1 O_ROUND_BRACES . argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES
   22 argument_list: . %empty  [C_ROUND_BRACES]
   23              | . VOID
   24              | . parameter_list
   25 parameter_list: . parameter_declaration
   26               | . parameter_list COMMA parameter_declaration
   27 parameter_declaration: . var_type identifier
   28                      | . STRUCT identifier identifier
   85 var_type: . VOID
   86         | . INT
   87         | . FLOAT
   88         | . CHAR

    VOID    shift, and go to state 80
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    STRUCT  shift, and go to state 81

    $default  reduce using rule 22 (argument_list)

    argument_list          go to state 82
    parameter_list         go to state 83
    parameter_declaration  go to state 84
    var_type               go to state 85


State 55

    7 var_decl: . simple_declaration
    8         | . assignment
    9         | . var_decl COMMA var_decl
   10 simple_declaration: . %empty  [COMMA, SEMICOLON]
   11                   | . identifier
   12 struct_declaration: STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES . var_decl
   46 assignment: . identifier ASSIGN word
   47           | . identifier ASSIGN expr
   48           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | . identifier ASSIGN func_call
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 10 (simple_declaration)

    var_decl            go to state 86
    simple_declaration  go to state 22
    assignment          go to state 23
    identifier          go to state 39


State 56

   90 identifier: identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES .

    $default  reduce using rule 90 (identifier)


State 57

   91 identifier: identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES .

    $default  reduce using rule 91 (identifier)


State 58

   13 inizialization_list: . identifier
   14                    | . const
   15                    | . STRCONST
   16                    | . O_CURLY_BRACES inizialization_list COMMA inizialization_list C_CURLY_BRACES
   16                    | O_CURLY_BRACES . inizialization_list COMMA inizialization_list C_CURLY_BRACES
   17                    | . inizialization_list COMMA inizialization_list
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   93 const: . ICONST
   94      | . FCONST
   95      | . CCONST

    O_CURLY_BRACES  shift, and go to state 58
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 59
    FCONST          shift, and go to state 60
    CCONST          shift, and go to state 61
    STRCONST        shift, and go to state 62

    inizialization_list  go to state 87
    identifier           go to state 64
    const                go to state 65


State 59

   93 const: ICONST .

    $default  reduce using rule 93 (const)


State 60

   94 const: FCONST .

    $default  reduce using rule 94 (const)


State 61

   95 const: CCONST .

    $default  reduce using rule 95 (const)


State 62

   15 inizialization_list: STRCONST .

    $default  reduce using rule 15 (inizialization_list)


State 63

   17 inizialization_list: inizialization_list . COMMA inizialization_list
   48 assignment: identifier ASSIGN O_CURLY_BRACES inizialization_list . C_CURLY_BRACES

    C_CURLY_BRACES  shift, and go to state 88
    COMMA           shift, and go to state 89


State 64

   13 inizialization_list: identifier .  [C_CURLY_BRACES, COMMA]
   90 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27

    $default  reduce using rule 13 (inizialization_list)


State 65

   14 inizialization_list: const .

    $default  reduce using rule 14 (inizialization_list)


State 66

   50 expr: expr . ADD expr
   51     | expr . SUB expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   56     | expr . EQOP expr
   57     | expr . RELOP expr
   58     | expr . AND expr
   59     | expr . OR expr
   61     | O_ROUND_BRACES expr . C_ROUND_BRACES

    C_ROUND_BRACES  shift, and go to state 90
    ADD             shift, and go to state 70
    SUB             shift, and go to state 71
    TIMES           shift, and go to state 72
    DIVIDE          shift, and go to state 73
    EQOP            shift, and go to state 74
    RELOP           shift, and go to state 75
    AND             shift, and go to state 76
    OR              shift, and go to state 77


State 67

   63 expr: identifier .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, TIMES, DIVIDE, EQOP, RELOP, AND, OR]
   64 increment: identifier . INCR
   90 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27
    INCR             shift, and go to state 79

    $default  reduce using rule 63 (expr)


State 68

   50 expr: expr . ADD expr
   51     | expr . SUB expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | SUB expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, TIMES, DIVIDE, EQOP, RELOP, AND, OR]
   56     | expr . EQOP expr
   57     | expr . RELOP expr
   58     | expr . AND expr
   59     | expr . OR expr

    $default  reduce using rule 54 (expr)

    Conflict between rule 54 and token ADD resolved as reduce (ADD < REV).
    Conflict between rule 54 and token SUB resolved as reduce (SUB < REV).
    Conflict between rule 54 and token TIMES resolved as reduce (TIMES < REV).
    Conflict between rule 54 and token DIVIDE resolved as reduce (DIVIDE < REV).
    Conflict between rule 54 and token EQOP resolved as reduce (EQOP < REV).
    Conflict between rule 54 and token RELOP resolved as reduce (RELOP < REV).
    Conflict between rule 54 and token AND resolved as reduce (AND < REV).
    Conflict between rule 54 and token OR resolved as reduce (OR < REV).


State 69

   50 expr: expr . ADD expr
   51     | expr . SUB expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   56     | expr . EQOP expr
   57     | expr . RELOP expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | NOT expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, TIMES, DIVIDE, EQOP, RELOP, AND, OR]

    $default  reduce using rule 60 (expr)

    Conflict between rule 60 and token ADD resolved as reduce (ADD < NOT).
    Conflict between rule 60 and token SUB resolved as reduce (SUB < NOT).
    Conflict between rule 60 and token TIMES resolved as reduce (TIMES < NOT).
    Conflict between rule 60 and token DIVIDE resolved as reduce (DIVIDE < NOT).
    Conflict between rule 60 and token EQOP resolved as reduce (EQOP < NOT).
    Conflict between rule 60 and token RELOP resolved as reduce (RELOP < NOT).
    Conflict between rule 60 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 60 and token OR resolved as reduce (OR < NOT).


State 70

   50 expr: . expr ADD expr
   50     | expr ADD . expr
   51     | . expr SUB expr
   52     | . expr TIMES expr
   53     | . expr DIVIDE expr
   54     | . SUB expr
   55     | . increment
   56     | . expr EQOP expr
   57     | . expr RELOP expr
   58     | . expr AND expr
   59     | . expr OR expr
   60     | . NOT expr
   61     | . O_ROUND_BRACES expr C_ROUND_BRACES
   62     | . number
   63     | . identifier
   64 increment: . identifier INCR
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   98 number: . ICONST
   99       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 91
    increment   go to state 50
    identifier  go to state 67
    number      go to state 53


State 71

   50 expr: . expr ADD expr
   51     | . expr SUB expr
   51     | expr SUB . expr
   52     | . expr TIMES expr
   53     | . expr DIVIDE expr
   54     | . SUB expr
   55     | . increment
   56     | . expr EQOP expr
   57     | . expr RELOP expr
   58     | . expr AND expr
   59     | . expr OR expr
   60     | . NOT expr
   61     | . O_ROUND_BRACES expr C_ROUND_BRACES
   62     | . number
   63     | . identifier
   64 increment: . identifier INCR
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   98 number: . ICONST
   99       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 92
    increment   go to state 50
    identifier  go to state 67
    number      go to state 53


State 72

   50 expr: . expr ADD expr
   51     | . expr SUB expr
   52     | . expr TIMES expr
   52     | expr TIMES . expr
   53     | . expr DIVIDE expr
   54     | . SUB expr
   55     | . increment
   56     | . expr EQOP expr
   57     | . expr RELOP expr
   58     | . expr AND expr
   59     | . expr OR expr
   60     | . NOT expr
   61     | . O_ROUND_BRACES expr C_ROUND_BRACES
   62     | . number
   63     | . identifier
   64 increment: . identifier INCR
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   98 number: . ICONST
   99       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 93
    increment   go to state 50
    identifier  go to state 67
    number      go to state 53


State 73

   50 expr: . expr ADD expr
   51     | . expr SUB expr
   52     | . expr TIMES expr
   53     | . expr DIVIDE expr
   53     | expr DIVIDE . expr
   54     | . SUB expr
   55     | . increment
   56     | . expr EQOP expr
   57     | . expr RELOP expr
   58     | . expr AND expr
   59     | . expr OR expr
   60     | . NOT expr
   61     | . O_ROUND_BRACES expr C_ROUND_BRACES
   62     | . number
   63     | . identifier
   64 increment: . identifier INCR
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   98 number: . ICONST
   99       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 94
    increment   go to state 50
    identifier  go to state 67
    number      go to state 53


State 74

   50 expr: . expr ADD expr
   51     | . expr SUB expr
   52     | . expr TIMES expr
   53     | . expr DIVIDE expr
   54     | . SUB expr
   55     | . increment
   56     | . expr EQOP expr
   56     | expr EQOP . expr
   57     | . expr RELOP expr
   58     | . expr AND expr
   59     | . expr OR expr
   60     | . NOT expr
   61     | . O_ROUND_BRACES expr C_ROUND_BRACES
   62     | . number
   63     | . identifier
   64 increment: . identifier INCR
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   98 number: . ICONST
   99       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 95
    increment   go to state 50
    identifier  go to state 67
    number      go to state 53


State 75

   50 expr: . expr ADD expr
   51     | . expr SUB expr
   52     | . expr TIMES expr
   53     | . expr DIVIDE expr
   54     | . SUB expr
   55     | . increment
   56     | . expr EQOP expr
   57     | . expr RELOP expr
   57     | expr RELOP . expr
   58     | . expr AND expr
   59     | . expr OR expr
   60     | . NOT expr
   61     | . O_ROUND_BRACES expr C_ROUND_BRACES
   62     | . number
   63     | . identifier
   64 increment: . identifier INCR
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   98 number: . ICONST
   99       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 96
    increment   go to state 50
    identifier  go to state 67
    number      go to state 53


State 76

   50 expr: . expr ADD expr
   51     | . expr SUB expr
   52     | . expr TIMES expr
   53     | . expr DIVIDE expr
   54     | . SUB expr
   55     | . increment
   56     | . expr EQOP expr
   57     | . expr RELOP expr
   58     | . expr AND expr
   58     | expr AND . expr
   59     | . expr OR expr
   60     | . NOT expr
   61     | . O_ROUND_BRACES expr C_ROUND_BRACES
   62     | . number
   63     | . identifier
   64 increment: . identifier INCR
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   98 number: . ICONST
   99       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 97
    increment   go to state 50
    identifier  go to state 67
    number      go to state 53


State 77

   50 expr: . expr ADD expr
   51     | . expr SUB expr
   52     | . expr TIMES expr
   53     | . expr DIVIDE expr
   54     | . SUB expr
   55     | . increment
   56     | . expr EQOP expr
   57     | . expr RELOP expr
   58     | . expr AND expr
   59     | . expr OR expr
   59     | expr OR . expr
   60     | . NOT expr
   61     | . O_ROUND_BRACES expr C_ROUND_BRACES
   62     | . number
   63     | . identifier
   64 increment: . identifier INCR
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   98 number: . ICONST
   99       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 98
    increment   go to state 50
    identifier  go to state 67
    number      go to state 53


State 78

   42 func_call: identifier O_ROUND_BRACES . call_args C_ROUND_BRACES
   43 call_args: . %empty  [C_ROUND_BRACES, COMMA]
   44          | . identifier
   45          | . call_args COMMA identifier
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 43 (call_args)

    call_args   go to state 99
    identifier  go to state 100


State 79

   64 increment: identifier INCR .

    $default  reduce using rule 64 (increment)


State 80

   23 argument_list: VOID .  [C_ROUND_BRACES]
   85 var_type: VOID .  [IDENTIFIER]

    IDENTIFIER  reduce using rule 85 (var_type)
    $default    reduce using rule 23 (argument_list)


State 81

   28 parameter_declaration: STRUCT . identifier identifier
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    identifier  go to state 101


State 82

   21 func_definition: var_type identifier @1 O_ROUND_BRACES argument_list . C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES

    C_ROUND_BRACES  shift, and go to state 102


State 83

   24 argument_list: parameter_list .  [C_ROUND_BRACES]
   26 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 103

    $default  reduce using rule 24 (argument_list)


State 84

   25 parameter_list: parameter_declaration .

    $default  reduce using rule 25 (parameter_list)


State 85

   27 parameter_declaration: var_type . identifier
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    identifier  go to state 104


State 86

    9 var_decl: var_decl . COMMA var_decl
   12 struct_declaration: STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl .  [SEMICOLON]

    COMMA  shift, and go to state 29

    $default  reduce using rule 12 (struct_declaration)


State 87

   16 inizialization_list: O_CURLY_BRACES inizialization_list . COMMA inizialization_list C_CURLY_BRACES
   17                    | inizialization_list . COMMA inizialization_list

    COMMA  shift, and go to state 105


State 88

   48 assignment: identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES .

    $default  reduce using rule 48 (assignment)


State 89

   13 inizialization_list: . identifier
   14                    | . const
   15                    | . STRCONST
   16                    | . O_CURLY_BRACES inizialization_list COMMA inizialization_list C_CURLY_BRACES
   17                    | . inizialization_list COMMA inizialization_list
   17                    | inizialization_list COMMA . inizialization_list
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   93 const: . ICONST
   94      | . FCONST
   95      | . CCONST

    O_CURLY_BRACES  shift, and go to state 58
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 59
    FCONST          shift, and go to state 60
    CCONST          shift, and go to state 61
    STRCONST        shift, and go to state 62

    inizialization_list  go to state 106
    identifier           go to state 64
    const                go to state 65


State 90

   61 expr: O_ROUND_BRACES expr C_ROUND_BRACES .

    $default  reduce using rule 61 (expr)


State 91

   50 expr: expr . ADD expr
   50     | expr ADD expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, EQOP, RELOP, AND, OR]
   51     | expr . SUB expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   56     | expr . EQOP expr
   57     | expr . RELOP expr
   58     | expr . AND expr
   59     | expr . OR expr

    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73

    $default  reduce using rule 50 (expr)

    Conflict between rule 50 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 50 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 50 and token TIMES resolved as shift (ADD < TIMES).
    Conflict between rule 50 and token DIVIDE resolved as shift (ADD < DIVIDE).
    Conflict between rule 50 and token EQOP resolved as reduce (EQOP < ADD).
    Conflict between rule 50 and token RELOP resolved as reduce (RELOP < ADD).
    Conflict between rule 50 and token AND resolved as reduce (AND < ADD).
    Conflict between rule 50 and token OR resolved as reduce (OR < ADD).


State 92

   50 expr: expr . ADD expr
   51     | expr . SUB expr
   51     | expr SUB expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, EQOP, RELOP, AND, OR]
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   56     | expr . EQOP expr
   57     | expr . RELOP expr
   58     | expr . AND expr
   59     | expr . OR expr

    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73

    $default  reduce using rule 51 (expr)

    Conflict between rule 51 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 51 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 51 and token TIMES resolved as shift (SUB < TIMES).
    Conflict between rule 51 and token DIVIDE resolved as shift (SUB < DIVIDE).
    Conflict between rule 51 and token EQOP resolved as reduce (EQOP < SUB).
    Conflict between rule 51 and token RELOP resolved as reduce (RELOP < SUB).
    Conflict between rule 51 and token AND resolved as reduce (AND < SUB).
    Conflict between rule 51 and token OR resolved as reduce (OR < SUB).


State 93

   50 expr: expr . ADD expr
   51     | expr . SUB expr
   52     | expr . TIMES expr
   52     | expr TIMES expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, TIMES, DIVIDE, EQOP, RELOP, AND, OR]
   53     | expr . DIVIDE expr
   56     | expr . EQOP expr
   57     | expr . RELOP expr
   58     | expr . AND expr
   59     | expr . OR expr

    $default  reduce using rule 52 (expr)

    Conflict between rule 52 and token ADD resolved as reduce (ADD < TIMES).
    Conflict between rule 52 and token SUB resolved as reduce (SUB < TIMES).
    Conflict between rule 52 and token TIMES resolved as reduce (%left TIMES).
    Conflict between rule 52 and token DIVIDE resolved as reduce (%left DIVIDE).
    Conflict between rule 52 and token EQOP resolved as reduce (EQOP < TIMES).
    Conflict between rule 52 and token RELOP resolved as reduce (RELOP < TIMES).
    Conflict between rule 52 and token AND resolved as reduce (AND < TIMES).
    Conflict between rule 52 and token OR resolved as reduce (OR < TIMES).


State 94

   50 expr: expr . ADD expr
   51     | expr . SUB expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   53     | expr DIVIDE expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, ADD, SUB, TIMES, DIVIDE, EQOP, RELOP, AND, OR]
   56     | expr . EQOP expr
   57     | expr . RELOP expr
   58     | expr . AND expr
   59     | expr . OR expr

    $default  reduce using rule 53 (expr)

    Conflict between rule 53 and token ADD resolved as reduce (ADD < DIVIDE).
    Conflict between rule 53 and token SUB resolved as reduce (SUB < DIVIDE).
    Conflict between rule 53 and token TIMES resolved as reduce (%left TIMES).
    Conflict between rule 53 and token DIVIDE resolved as reduce (%left DIVIDE).
    Conflict between rule 53 and token EQOP resolved as reduce (EQOP < DIVIDE).
    Conflict between rule 53 and token RELOP resolved as reduce (RELOP < DIVIDE).
    Conflict between rule 53 and token AND resolved as reduce (AND < DIVIDE).
    Conflict between rule 53 and token OR resolved as reduce (OR < DIVIDE).


State 95

   50 expr: expr . ADD expr
   51     | expr . SUB expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   56     | expr . EQOP expr
   56     | expr EQOP expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, EQOP, AND, OR]
   57     | expr . RELOP expr
   58     | expr . AND expr
   59     | expr . OR expr

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73
    RELOP   shift, and go to state 75

    $default  reduce using rule 56 (expr)

    Conflict between rule 56 and token ADD resolved as shift (EQOP < ADD).
    Conflict between rule 56 and token SUB resolved as shift (EQOP < SUB).
    Conflict between rule 56 and token TIMES resolved as shift (EQOP < TIMES).
    Conflict between rule 56 and token DIVIDE resolved as shift (EQOP < DIVIDE).
    Conflict between rule 56 and token EQOP resolved as reduce (%left EQOP).
    Conflict between rule 56 and token RELOP resolved as shift (EQOP < RELOP).
    Conflict between rule 56 and token AND resolved as reduce (AND < EQOP).
    Conflict between rule 56 and token OR resolved as reduce (OR < EQOP).


State 96

   50 expr: expr . ADD expr
   51     | expr . SUB expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   56     | expr . EQOP expr
   57     | expr . RELOP expr
   57     | expr RELOP expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, EQOP, RELOP, AND, OR]
   58     | expr . AND expr
   59     | expr . OR expr

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73

    $default  reduce using rule 57 (expr)

    Conflict between rule 57 and token ADD resolved as shift (RELOP < ADD).
    Conflict between rule 57 and token SUB resolved as shift (RELOP < SUB).
    Conflict between rule 57 and token TIMES resolved as shift (RELOP < TIMES).
    Conflict between rule 57 and token DIVIDE resolved as shift (RELOP < DIVIDE).
    Conflict between rule 57 and token EQOP resolved as reduce (EQOP < RELOP).
    Conflict between rule 57 and token RELOP resolved as reduce (%left RELOP).
    Conflict between rule 57 and token AND resolved as reduce (AND < RELOP).
    Conflict between rule 57 and token OR resolved as reduce (OR < RELOP).


State 97

   50 expr: expr . ADD expr
   51     | expr . SUB expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   56     | expr . EQOP expr
   57     | expr . RELOP expr
   58     | expr . AND expr
   58     | expr AND expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, AND, OR]
   59     | expr . OR expr

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73
    EQOP    shift, and go to state 74
    RELOP   shift, and go to state 75

    $default  reduce using rule 58 (expr)

    Conflict between rule 58 and token ADD resolved as shift (AND < ADD).
    Conflict between rule 58 and token SUB resolved as shift (AND < SUB).
    Conflict between rule 58 and token TIMES resolved as shift (AND < TIMES).
    Conflict between rule 58 and token DIVIDE resolved as shift (AND < DIVIDE).
    Conflict between rule 58 and token EQOP resolved as shift (AND < EQOP).
    Conflict between rule 58 and token RELOP resolved as shift (AND < RELOP).
    Conflict between rule 58 and token AND resolved as reduce (%left AND).
    Conflict between rule 58 and token OR resolved as reduce (OR < AND).


State 98

   50 expr: expr . ADD expr
   51     | expr . SUB expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   56     | expr . EQOP expr
   57     | expr . RELOP expr
   58     | expr . AND expr
   59     | expr . OR expr
   59     | expr OR expr .  [C_ROUND_BRACES, COMMA, SEMICOLON, OR]

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73
    EQOP    shift, and go to state 74
    RELOP   shift, and go to state 75
    AND     shift, and go to state 76

    $default  reduce using rule 59 (expr)

    Conflict between rule 59 and token ADD resolved as shift (OR < ADD).
    Conflict between rule 59 and token SUB resolved as shift (OR < SUB).
    Conflict between rule 59 and token TIMES resolved as shift (OR < TIMES).
    Conflict between rule 59 and token DIVIDE resolved as shift (OR < DIVIDE).
    Conflict between rule 59 and token EQOP resolved as shift (OR < EQOP).
    Conflict between rule 59 and token RELOP resolved as shift (OR < RELOP).
    Conflict between rule 59 and token AND resolved as shift (OR < AND).
    Conflict between rule 59 and token OR resolved as reduce (%left OR).


State 99

   42 func_call: identifier O_ROUND_BRACES call_args . C_ROUND_BRACES
   45 call_args: call_args . COMMA identifier

    C_ROUND_BRACES  shift, and go to state 107
    COMMA           shift, and go to state 108


State 100

   44 call_args: identifier .  [C_ROUND_BRACES, COMMA]
   90 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27

    $default  reduce using rule 44 (call_args)


State 101

   28 parameter_declaration: STRUCT identifier . identifier
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   90           | identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   92           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27
    IDENTIFIER       shift, and go to state 13

    identifier  go to state 109


State 102

   21 func_definition: var_type identifier @1 O_ROUND_BRACES argument_list C_ROUND_BRACES . O_CURLY_BRACES body C_CURLY_BRACES

    O_CURLY_BRACES  shift, and go to state 110


State 103

   26 parameter_list: parameter_list COMMA . parameter_declaration
   27 parameter_declaration: . var_type identifier
   28                      | . STRUCT identifier identifier
   85 var_type: . VOID
   86         | . INT
   87         | . FLOAT
   88         | . CHAR

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    STRUCT  shift, and go to state 81

    parameter_declaration  go to state 111
    var_type               go to state 85


State 104

   27 parameter_declaration: var_type identifier .  [C_ROUND_BRACES, COMMA]
   90 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27

    $default  reduce using rule 27 (parameter_declaration)


State 105

   13 inizialization_list: . identifier
   14                    | . const
   15                    | . STRCONST
   16                    | . O_CURLY_BRACES inizialization_list COMMA inizialization_list C_CURLY_BRACES
   16                    | O_CURLY_BRACES inizialization_list COMMA . inizialization_list C_CURLY_BRACES
   17                    | . inizialization_list COMMA inizialization_list
   17                    | inizialization_list COMMA . inizialization_list
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   93 const: . ICONST
   94      | . FCONST
   95      | . CCONST

    O_CURLY_BRACES  shift, and go to state 58
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 59
    FCONST          shift, and go to state 60
    CCONST          shift, and go to state 61
    STRCONST        shift, and go to state 62

    inizialization_list  go to state 112
    identifier           go to state 64
    const                go to state 65


State 106

   17 inizialization_list: inizialization_list . COMMA inizialization_list
   17                    | inizialization_list COMMA inizialization_list .  [C_CURLY_BRACES, COMMA]

    $default  reduce using rule 17 (inizialization_list)

    Conflict between rule 17 and token COMMA resolved as reduce (%left COMMA).


State 107

   42 func_call: identifier O_ROUND_BRACES call_args C_ROUND_BRACES .

    $default  reduce using rule 42 (func_call)


State 108

   45 call_args: call_args COMMA . identifier
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    identifier  go to state 113


State 109

   28 parameter_declaration: STRUCT identifier identifier .  [C_ROUND_BRACES, COMMA]
   90 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27

    $default  reduce using rule 28 (parameter_declaration)


State 110

    3 declarations: . declaration
    4             | . declarations declaration
    5 declaration: . var_type var_decl SEMICOLON
    6            | . struct_declaration SEMICOLON
   12 struct_declaration: . STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl
   21 func_definition: var_type identifier @1 O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES . body C_CURLY_BRACES
   29 body: . statements
   30     | . declarations statements
   31 statements: . statement
   32           | . statements statement
   33 statement: . SEMICOLON
   34          | . func_call SEMICOLON
   35          | . assignment SEMICOLON
   36          | . increment SEMICOLON
   37          | . printf_stat SEMICOLON
   38          | . scanf_stat SEMICOLON
   39          | . if_stat
   40          | . for_stat
   41          | . return_stat SEMICOLON
   42 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES
   46 assignment: . identifier ASSIGN word
   47           | . identifier ASSIGN expr
   48           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | . identifier ASSIGN func_call
   64 increment: . identifier INCR
   65 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES
   66            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES
   69 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES
   72 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block
   73        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block
   76 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   82 return_stat: . RETURN
   83            | . RETURN const
   84            | . RETURN identifier
   85 var_type: . VOID
   86         | . INT
   87         | . FLOAT
   88         | . CHAR
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    SEMICOLON   shift, and go to state 114
    IF          shift, and go to state 115
    FOR         shift, and go to state 116
    PRINTF      shift, and go to state 117
    SCANF       shift, and go to state 118
    IDENTIFIER  shift, and go to state 13
    RETURN      shift, and go to state 119
    VOID        shift, and go to state 1
    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    CHAR        shift, and go to state 4
    STRUCT      shift, and go to state 5

    declarations        go to state 120
    declaration         go to state 8
    struct_declaration  go to state 9
    body                go to state 121
    statements          go to state 122
    statement           go to state 123
    func_call           go to state 124
    assignment          go to state 125
    increment           go to state 126
    printf_stat         go to state 127
    scanf_stat          go to state 128
    if_stat             go to state 129
    for_stat            go to state 130
    return_stat         go to state 131
    var_type            go to state 34
    identifier          go to state 132


State 111

   26 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 26 (parameter_list)


State 112

   16 inizialization_list: O_CURLY_BRACES inizialization_list COMMA inizialization_list . C_CURLY_BRACES
   17                    | inizialization_list . COMMA inizialization_list
   17                    | inizialization_list COMMA inizialization_list .  [COMMA]

    C_CURLY_BRACES  shift, and go to state 133

    $default  reduce using rule 17 (inizialization_list)

    Conflict between rule 17 and token COMMA resolved as reduce (%left COMMA).


State 113

   45 call_args: call_args COMMA identifier .  [C_ROUND_BRACES, COMMA]
   90 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27

    $default  reduce using rule 45 (call_args)


State 114

   33 statement: SEMICOLON .

    $default  reduce using rule 33 (statement)


State 115

   72 if_stat: IF . O_ROUND_BRACES expr C_ROUND_BRACES block
   73        | IF . O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block

    O_ROUND_BRACES  shift, and go to state 134


State 116

   76 for_stat: FOR . O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block

    O_ROUND_BRACES  shift, and go to state 135


State 117

   65 printf_stat: PRINTF . O_ROUND_BRACES word C_ROUND_BRACES
   66            | PRINTF . O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES

    O_ROUND_BRACES  shift, and go to state 136


State 118

   69 scanf_stat: SCANF . O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES

    O_ROUND_BRACES  shift, and go to state 137


State 119

   82 return_stat: RETURN .  [SEMICOLON]
   83            | RETURN . const
   84            | RETURN . identifier
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   93 const: . ICONST
   94      | . FCONST
   95      | . CCONST

    IDENTIFIER  shift, and go to state 13
    ICONST      shift, and go to state 59
    FCONST      shift, and go to state 60
    CCONST      shift, and go to state 61

    $default  reduce using rule 82 (return_stat)

    identifier  go to state 138
    const       go to state 139


State 120

    4 declarations: declarations . declaration
    5 declaration: . var_type var_decl SEMICOLON
    6            | . struct_declaration SEMICOLON
   12 struct_declaration: . STRUCT identifier O_CURLY_BRACES declarations C_CURLY_BRACES var_decl
   30 body: declarations . statements
   31 statements: . statement
   32           | . statements statement
   33 statement: . SEMICOLON
   34          | . func_call SEMICOLON
   35          | . assignment SEMICOLON
   36          | . increment SEMICOLON
   37          | . printf_stat SEMICOLON
   38          | . scanf_stat SEMICOLON
   39          | . if_stat
   40          | . for_stat
   41          | . return_stat SEMICOLON
   42 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES
   46 assignment: . identifier ASSIGN word
   47           | . identifier ASSIGN expr
   48           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | . identifier ASSIGN func_call
   64 increment: . identifier INCR
   65 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES
   66            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES
   69 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES
   72 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block
   73        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block
   76 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   82 return_stat: . RETURN
   83            | . RETURN const
   84            | . RETURN identifier
   85 var_type: . VOID
   86         | . INT
   87         | . FLOAT
   88         | . CHAR
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    SEMICOLON   shift, and go to state 114
    IF          shift, and go to state 115
    FOR         shift, and go to state 116
    PRINTF      shift, and go to state 117
    SCANF       shift, and go to state 118
    IDENTIFIER  shift, and go to state 13
    RETURN      shift, and go to state 119
    VOID        shift, and go to state 1
    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    CHAR        shift, and go to state 4
    STRUCT      shift, and go to state 5

    declaration         go to state 16
    struct_declaration  go to state 9
    statements          go to state 140
    statement           go to state 123
    func_call           go to state 124
    assignment          go to state 125
    increment           go to state 126
    printf_stat         go to state 127
    scanf_stat          go to state 128
    if_stat             go to state 129
    for_stat            go to state 130
    return_stat         go to state 131
    var_type            go to state 34
    identifier          go to state 132


State 121

   21 func_definition: var_type identifier @1 O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body . C_CURLY_BRACES

    C_CURLY_BRACES  shift, and go to state 141


State 122

   29 body: statements .  [C_CURLY_BRACES]
   32 statements: statements . statement
   33 statement: . SEMICOLON
   34          | . func_call SEMICOLON
   35          | . assignment SEMICOLON
   36          | . increment SEMICOLON
   37          | . printf_stat SEMICOLON
   38          | . scanf_stat SEMICOLON
   39          | . if_stat
   40          | . for_stat
   41          | . return_stat SEMICOLON
   42 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES
   46 assignment: . identifier ASSIGN word
   47           | . identifier ASSIGN expr
   48           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | . identifier ASSIGN func_call
   64 increment: . identifier INCR
   65 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES
   66            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES
   69 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES
   72 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block
   73        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block
   76 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   82 return_stat: . RETURN
   83            | . RETURN const
   84            | . RETURN identifier
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    SEMICOLON   shift, and go to state 114
    IF          shift, and go to state 115
    FOR         shift, and go to state 116
    PRINTF      shift, and go to state 117
    SCANF       shift, and go to state 118
    IDENTIFIER  shift, and go to state 13
    RETURN      shift, and go to state 119

    $default  reduce using rule 29 (body)

    statement    go to state 142
    func_call    go to state 124
    assignment   go to state 125
    increment    go to state 126
    printf_stat  go to state 127
    scanf_stat   go to state 128
    if_stat      go to state 129
    for_stat     go to state 130
    return_stat  go to state 131
    identifier   go to state 132


State 123

   31 statements: statement .

    $default  reduce using rule 31 (statements)


State 124

   34 statement: func_call . SEMICOLON

    SEMICOLON  shift, and go to state 143


State 125

   35 statement: assignment . SEMICOLON

    SEMICOLON  shift, and go to state 144


State 126

   36 statement: increment . SEMICOLON

    SEMICOLON  shift, and go to state 145


State 127

   37 statement: printf_stat . SEMICOLON

    SEMICOLON  shift, and go to state 146


State 128

   38 statement: scanf_stat . SEMICOLON

    SEMICOLON  shift, and go to state 147


State 129

   39 statement: if_stat .

    $default  reduce using rule 39 (statement)


State 130

   40 statement: for_stat .

    $default  reduce using rule 40 (statement)


State 131

   41 statement: return_stat . SEMICOLON

    SEMICOLON  shift, and go to state 148


State 132

   42 func_call: identifier . O_ROUND_BRACES call_args C_ROUND_BRACES
   46 assignment: identifier . ASSIGN word
   47           | identifier . ASSIGN expr
   48           | identifier . ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | identifier . ASSIGN func_call
   64 increment: identifier . INCR
   90 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    O_ROUND_BRACES   shift, and go to state 78
    DOT              shift, and go to state 27
    ASSIGN           shift, and go to state 31
    INCR             shift, and go to state 79


State 133

   16 inizialization_list: O_CURLY_BRACES inizialization_list COMMA inizialization_list C_CURLY_BRACES .

    $default  reduce using rule 16 (inizialization_list)


State 134

   50 expr: . expr ADD expr
   51     | . expr SUB expr
   52     | . expr TIMES expr
   53     | . expr DIVIDE expr
   54     | . SUB expr
   55     | . increment
   56     | . expr EQOP expr
   57     | . expr RELOP expr
   58     | . expr AND expr
   59     | . expr OR expr
   60     | . NOT expr
   61     | . O_ROUND_BRACES expr C_ROUND_BRACES
   62     | . number
   63     | . identifier
   64 increment: . identifier INCR
   72 if_stat: IF O_ROUND_BRACES . expr C_ROUND_BRACES block
   73        | IF O_ROUND_BRACES . expr C_ROUND_BRACES block ELSE block
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   98 number: . ICONST
   99       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 149
    increment   go to state 50
    identifier  go to state 67
    number      go to state 53


State 135

   46 assignment: . identifier ASSIGN word
   47           | . identifier ASSIGN expr
   48           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | . identifier ASSIGN func_call
   76 for_stat: FOR O_ROUND_BRACES . init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   77 init_for: . %empty  [COMMA, SEMICOLON]
   78         | . assignment
   79         | . init_for COMMA init_for
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 77 (init_for)

    assignment  go to state 150
    init_for    go to state 151
    identifier  go to state 152


State 136

   65 printf_stat: PRINTF O_ROUND_BRACES . word C_ROUND_BRACES
   66            | PRINTF O_ROUND_BRACES . STRCONST COMMA printed_var C_ROUND_BRACES
   96 word: . CCONST
   97     | . STRCONST

    CCONST    shift, and go to state 46
    STRCONST  shift, and go to state 153

    word  go to state 154


State 137

   69 scanf_stat: SCANF O_ROUND_BRACES . STRCONST COMMA retrieved_var C_ROUND_BRACES

    STRCONST  shift, and go to state 155


State 138

   84 return_stat: RETURN identifier .  [SEMICOLON]
   90 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27

    $default  reduce using rule 84 (return_stat)


State 139

   83 return_stat: RETURN const .

    $default  reduce using rule 83 (return_stat)


State 140

   30 body: declarations statements .  [C_CURLY_BRACES]
   32 statements: statements . statement
   33 statement: . SEMICOLON
   34          | . func_call SEMICOLON
   35          | . assignment SEMICOLON
   36          | . increment SEMICOLON
   37          | . printf_stat SEMICOLON
   38          | . scanf_stat SEMICOLON
   39          | . if_stat
   40          | . for_stat
   41          | . return_stat SEMICOLON
   42 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES
   46 assignment: . identifier ASSIGN word
   47           | . identifier ASSIGN expr
   48           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | . identifier ASSIGN func_call
   64 increment: . identifier INCR
   65 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES
   66            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES
   69 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES
   72 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block
   73        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block
   76 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   82 return_stat: . RETURN
   83            | . RETURN const
   84            | . RETURN identifier
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    SEMICOLON   shift, and go to state 114
    IF          shift, and go to state 115
    FOR         shift, and go to state 116
    PRINTF      shift, and go to state 117
    SCANF       shift, and go to state 118
    IDENTIFIER  shift, and go to state 13
    RETURN      shift, and go to state 119

    $default  reduce using rule 30 (body)

    statement    go to state 142
    func_call    go to state 124
    assignment   go to state 125
    increment    go to state 126
    printf_stat  go to state 127
    scanf_stat   go to state 128
    if_stat      go to state 129
    for_stat     go to state 130
    return_stat  go to state 131
    identifier   go to state 132


State 141

   21 func_definition: var_type identifier @1 O_ROUND_BRACES argument_list C_ROUND_BRACES O_CURLY_BRACES body C_CURLY_BRACES .

    $default  reduce using rule 21 (func_definition)


State 142

   32 statements: statements statement .

    $default  reduce using rule 32 (statements)


State 143

   34 statement: func_call SEMICOLON .

    $default  reduce using rule 34 (statement)


State 144

   35 statement: assignment SEMICOLON .

    $default  reduce using rule 35 (statement)


State 145

   36 statement: increment SEMICOLON .

    $default  reduce using rule 36 (statement)


State 146

   37 statement: printf_stat SEMICOLON .

    $default  reduce using rule 37 (statement)


State 147

   38 statement: scanf_stat SEMICOLON .

    $default  reduce using rule 38 (statement)


State 148

   41 statement: return_stat SEMICOLON .

    $default  reduce using rule 41 (statement)


State 149

   50 expr: expr . ADD expr
   51     | expr . SUB expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   56     | expr . EQOP expr
   57     | expr . RELOP expr
   58     | expr . AND expr
   59     | expr . OR expr
   72 if_stat: IF O_ROUND_BRACES expr . C_ROUND_BRACES block
   73        | IF O_ROUND_BRACES expr . C_ROUND_BRACES block ELSE block

    C_ROUND_BRACES  shift, and go to state 156
    ADD             shift, and go to state 70
    SUB             shift, and go to state 71
    TIMES           shift, and go to state 72
    DIVIDE          shift, and go to state 73
    EQOP            shift, and go to state 74
    RELOP           shift, and go to state 75
    AND             shift, and go to state 76
    OR              shift, and go to state 77


State 150

   78 init_for: assignment .

    $default  reduce using rule 78 (init_for)


State 151

   76 for_stat: FOR O_ROUND_BRACES init_for . SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   79 init_for: init_for . COMMA init_for

    COMMA      shift, and go to state 157
    SEMICOLON  shift, and go to state 158


State 152

   46 assignment: identifier . ASSIGN word
   47           | identifier . ASSIGN expr
   48           | identifier . ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | identifier . ASSIGN func_call
   90 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27
    ASSIGN           shift, and go to state 31


State 153

   66 printf_stat: PRINTF O_ROUND_BRACES STRCONST . COMMA printed_var C_ROUND_BRACES
   97 word: STRCONST .  [C_ROUND_BRACES]

    COMMA  shift, and go to state 159

    $default  reduce using rule 97 (word)


State 154

   65 printf_stat: PRINTF O_ROUND_BRACES word . C_ROUND_BRACES

    C_ROUND_BRACES  shift, and go to state 160


State 155

   69 scanf_stat: SCANF O_ROUND_BRACES STRCONST . COMMA retrieved_var C_ROUND_BRACES

    COMMA  shift, and go to state 161


State 156

   33 statement: . SEMICOLON
   34          | . func_call SEMICOLON
   35          | . assignment SEMICOLON
   36          | . increment SEMICOLON
   37          | . printf_stat SEMICOLON
   38          | . scanf_stat SEMICOLON
   39          | . if_stat
   40          | . for_stat
   41          | . return_stat SEMICOLON
   42 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES
   46 assignment: . identifier ASSIGN word
   47           | . identifier ASSIGN expr
   48           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | . identifier ASSIGN func_call
   64 increment: . identifier INCR
   65 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES
   66            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES
   69 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES
   72 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block
   72        | IF O_ROUND_BRACES expr C_ROUND_BRACES . block
   73        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block
   73        | IF O_ROUND_BRACES expr C_ROUND_BRACES . block ELSE block
   74 block: . statement
   75      | . O_CURLY_BRACES statements C_CURLY_BRACES
   76 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   82 return_stat: . RETURN
   83            | . RETURN const
   84            | . RETURN identifier
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    O_CURLY_BRACES  shift, and go to state 162
    SEMICOLON       shift, and go to state 114
    IF              shift, and go to state 115
    FOR             shift, and go to state 116
    PRINTF          shift, and go to state 117
    SCANF           shift, and go to state 118
    IDENTIFIER      shift, and go to state 13
    RETURN          shift, and go to state 119

    statement    go to state 163
    func_call    go to state 124
    assignment   go to state 125
    increment    go to state 126
    printf_stat  go to state 127
    scanf_stat   go to state 128
    if_stat      go to state 129
    block        go to state 164
    for_stat     go to state 130
    return_stat  go to state 131
    identifier   go to state 132


State 157

   46 assignment: . identifier ASSIGN word
   47           | . identifier ASSIGN expr
   48           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | . identifier ASSIGN func_call
   77 init_for: . %empty  [COMMA, SEMICOLON]
   78         | . assignment
   79         | . init_for COMMA init_for
   79         | init_for COMMA . init_for
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 77 (init_for)

    assignment  go to state 150
    init_for    go to state 165
    identifier  go to state 152


State 158

   50 expr: . expr ADD expr
   51     | . expr SUB expr
   52     | . expr TIMES expr
   53     | . expr DIVIDE expr
   54     | . SUB expr
   55     | . increment
   56     | . expr EQOP expr
   57     | . expr RELOP expr
   58     | . expr AND expr
   59     | . expr OR expr
   60     | . NOT expr
   61     | . O_ROUND_BRACES expr C_ROUND_BRACES
   62     | . number
   63     | . identifier
   64 increment: . identifier INCR
   76 for_stat: FOR O_ROUND_BRACES init_for SEMICOLON . expr SEMICOLON incr_for C_ROUND_BRACES block
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   98 number: . ICONST
   99       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 166
    increment   go to state 50
    identifier  go to state 67
    number      go to state 53


State 159

   66 printf_stat: PRINTF O_ROUND_BRACES STRCONST COMMA . printed_var C_ROUND_BRACES
   67 printed_var: . identifier
   68            | . printed_var COMMA identifier
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    printed_var  go to state 167
    identifier   go to state 168


State 160

   65 printf_stat: PRINTF O_ROUND_BRACES word C_ROUND_BRACES .

    $default  reduce using rule 65 (printf_stat)


State 161

   69 scanf_stat: SCANF O_ROUND_BRACES STRCONST COMMA . retrieved_var C_ROUND_BRACES
   70 retrieved_var: . E_COMM identifier
   71              | . retrieved_var COMMA E_COMM identifier

    E_COMM  shift, and go to state 169

    retrieved_var  go to state 170


State 162

   31 statements: . statement
   32           | . statements statement
   33 statement: . SEMICOLON
   34          | . func_call SEMICOLON
   35          | . assignment SEMICOLON
   36          | . increment SEMICOLON
   37          | . printf_stat SEMICOLON
   38          | . scanf_stat SEMICOLON
   39          | . if_stat
   40          | . for_stat
   41          | . return_stat SEMICOLON
   42 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES
   46 assignment: . identifier ASSIGN word
   47           | . identifier ASSIGN expr
   48           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | . identifier ASSIGN func_call
   64 increment: . identifier INCR
   65 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES
   66            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES
   69 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES
   72 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block
   73        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block
   75 block: O_CURLY_BRACES . statements C_CURLY_BRACES
   76 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   82 return_stat: . RETURN
   83            | . RETURN const
   84            | . RETURN identifier
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    SEMICOLON   shift, and go to state 114
    IF          shift, and go to state 115
    FOR         shift, and go to state 116
    PRINTF      shift, and go to state 117
    SCANF       shift, and go to state 118
    IDENTIFIER  shift, and go to state 13
    RETURN      shift, and go to state 119

    statements   go to state 171
    statement    go to state 123
    func_call    go to state 124
    assignment   go to state 125
    increment    go to state 126
    printf_stat  go to state 127
    scanf_stat   go to state 128
    if_stat      go to state 129
    for_stat     go to state 130
    return_stat  go to state 131
    identifier   go to state 132


State 163

   74 block: statement .

    $default  reduce using rule 74 (block)


State 164

   72 if_stat: IF O_ROUND_BRACES expr C_ROUND_BRACES block .  [C_CURLY_BRACES, SEMICOLON, IF, FOR, PRINTF, SCANF, IDENTIFIER, RETURN]
   73        | IF O_ROUND_BRACES expr C_ROUND_BRACES block . ELSE block

    ELSE  shift, and go to state 172

    $default  reduce using rule 72 (if_stat)

    Conflict between rule 72 and token ELSE resolved as shift (IFX < ELSE).


State 165

   79 init_for: init_for . COMMA init_for
   79         | init_for COMMA init_for .  [COMMA, SEMICOLON]

    $default  reduce using rule 79 (init_for)

    Conflict between rule 79 and token COMMA resolved as reduce (%left COMMA).


State 166

   50 expr: expr . ADD expr
   51     | expr . SUB expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   56     | expr . EQOP expr
   57     | expr . RELOP expr
   58     | expr . AND expr
   59     | expr . OR expr
   76 for_stat: FOR O_ROUND_BRACES init_for SEMICOLON expr . SEMICOLON incr_for C_ROUND_BRACES block

    SEMICOLON  shift, and go to state 173
    ADD        shift, and go to state 70
    SUB        shift, and go to state 71
    TIMES      shift, and go to state 72
    DIVIDE     shift, and go to state 73
    EQOP       shift, and go to state 74
    RELOP      shift, and go to state 75
    AND        shift, and go to state 76
    OR         shift, and go to state 77


State 167

   66 printf_stat: PRINTF O_ROUND_BRACES STRCONST COMMA printed_var . C_ROUND_BRACES
   68 printed_var: printed_var . COMMA identifier

    C_ROUND_BRACES  shift, and go to state 174
    COMMA           shift, and go to state 175


State 168

   67 printed_var: identifier .  [C_ROUND_BRACES, COMMA]
   90 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27

    $default  reduce using rule 67 (printed_var)


State 169

   70 retrieved_var: E_COMM . identifier
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    identifier  go to state 176


State 170

   69 scanf_stat: SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var . C_ROUND_BRACES
   71 retrieved_var: retrieved_var . COMMA E_COMM identifier

    C_ROUND_BRACES  shift, and go to state 177
    COMMA           shift, and go to state 178


State 171

   32 statements: statements . statement
   33 statement: . SEMICOLON
   34          | . func_call SEMICOLON
   35          | . assignment SEMICOLON
   36          | . increment SEMICOLON
   37          | . printf_stat SEMICOLON
   38          | . scanf_stat SEMICOLON
   39          | . if_stat
   40          | . for_stat
   41          | . return_stat SEMICOLON
   42 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES
   46 assignment: . identifier ASSIGN word
   47           | . identifier ASSIGN expr
   48           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | . identifier ASSIGN func_call
   64 increment: . identifier INCR
   65 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES
   66            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES
   69 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES
   72 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block
   73        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block
   75 block: O_CURLY_BRACES statements . C_CURLY_BRACES
   76 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   82 return_stat: . RETURN
   83            | . RETURN const
   84            | . RETURN identifier
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    C_CURLY_BRACES  shift, and go to state 179
    SEMICOLON       shift, and go to state 114
    IF              shift, and go to state 115
    FOR             shift, and go to state 116
    PRINTF          shift, and go to state 117
    SCANF           shift, and go to state 118
    IDENTIFIER      shift, and go to state 13
    RETURN          shift, and go to state 119

    statement    go to state 142
    func_call    go to state 124
    assignment   go to state 125
    increment    go to state 126
    printf_stat  go to state 127
    scanf_stat   go to state 128
    if_stat      go to state 129
    for_stat     go to state 130
    return_stat  go to state 131
    identifier   go to state 132


State 172

   33 statement: . SEMICOLON
   34          | . func_call SEMICOLON
   35          | . assignment SEMICOLON
   36          | . increment SEMICOLON
   37          | . printf_stat SEMICOLON
   38          | . scanf_stat SEMICOLON
   39          | . if_stat
   40          | . for_stat
   41          | . return_stat SEMICOLON
   42 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES
   46 assignment: . identifier ASSIGN word
   47           | . identifier ASSIGN expr
   48           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | . identifier ASSIGN func_call
   64 increment: . identifier INCR
   65 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES
   66            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES
   69 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES
   72 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block
   73        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block
   73        | IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE . block
   74 block: . statement
   75      | . O_CURLY_BRACES statements C_CURLY_BRACES
   76 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   82 return_stat: . RETURN
   83            | . RETURN const
   84            | . RETURN identifier
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    O_CURLY_BRACES  shift, and go to state 162
    SEMICOLON       shift, and go to state 114
    IF              shift, and go to state 115
    FOR             shift, and go to state 116
    PRINTF          shift, and go to state 117
    SCANF           shift, and go to state 118
    IDENTIFIER      shift, and go to state 13
    RETURN          shift, and go to state 119

    statement    go to state 163
    func_call    go to state 124
    assignment   go to state 125
    increment    go to state 126
    printf_stat  go to state 127
    scanf_stat   go to state 128
    if_stat      go to state 129
    block        go to state 180
    for_stat     go to state 130
    return_stat  go to state 131
    identifier   go to state 132


State 173

   50 expr: . expr ADD expr
   51     | . expr SUB expr
   52     | . expr TIMES expr
   53     | . expr DIVIDE expr
   54     | . SUB expr
   55     | . increment
   56     | . expr EQOP expr
   57     | . expr RELOP expr
   58     | . expr AND expr
   59     | . expr OR expr
   60     | . NOT expr
   61     | . O_ROUND_BRACES expr C_ROUND_BRACES
   62     | . number
   63     | . identifier
   64 increment: . identifier INCR
   76 for_stat: FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON . incr_for C_ROUND_BRACES block
   80 incr_for: . expr
   81         | . incr_for COMMA expr
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   98 number: . ICONST
   99       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 181
    increment   go to state 50
    incr_for    go to state 182
    identifier  go to state 67
    number      go to state 53


State 174

   66 printf_stat: PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES .

    $default  reduce using rule 66 (printf_stat)


State 175

   68 printed_var: printed_var COMMA . identifier
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    identifier  go to state 183


State 176

   70 retrieved_var: E_COMM identifier .  [C_ROUND_BRACES, COMMA]
   90 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27

    $default  reduce using rule 70 (retrieved_var)


State 177

   69 scanf_stat: SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES .

    $default  reduce using rule 69 (scanf_stat)


State 178

   71 retrieved_var: retrieved_var COMMA . E_COMM identifier

    E_COMM  shift, and go to state 184


State 179

   75 block: O_CURLY_BRACES statements C_CURLY_BRACES .

    $default  reduce using rule 75 (block)


State 180

   73 if_stat: IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block .

    $default  reduce using rule 73 (if_stat)


State 181

   50 expr: expr . ADD expr
   51     | expr . SUB expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   56     | expr . EQOP expr
   57     | expr . RELOP expr
   58     | expr . AND expr
   59     | expr . OR expr
   80 incr_for: expr .  [C_ROUND_BRACES, COMMA]

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73
    EQOP    shift, and go to state 74
    RELOP   shift, and go to state 75
    AND     shift, and go to state 76
    OR      shift, and go to state 77

    $default  reduce using rule 80 (incr_for)


State 182

   76 for_stat: FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for . C_ROUND_BRACES block
   81 incr_for: incr_for . COMMA expr

    C_ROUND_BRACES  shift, and go to state 185
    COMMA           shift, and go to state 186


State 183

   68 printed_var: printed_var COMMA identifier .  [C_ROUND_BRACES, COMMA]
   90 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27

    $default  reduce using rule 68 (printed_var)


State 184

   71 retrieved_var: retrieved_var COMMA E_COMM . identifier
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    IDENTIFIER  shift, and go to state 13

    identifier  go to state 187


State 185

   33 statement: . SEMICOLON
   34          | . func_call SEMICOLON
   35          | . assignment SEMICOLON
   36          | . increment SEMICOLON
   37          | . printf_stat SEMICOLON
   38          | . scanf_stat SEMICOLON
   39          | . if_stat
   40          | . for_stat
   41          | . return_stat SEMICOLON
   42 func_call: . identifier O_ROUND_BRACES call_args C_ROUND_BRACES
   46 assignment: . identifier ASSIGN word
   47           | . identifier ASSIGN expr
   48           | . identifier ASSIGN O_CURLY_BRACES inizialization_list C_CURLY_BRACES
   49           | . identifier ASSIGN func_call
   64 increment: . identifier INCR
   65 printf_stat: . PRINTF O_ROUND_BRACES word C_ROUND_BRACES
   66            | . PRINTF O_ROUND_BRACES STRCONST COMMA printed_var C_ROUND_BRACES
   69 scanf_stat: . SCANF O_ROUND_BRACES STRCONST COMMA retrieved_var C_ROUND_BRACES
   72 if_stat: . IF O_ROUND_BRACES expr C_ROUND_BRACES block
   73        | . IF O_ROUND_BRACES expr C_ROUND_BRACES block ELSE block
   74 block: . statement
   75      | . O_CURLY_BRACES statements C_CURLY_BRACES
   76 for_stat: . FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block
   76         | FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES . block
   82 return_stat: . RETURN
   83            | . RETURN const
   84            | . RETURN identifier
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier

    O_CURLY_BRACES  shift, and go to state 162
    SEMICOLON       shift, and go to state 114
    IF              shift, and go to state 115
    FOR             shift, and go to state 116
    PRINTF          shift, and go to state 117
    SCANF           shift, and go to state 118
    IDENTIFIER      shift, and go to state 13
    RETURN          shift, and go to state 119

    statement    go to state 163
    func_call    go to state 124
    assignment   go to state 125
    increment    go to state 126
    printf_stat  go to state 127
    scanf_stat   go to state 128
    if_stat      go to state 129
    block        go to state 188
    for_stat     go to state 130
    return_stat  go to state 131
    identifier   go to state 132


State 186

   50 expr: . expr ADD expr
   51     | . expr SUB expr
   52     | . expr TIMES expr
   53     | . expr DIVIDE expr
   54     | . SUB expr
   55     | . increment
   56     | . expr EQOP expr
   57     | . expr RELOP expr
   58     | . expr AND expr
   59     | . expr OR expr
   60     | . NOT expr
   61     | . O_ROUND_BRACES expr C_ROUND_BRACES
   62     | . number
   63     | . identifier
   64 increment: . identifier INCR
   81 incr_for: incr_for COMMA . expr
   89 identifier: . IDENTIFIER
   90           | . identifier O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | . identifier O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | . identifier DOT identifier
   98 number: . ICONST
   99       | . FCONST

    O_ROUND_BRACES  shift, and go to state 41
    SUB             shift, and go to state 42
    NOT             shift, and go to state 43
    IDENTIFIER      shift, and go to state 13
    ICONST          shift, and go to state 44
    FCONST          shift, and go to state 45

    expr        go to state 189
    increment   go to state 50
    identifier  go to state 67
    number      go to state 53


State 187

   71 retrieved_var: retrieved_var COMMA E_COMM identifier .  [C_ROUND_BRACES, COMMA]
   90 identifier: identifier . O_SQUARE_BRACES ICONST C_SQUARE_BRACES
   91           | identifier . O_SQUARE_BRACES identifier C_SQUARE_BRACES
   92           | identifier . DOT identifier

    O_SQUARE_BRACES  shift, and go to state 26
    DOT              shift, and go to state 27

    $default  reduce using rule 71 (retrieved_var)


State 188

   76 for_stat: FOR O_ROUND_BRACES init_for SEMICOLON expr SEMICOLON incr_for C_ROUND_BRACES block .

    $default  reduce using rule 76 (for_stat)


State 189

   50 expr: expr . ADD expr
   51     | expr . SUB expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   56     | expr . EQOP expr
   57     | expr . RELOP expr
   58     | expr . AND expr
   59     | expr . OR expr
   81 incr_for: incr_for COMMA expr .  [C_ROUND_BRACES, COMMA]

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73
    EQOP    shift, and go to state 74
    RELOP   shift, and go to state 75
    AND     shift, and go to state 76
    OR      shift, and go to state 77

    $default  reduce using rule 81 (incr_for)
